load("//bazel:swift_rules.bzl", "umbra_swift_library")

umbra_swift_library(
    name = "APIServices",
    srcs = [
        "APIServiceActor.swift",
        "AlphaAPIService.swift",
        "AlphaAPIServiceFactory.swift",
        "AlphaDomainTypes.swift",
        "Domains/BackupDomainHandler.swift",
        "Domains/RepositoryDomainHandler.swift",
        "Domains/SecurityDomainHandler.swift",
        "Extensions/RepositoryExtensions.swift",
        "Models/APIConfigurationDTO.swift",
        "Types/APIError.swift",
        "Types/APIResult.swift",
        "Types/APIConfigurationOptions.swift",
        "Types/BackupAPIOperations.swift",
        "Types/RepositoryAPIOperations.swift",
        "Types/SecurityAPIOperations.swift",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//packages/UmbraCoreTypes/Sources/CoreDTOs",
        "//packages/UmbraCoreTypes/Sources/UmbraErrors",
        "//packages/UmbraCoreTypes/Sources/DateTimeTypes",
        "//packages/UmbraCoreTypes/Sources/LoggingTypes",
        "//packages/UmbraCoreTypes/Sources/APIInterfaces",
        "//packages/UmbraCoreTypes/Sources/CoreSecurityTypes",
        "//packages/UmbraCoreTypes/Sources/DomainSecurityTypes",
        "//packages/UmbraCoreTypes/Sources/CryptoTypes",
        "//packages/UmbraCoreTypes/Sources/ErrorCoreTypes",
        "//packages/UmbraInterfaces/Sources/LoggingInterfaces",
        "//packages/UmbraInterfaces/Sources/APIInterfaces",
        "//packages/UmbraInterfaces/Sources/SecurityInterfaces",
        "//packages/UmbraInterfaces/Sources/SecurityCoreInterfaces",
        "//packages/UmbraInterfaces/Sources/CryptoInterfaces",
        "//packages/UmbraInterfaces/Sources/KeychainInterfaces",
        "//packages/UmbraInterfaces/Sources/NetworkInterfaces",
        "//packages/UmbraInterfaces/Sources/RepositoryInterfaces",
        "//packages/UmbraInterfaces/Sources/BackupInterfaces",
        "//packages/UmbraImplementations/Sources/SecurityUtils",
        "//packages/UmbraImplementations/Sources/LoggingServices",
    ],
)

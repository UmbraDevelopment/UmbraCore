# Error handling improvements:
# This module has been updated to use fully qualified error types instead of typealiases.
# All error mapping should follow the UmbraErrors.* canonical hierarchy.
# Ensure proper error propagation and mapping when adding new code.

# Note: URL+SecurityScoped.swift has been migrated to the Alpha Dot Five architecture
# using actor-based implementation in:
# - packages/UmbraImplementations/Sources/SecurityUtils/SecurityBookmarkActor.swift
# - packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols/SecurityBookmarkProtocol.swift

load("//bazel:swift_rules.bzl", "umbra_swift_library")

umbra_swift_library(
    name = "UmbraSecurity",
    srcs = glob(
        [
            "*.swift",
            "**/*.swift",
        ],
        allow_empty = False,
        exclude = [
            "**/Tests/**",
            "**/*Test.swift",
            "**/*.generated.swift",
            # This file has been migrated to SecurityUtils
            "URL+SecurityScoped.swift",
        ],
        exclude_directories = 1,
    ),
    deps = [
        "//Sources/CoreTypesInterfaces",
        "//Sources/Security/Core/Types/Bridge:SecurityBridgeTypes",
        "//Sources/SecurityInterfaces",
        "//Sources/SecurityTypes",
        "//Sources/UmbraCoreTypes",
        "//Sources/UmbraCoreTypes/Sources:UmbraCoreTypes",
        "//Sources/UmbraErrors",
        "//Sources/UmbraErrors/Core:UmbraErrorsCore",
        "//Sources/XPCProtocolsCore",
    ],
)

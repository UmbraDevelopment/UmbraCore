{"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/dev.mpy.SecurityInterfaces\/documentation\/SecurityInterfaces-Documentation\/ErrorHandlingGuide","doc:\/\/dev.mpy.SecurityInterfaces\/documentation\/SecurityInterfaces-Documentation\/TypealiasRefactoring"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The UmbraCore security stack uses several error types to represent failures across different layers of the security architecture. This guide explains how to migrate between these error types while maintaining compatibility and clear error handling."}],"type":"paragraph"},{"level":2,"anchor":"Error-Types-Overview","text":"Error Types Overview","type":"heading"},{"inlineContent":[{"text":"UmbraCore security operations typically use these error types:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"UmbraErrors.Security.Core"}],"type":"strong"},{"text":": Core error types shared across the UmbraCore framework","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"SecurityInterfacesError"}],"type":"strong"},{"type":"text","text":": Errors specific to the SecurityInterfaces module"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"NSError\/Error","type":"text"}],"type":"strong"},{"text":": Platform-level errors returned by Foundation APIs","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Migration-Paths","text":"Migration Paths","type":"heading"},{"level":3,"anchor":"UmbraErrorsSecurityCore-to-SecurityInterfacesError","text":"UmbraErrors.Security.Core to SecurityInterfacesError","type":"heading"},{"inlineContent":[{"type":"text","text":"When receiving a core error but needing to work within the SecurityInterfaces API:"}],"type":"paragraph"},{"syntax":"swift","code":["let coreError: UmbraErrors.Security.Core = .authenticationFailed","let interfaceError = SecurityInterfacesError(from: coreError)"],"type":"codeListing"},{"inlineContent":[{"text":"This initializer handles the conversion of matching error types. For core errors without a direct mapping, theyâ€™ll be wrapped:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let customCoreError: UmbraErrors.Security.Core = .custom(\"Unknown error\")","let wrappedError = SecurityInterfacesError(from: customCoreError)","\/\/ Results in SecurityInterfacesError.wrapped(customCoreError)"],"type":"codeListing"},{"level":3,"anchor":"SecurityInterfacesError-to-UmbraErrorsSecurityCore","text":"SecurityInterfacesError to UmbraErrors.Security.Core","type":"heading"},{"inlineContent":[{"type":"text","text":"When you have a SecurityInterfacesError but need to convert back to a core error:"}],"type":"paragraph"},{"syntax":"swift","code":["let interfaceError: SecurityInterfacesError = .encryptionFailed(reason: \"Invalid key\")","if let coreError = interfaceError.toCoreError() {","    \/\/ We successfully converted to a core error","} else {","    \/\/ This interface error doesn't have a core equivalent","}"],"type":"codeListing"},{"level":3,"anchor":"Platform-Errors-to-SecurityInterfacesError","text":"Platform Errors to SecurityInterfacesError","type":"heading"},{"inlineContent":[{"type":"text","text":"For platform errors (like NSError), use specific conversion methods:"}],"type":"paragraph"},{"syntax":"swift","code":["let nsError = NSError(domain: NSOSStatusErrorDomain, code: -67050, userInfo: nil)","let securityError = SecurityInterfacesError(from: nsError)"],"type":"codeListing"},{"level":2,"anchor":"Best-Practices","text":"Best Practices","type":"heading"},{"level":3,"anchor":"Centralized-Error-Conversion","text":"Centralized Error Conversion","type":"heading"},{"inlineContent":[{"text":"Implement central error conversion methods to ensure consistent mapping:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["class SecurityErrorConverter {","    static func convertToCoreError(_ error: Error) -> UmbraErrors.Security.Core {","        if let interfaceError = error as? SecurityInterfacesError,","           let coreError = interfaceError.toCoreError() {","            return coreError","        }","        return .unknown","    }","}"],"type":"codeListing"},{"level":3,"anchor":"Preserving-Error-Context","text":"Preserving Error Context","type":"heading"},{"inlineContent":[{"text":"When converting errors, preserve as much context as possible:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["func convertToInterfaceError(_ error: Error) -> SecurityInterfacesError {","    if let nsError = error as NSError {","        if nsError.domain == NSOSStatusErrorDomain {","            switch nsError.code {","            case -25293:","                return .authenticationFailed","            \/\/ More cases...","            }","        }","    }","    return .unknown(error.localizedDescription)","}"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/dev.mpy.SecurityInterfaces\/documentation\/SecurityInterfaces-Documentation"]]},"kind":"article","identifier":{"url":"doc:\/\/dev.mpy.SecurityInterfaces\/documentation\/SecurityInterfaces-Documentation\/SecurityErrorMigration","interfaceLanguage":"swift"},"metadata":{"title":"Security Error Migration Guide","role":"article","roleHeading":"Article"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Learn how to migrate between different error types in the UmbraCore security stack.","type":"text"}],"references":{"doc://dev.mpy.SecurityInterfaces/documentation/SecurityInterfaces-Documentation":{"url":"\/documentation\/securityinterfaces-documentation","identifier":"doc:\/\/dev.mpy.SecurityInterfaces\/documentation\/SecurityInterfaces-Documentation","type":"topic","role":"collection","title":"SecurityInterfaces Documentation","kind":"article","abstract":[]},"doc://dev.mpy.SecurityInterfaces/documentation/SecurityInterfaces-Documentation/TypealiasRefactoring":{"type":"topic","role":"article","url":"\/documentation\/securityinterfaces-documentation\/typealiasrefactoring","abstract":[{"text":"Learn how to refactor typealiases in the SecurityInterfaces module to improve type clarity.","type":"text"}],"title":"Typealias Refactoring Guide","identifier":"doc:\/\/dev.mpy.SecurityInterfaces\/documentation\/SecurityInterfaces-Documentation\/TypealiasRefactoring","kind":"article"},"doc://dev.mpy.SecurityInterfaces/documentation/SecurityInterfaces-Documentation/ErrorHandlingGuide":{"type":"topic","role":"article","url":"\/documentation\/securityinterfaces-documentation\/errorhandlingguide","abstract":[{"text":"Learn how to properly handle errors in the SecurityInterfaces module.","type":"text"}],"kind":"article","identifier":"doc:\/\/dev.mpy.SecurityInterfaces\/documentation\/SecurityInterfaces-Documentation\/ErrorHandlingGuide","title":"Handling Security Errors"}}}
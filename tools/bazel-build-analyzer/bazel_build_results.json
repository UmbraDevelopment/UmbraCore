[
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:41:23.940122+01:00",
    "end_time": "2025-04-09T13:41:29.488676+01:00",
    "duration": "5.548558709s",
    "output": "INFO: Invocation ID: 795177de-6d7f-4d9e-9f59-cddb1d4f1170\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces (1 packages loaded)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces (4 packages loaded, 7 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces (4 packages loaded, 7 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces (107 packages loaded, 2825 targets configured).\nINFO: From Compiling Swift module //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes:\npackages/UmbraCoreTypes/Sources/FileSystemTypes/TemporaryFileOptions.swift:37:23: warning: static property 'default' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n 6 |  Options for creating temporary files and directories.\n 7 |  */\n 8 | public struct TemporaryFileOptions {\n   |               `- note: consider making struct 'TemporaryFileOptions' conform to the 'Sendable' protocol\n 9 |     /// The parent directory where the temporary file or directory should be created\n10 |     public let directory: FilePath?\n   :\n35 |     \n36 |     /// Default options for temporary files and directories\n37 |     public static let `default` = TemporaryFileOptions()\n   |                       |- warning: static property 'default' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n   |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'\n   |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism\n38 |     \n39 |     /// Options for secure temporary files with complete protection\n\npackages/UmbraCoreTypes/Sources/FileSystemTypes/TemporaryFileOptions.swift:40:23: warning: static property 'secure' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n 6 |  Options for creating temporary files and directories.\n 7 |  */\n 8 | public struct TemporaryFileOptions {\n   |               `- note: consider making struct 'TemporaryFileOptions' conform to the 'Sendable' protocol\n 9 |     /// The parent directory where the temporary file or directory should be created\n10 |     public let directory: FilePath?\n   :\n38 |     \n39 |     /// Options for secure temporary files with complete protection\n40 |     public static let secure = TemporaryFileOptions(\n   |                       |- warning: static property 'secure' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n   |                       |- note: add '@MainActor' to make static property 'secure' part of global actor 'MainActor'\n   |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism\n41 |         fileProtection: .complete,\n42 |         permissions: NSNumber(value: 0o600) // Read/write for owner only\n\npackages/UmbraCoreTypes/Sources/FileSystemTypes/TemporaryFileOptions.swift:46:23: warning: static property 'readOnly' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n 6 |  Options for creating temporary files and directories.\n 7 |  */\n 8 | public struct TemporaryFileOptions {\n   |               `- note: consider making struct 'TemporaryFileOptions' conform to the 'Sendable' protocol\n 9 |     /// The parent directory where the temporary file or directory should be created\n10 |     public let directory: FilePath?\n   :\n44 |     \n45 |     /// Options for read-only temporary files\n46 |     public static let readOnly = TemporaryFileOptions(\n   |                       |- warning: static property 'readOnly' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n   |                       |- note: add '@MainActor' to make static property 'readOnly' part of global actor 'MainActor'\n   |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism\n47 |         permissions: NSNumber(value: 0o400) // Read-only for owner\n48 |     )\npackages/UmbraCoreTypes/Sources/FileSystemTypes/TemporaryFileOptions.swift:37:23: warning: static property 'default' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n 6 |  Options for creating temporary files and directories.\n 7 |  */\n 8 | public struct TemporaryFileOptions {\n   |               `- note: consider making struct 'TemporaryFileOptions' conform to the 'Sendable' protocol\n 9 |     /// The parent directory where the temporary file or directory should be created\n10 |     public let directory: FilePath?\n   :\n35 |     \n36 |     /// Default options for temporary files and directories\n37 |     public static let `default` = TemporaryFileOptions()\n   |                       |- warning: static property 'default' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n   |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'\n   |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism\n38 |     \n39 |     /// Options for secure temporary files with complete protection\n\npackages/UmbraCoreTypes/Sources/FileSystemTypes/TemporaryFileOptions.swift:40:23: warning: static property 'secure' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n 6 |  Options for creating temporary files and directories.\n 7 |  */\n 8 | public struct TemporaryFileOptions {\n   |               `- note: consider making struct 'TemporaryFileOptions' conform to the 'Sendable' protocol\n 9 |     /// The parent directory where the temporary file or directory should be created\n10 |     public let directory: FilePath?\n   :\n38 |     \n39 |     /// Options for secure temporary files with complete protection\n40 |     public static let secure = TemporaryFileOptions(\n   |                       |- warning: static property 'secure' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n   |                       |- note: add '@MainActor' to make static property 'secure' part of global actor 'MainActor'\n   |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism\n41 |         fileProtection: .complete,\n42 |         permissions: NSNumber(value: 0o600) // Read/write for owner only\n\npackages/UmbraCoreTypes/Sources/FileSystemTypes/TemporaryFileOptions.swift:46:23: warning: static property 'readOnly' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n 6 |  Options for creating temporary files and directories.\n 7 |  */\n 8 | public struct TemporaryFileOptions {\n   |               `- note: consider making struct 'TemporaryFileOptions' conform to the 'Sendable' protocol\n 9 |     /// The parent directory where the temporary file or directory should be created\n10 |     public let directory: FilePath?\n   :\n44 |     \n45 |     /// Options for read-only temporary files\n46 |     public static let readOnly = TemporaryFileOptions(\n   |                       |- warning: static property 'readOnly' is not concurrency-safe because non-'Sendable' type 'TemporaryFileOptions' may have shared mutable state; this is an error in the Swift 6 language mode\n   |                       |- note: add '@MainActor' to make static property 'readOnly' part of global actor 'MainActor'\n   |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism\n47 |         permissions: NSNumber(value: 0o400) // Read-only for owner\n48 |     )\n[62 / 65] [Prepa] Compiling Swift module //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs\n[62 / 65] Compiling Swift module //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs; 1s disk-cache, worker\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/APIInterfaces/APIInterfaces.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/APIInterfaces/APIInterfaces.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/APIInterfaces/APIInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/APIInterfaces/libAPIInterfaces.a\nINFO: Elapsed time: 4.814s, Critical Path: 2.94s\nINFO: 39 processes: 27 action cache hit, 35 disk cache hit, 1 internal, 3 worker.\nINFO: Build completed successfully, 39 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:41:29.488689+01:00",
    "end_time": "2025-04-09T13:41:30.7969+01:00",
    "duration": "1.308212375s",
    "output": "INFO: Invocation ID: a3d24555-ee57-4f3c-a0ae-404cf53b71a7\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces (1 packages loaded, 6 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/ConfigInterfaces/ConfigInterfaces.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/ConfigInterfaces/ConfigInterfaces.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/ConfigInterfaces/ConfigInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/ConfigInterfaces/libConfigInterfaces.a\nINFO: Elapsed time: 0.553s, Critical Path: 0.43s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs",
    "success": true,
    "start_time": "2025-04-09T13:41:30.796925+01:00",
    "end_time": "2025-04-09T13:41:31.602894+01:00",
    "duration": "805.969709ms",
    "output": "INFO: Invocation ID: b2b71e17-d892-475a-b42b-4eabb15a1bdb\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/CoreDTOs.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/CoreDTOs.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/CoreDTOs.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/libCoreDTOs.a\nINFO: Elapsed time: 0.102s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests",
    "success": true,
    "start_time": "2025-04-09T13:41:31.602899+01:00",
    "end_time": "2025-04-09T13:41:34.237003+01:00",
    "duration": "2.634106791s",
    "output": "INFO: Invocation ID: 8b07d363-f027-4a9d-ac8c-251d01498777\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests (0 packages loaded, 1 target configured).\n[3 / 4] [Prepa] Linking packages/UmbraCoreTypes/Sources/CoreDTOs/libCoreDTOsTests.a\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/CoreDTOsTests.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/CoreDTOsTests.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/CoreDTOsTests.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreDTOs/libCoreDTOsTests.a\nINFO: Elapsed time: 1.745s, Critical Path: 1.64s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:41:34.237007+01:00",
    "end_time": "2025-04-09T13:41:35.552879+01:00",
    "duration": "1.315873334s",
    "output": "INFO: Invocation ID: 817e030a-5f0c-46f8-afde-2bbc101cef9e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces (1 packages loaded, 8 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreInterfaces/CoreInterfaces.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreInterfaces/CoreInterfaces.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreInterfaces/CoreInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreInterfaces/libCoreInterfaces.a\nINFO: Elapsed time: 0.549s, Critical Path: 0.44s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:35.552884+01:00",
    "end_time": "2025-04-09T13:41:36.425987+01:00",
    "duration": "873.10375ms",
    "output": "INFO: Invocation ID: 7dab6dfb-22e0-4092-9f9f-36af36c290f5\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreSecurityTypes/CoreSecurityTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreSecurityTypes/CoreSecurityTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreSecurityTypes/CoreSecurityTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/CoreSecurityTypes/libCoreSecurityTypes.a\nINFO: Elapsed time: 0.095s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:41:36.425993+01:00",
    "end_time": "2025-04-09T13:41:37.65781+01:00",
    "duration": "1.231818708s",
    "output": "INFO: Invocation ID: 9557a6f3-9c04-4702-83c7-9d0d8158ba6e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces (2 packages loaded, 16 targets configured).\nINFO: From Compiling Swift module //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes:\npackages/UmbraCoreTypes/Sources/CryptoTypes/SecureData.swift:25:15: warning: stored property 'storage' of 'Sendable'-conforming struct 'SecureData' has non-sendable type 'ManagedSecureStorage'; this is an error in the Swift 6 language mode\n 23 | public struct SecureData: Sendable, Equatable {\n 24 |   /// The internal data storage\n 25 |   private let storage: ManagedSecureStorage\n    |               `- warning: stored property 'storage' of 'Sendable'-conforming struct 'SecureData' has non-sendable type 'ManagedSecureStorage'; this is an error in the Swift 6 language mode\n 26 | \n 27 |   /**\n    :\n177 |  proper memory protection and zeroing when the data is no longer needed.\n178 |  */\n179 | private final class ManagedSecureStorage {\n    |                     `- note: class 'ManagedSecureStorage' does not conform to the 'Sendable' protocol\n180 |   /// The internal data storage\n181 |   private var data: Data\npackages/UmbraCoreTypes/Sources/CryptoTypes/SecureData.swift:25:15: warning: stored property 'storage' of 'Sendable'-conforming struct 'SecureData' has non-sendable type 'ManagedSecureStorage'; this is an error in the Swift 6 language mode\n 23 | public struct SecureData: Sendable, Equatable {\n 24 |   /// The internal data storage\n 25 |   private let storage: ManagedSecureStorage\n    |               `- warning: stored property 'storage' of 'Sendable'-conforming struct 'SecureData' has non-sendable type 'ManagedSecureStorage'; this is an error in the Swift 6 language mode\n 26 | \n 27 |   /**\n    :\n177 |  proper memory protection and zeroing when the data is no longer needed.\n178 |  */\n179 | private final class ManagedSecureStorage {\n    |                     `- note: class 'ManagedSecureStorage' does not conform to the 'Sendable' protocol\n180 |   /// The internal data storage\n181 |   private var data: Data\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoInterfaces/CryptoInterfaces.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoInterfaces/CryptoInterfaces.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoInterfaces/CryptoInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoInterfaces/libCryptoInterfaces.a\nINFO: Elapsed time: 0.534s, Critical Path: 0.42s\nINFO: 4 processes: 2 action cache hit, 2 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 4 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:37.657821+01:00",
    "end_time": "2025-04-09T13:41:38.54494+01:00",
    "duration": "887.119834ms",
    "output": "INFO: Invocation ID: dad84f73-9b53-4404-86da-c1235935e73d\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoTypes/CryptoTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoTypes/CryptoTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoTypes/CryptoTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/CryptoTypes/libCryptoTypes.a\nINFO: Elapsed time: 0.095s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:38.544944+01:00",
    "end_time": "2025-04-09T13:41:39.393199+01:00",
    "duration": "848.256333ms",
    "output": "INFO: Invocation ID: 39ee42b2-68b3-471f-8dd7-51f3dfc51a3f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/DateTimeTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/DateTimeTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/DateTimeTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/libDateTimeTypes.a\nINFO: Elapsed time: 0.076s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:39.393205+01:00",
    "end_time": "2025-04-09T13:41:40.227358+01:00",
    "duration": "834.153625ms",
    "output": "INFO: Invocation ID: 67987c22-f920-486d-a122-232c6c700de8\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/DomainSecurityTypes/DomainSecurityTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/DomainSecurityTypes/DomainSecurityTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/DomainSecurityTypes/DomainSecurityTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/DomainSecurityTypes/libDomainSecurityTypes.a\nINFO: Elapsed time: 0.100s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:40.227378+01:00",
    "end_time": "2025-04-09T13:41:41.329086+01:00",
    "duration": "1.101709708s",
    "output": "INFO: Invocation ID: 17ca8496-621e-49b1-8864-7848383e9d04\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes (1 packages loaded, 4 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/ErrorCoreTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/ErrorCoreTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/ErrorCoreTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/libErrorCoreTypes.a\nINFO: Elapsed time: 0.087s, Critical Path: 0.01s\nINFO: 3 processes: 1 action cache hit, 2 disk cache hit, 1 internal.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:41.32909+01:00",
    "end_time": "2025-04-09T13:41:42.584464+01:00",
    "duration": "1.255374458s",
    "output": "INFO: Invocation ID: 1b2d50fa-a8a1-4eda-a6cd-0f4d6459578b\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/FileSystemTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/FileSystemTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/FileSystemTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/libFileSystemTypes.a\nINFO: Elapsed time: 0.397s, Critical Path: 0.31s\nINFO: 2 processes: 1 internal, 1 local.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:42.584469+01:00",
    "end_time": "2025-04-09T13:41:43.414563+01:00",
    "duration": "830.094666ms",
    "output": "INFO: Invocation ID: 4e513589-e3a7-42f2-a577-780c28796c29\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes (2 packages loaded, 13 targets configured).\nINFO: From Compiling Swift module //packages/UmbraServices/Sources/LoggingServices:LoggingServices:\npackages/UmbraServices/Sources/LoggingServices/PrivacyFilteredConsoleDestination.swift:153:7: warning: default will never be executed\n151 |         #endif\n152 | \n153 |       default:\n    |       `- warning: default will never be executed\n154 |         // Default to redacting unknown privacy levels\n155 |         return \"\u003credacted\u003e\"\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/libKeyManagementTypes.a\nINFO: Elapsed time: 0.124s, Critical Path: 0.02s\nINFO: 4 processes: 2 action cache hit, 3 disk cache hit, 1 internal.\nINFO: Build completed successfully, 4 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests",
    "success": true,
    "start_time": "2025-04-09T13:41:43.414571+01:00",
    "end_time": "2025-04-09T13:41:44.238597+01:00",
    "duration": "824.02725ms",
    "output": "INFO: Invocation ID: a3ad9000-6f8b-4af7-b5af-9f15ee6b2c7a\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests (0 packages loaded, 1 target configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/libKeyManagementTypesTests.a\nINFO: Elapsed time: 0.097s, Critical Path: 0.01s\nINFO: 2 processes: 2 action cache hit, 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:44.238602+01:00",
    "end_time": "2025-04-09T13:41:45.452596+01:00",
    "duration": "1.213994959s",
    "output": "INFO: Invocation ID: 54358c43-4048-41e6-a3dc-2d4b1524fd30\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes (2 packages loaded, 9 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeychainTypes/KeychainTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeychainTypes/KeychainTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeychainTypes/KeychainTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeychainTypes/libKeychainTypes.a\nINFO: Elapsed time: 0.091s, Critical Path: 0.01s\nINFO: 4 processes: 2 action cache hit, 3 disk cache hit, 1 internal.\nINFO: Build completed successfully, 4 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:45.4526+01:00",
    "end_time": "2025-04-09T13:41:46.278603+01:00",
    "duration": "826.00325ms",
    "output": "INFO: Invocation ID: dbebb622-05db-466c-92ac-f56cf5291c5d\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/LoggingTypes/libLoggingTypes.a\nINFO: Elapsed time: 0.084s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/Notification:Notification",
    "success": true,
    "start_time": "2025-04-09T13:41:46.278648+01:00",
    "end_time": "2025-04-09T13:41:47.067837+01:00",
    "duration": "789.189125ms",
    "output": "INFO: Invocation ID: 3574e32d-3c9c-437d-8fe6-18f87fab3cb2\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Notification:Notification (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Notification:Notification (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/Notification:Notification (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/Notification:Notification up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/Notification.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/Notification.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/Notification.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/libNotification.a\nINFO: Elapsed time: 0.092s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling",
    "success": true,
    "start_time": "2025-04-09T13:41:47.067841+01:00",
    "end_time": "2025-04-09T13:41:47.871401+01:00",
    "duration": "803.560458ms",
    "output": "INFO: Invocation ID: d312350b-93f5-4b3c-81c0-843cc011b3e6\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/Scheduling.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/Scheduling.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/Scheduling.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/libScheduling.a\nINFO: Elapsed time: 0.093s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:41:47.871405+01:00",
    "end_time": "2025-04-09T13:41:48.829434+01:00",
    "duration": "958.030125ms",
    "output": "INFO: Invocation ID: e532d04b-e73b-42fd-9814-3bd04b87a468\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces (1 packages loaded, 2 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/SecurityInterfaces.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/SecurityInterfaces.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/SecurityInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/libSecurityInterfaces.a\nINFO: Elapsed time: 0.099s, Critical Path: 0.01s\nINFO: 3 processes: 1 action cache hit, 2 disk cache hit, 1 internal.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters",
    "success": true,
    "start_time": "2025-04-09T13:41:48.82944+01:00",
    "end_time": "2025-04-09T13:41:51.007878+01:00",
    "duration": "2.178440541s",
    "output": "INFO: Invocation ID: 1f62800e-b714-43af-b040-629aa1af68d0\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters (3 packages loaded, 17 targets configured).\n[6 / 8] [Prepa] Compiling Swift module //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters/SecurityInterfacesAdapters.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters/SecurityInterfacesAdapters.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters/SecurityInterfacesAdapters.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters/libSecurityInterfacesAdapters.a\nINFO: Elapsed time: 1.463s, Critical Path: 1.36s\nINFO: 5 processes: 3 action cache hit, 1 disk cache hit, 1 internal, 3 worker.\nINFO: Build completed successfully, 5 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs",
    "success": true,
    "start_time": "2025-04-09T13:41:51.007886+01:00",
    "end_time": "2025-04-09T13:41:51.887084+01:00",
    "duration": "879.198625ms",
    "output": "INFO: Invocation ID: 9ff9413c-b0ee-4dcc-8592-d875fadbfe5d\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs/SecurityInterfacesDTOs.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs/SecurityInterfacesDTOs.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs/SecurityInterfacesDTOs.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs/libSecurityInterfacesDTOs.a\nINFO: Elapsed time: 0.090s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels",
    "success": true,
    "start_time": "2025-04-09T13:41:51.88709+01:00",
    "end_time": "2025-04-09T13:41:52.998208+01:00",
    "duration": "1.111119125s",
    "output": "INFO: Invocation ID: a18fcbc5-a7ca-4e70-9611-949124079757\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels (1 packages loaded, 2 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models/SecurityInterfacesModels.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models/SecurityInterfacesModels.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models/SecurityInterfacesModels.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models/libSecurityInterfacesModels.a\nINFO: Elapsed time: 0.403s, Critical Path: 0.33s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols",
    "success": true,
    "start_time": "2025-04-09T13:41:52.998241+01:00",
    "end_time": "2025-04-09T13:41:54.032471+01:00",
    "duration": "1.034230125s",
    "output": "INFO: Invocation ID: d98d2773-1985-47c6-ace6-e4dbf2d434cf\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols/SecurityInterfacesProtocols.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols/SecurityInterfacesProtocols.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols/SecurityInterfacesProtocols.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols/libSecurityInterfacesProtocols.a\nINFO: Elapsed time: 0.078s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:54.032475+01:00",
    "end_time": "2025-04-09T13:41:54.880632+01:00",
    "duration": "848.157583ms",
    "output": "INFO: Invocation ID: d11f086a-fff1-4549-9c53-a97011613652\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types/SecurityInterfacesTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types/SecurityInterfacesTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types/SecurityInterfacesTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types/libSecurityInterfacesTypes.a\nINFO: Elapsed time: 0.084s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC",
    "success": true,
    "start_time": "2025-04-09T13:41:54.880636+01:00",
    "end_time": "2025-04-09T13:41:56.055395+01:00",
    "duration": "1.174760041s",
    "output": "INFO: Invocation ID: 0045b72b-fc75-44aa-af25-d73e1ab71e00\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC (1 packages loaded, 2 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC/SecurityInterfacesXPC.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC/SecurityInterfacesXPC.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC/SecurityInterfacesXPC.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC/libSecurityInterfacesXPC.a\nINFO: Elapsed time: 0.439s, Critical Path: 0.35s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes",
    "success": true,
    "start_time": "2025-04-09T13:41:56.0554+01:00",
    "end_time": "2025-04-09T13:41:56.861683+01:00",
    "duration": "806.283208ms",
    "output": "INFO: Invocation ID: fafffda5-fabb-4d57-9e1d-e6e4949d9745\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes (1 packages loaded, 3 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityKeyTypes/SecurityKeyTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityKeyTypes/SecurityKeyTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityKeyTypes/SecurityKeyTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/SecurityKeyTypes/libSecurityKeyTypes.a\nINFO: Elapsed time: 0.106s, Critical Path: 0.01s\nINFO: 3 processes: 1 action cache hit, 2 disk cache hit, 1 internal.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors",
    "success": true,
    "start_time": "2025-04-09T13:41:56.861688+01:00",
    "end_time": "2025-04-09T13:41:57.649004+01:00",
    "duration": "787.317292ms",
    "output": "INFO: Invocation ID: 30f70355-31de-4a18-a9dc-4c77fbe21b4d\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/UmbraErrors.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/UmbraErrors.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/UmbraErrors.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/libUmbraErrors.a\nINFO: Elapsed time: 0.088s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore",
    "success": true,
    "start_time": "2025-04-09T13:41:57.64901+01:00",
    "end_time": "2025-04-09T13:41:58.410247+01:00",
    "duration": "761.237708ms",
    "output": "INFO: Invocation ID: 54c7846c-2d06-482c-b438-bbad3ca72e0e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/libUmbraErrorsCore.a\nINFO: Elapsed time: 0.091s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs",
    "success": true,
    "start_time": "2025-04-09T13:41:58.410252+01:00",
    "end_time": "2025-04-09T13:41:59.207394+01:00",
    "duration": "797.143042ms",
    "output": "INFO: Invocation ID: 1cec2579-32b3-4b3e-b10c-61476146222c\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/UmbraErrorsDTOs.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/UmbraErrorsDTOs.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/UmbraErrorsDTOs.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/libUmbraErrorsDTOs.a\nINFO: Elapsed time: 0.098s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains",
    "success": true,
    "start_time": "2025-04-09T13:41:59.2074+01:00",
    "end_time": "2025-04-09T13:42:00.014792+01:00",
    "duration": "807.392208ms",
    "output": "INFO: Invocation ID: 18c38fef-6d6c-41d8-b33e-c3c30189bdc7\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/UmbraErrorsDomains.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/UmbraErrorsDomains.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/UmbraErrorsDomains.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/libUmbraErrorsDomains.a\nINFO: Elapsed time: 0.085s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping",
    "success": true,
    "start_time": "2025-04-09T13:42:00.014844+01:00",
    "end_time": "2025-04-09T13:42:01.301876+01:00",
    "duration": "1.287034125s",
    "output": "INFO: Invocation ID: e4a16e70-93cd-47ed-89b2-fa0757dc9c6b\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/UmbraErrorsMapping.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/UmbraErrorsMapping.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/UmbraErrorsMapping.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/libUmbraErrorsMapping.a\nINFO: Elapsed time: 0.106s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults",
    "success": true,
    "start_time": "2025-04-09T13:42:01.301883+01:00",
    "end_time": "2025-04-09T13:42:02.151441+01:00",
    "duration": "849.558625ms",
    "output": "INFO: Invocation ID: 66f6d3f3-af5c-4c23-89cb-f3f2959c0738\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/UserDefaults.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/UserDefaults.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/UserDefaults.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/libUserDefaults.a\nINFO: Elapsed time: 0.093s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters",
    "success": true,
    "start_time": "2025-04-09T13:42:02.15146+01:00",
    "end_time": "2025-04-09T13:42:03.015647+01:00",
    "duration": "864.18725ms",
    "output": "INFO: Invocation ID: 820b5150-1314-4e87-b296-51a0420da4c6\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/UserDefaultsAdapters.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/UserDefaultsAdapters.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/UserDefaultsAdapters.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/libUserDefaultsAdapters.a\nINFO: Elapsed time: 0.093s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs",
    "success": true,
    "start_time": "2025-04-09T13:42:03.015653+01:00",
    "end_time": "2025-04-09T13:42:03.980169+01:00",
    "duration": "964.516875ms",
    "output": "INFO: Invocation ID: 27a63a09-8dcb-4479-b8f5-cd35fe2ae408\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/UserDefaultsDTOs.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/UserDefaultsDTOs.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/UserDefaultsDTOs.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/libUserDefaultsDTOs.a\nINFO: Elapsed time: 0.097s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/APIServices:APIServices",
    "success": false,
    "start_time": "2025-04-09T13:42:03.980175+01:00",
    "end_time": "2025-04-09T13:42:06.417734+01:00",
    "duration": "2.437560708s",
    "output": "INFO: Invocation ID: ba63094f-75bf-4857-a796-6460d062bd6b\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/APIServices:APIServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/APIServices:APIServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/APIServices:APIServices (28 packages loaded, 246 targets configured).\n[49 / 58] Compiling Swift module //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders; 0s disk-cache, worker ... (2 actions, 1 running)\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/APIServices:APIServices failed to build\nINFO: Elapsed time: 1.614s, Critical Path: 1.44s\nINFO: 24 processes: 28 action cache hit, 14 disk cache hit, 3 internal, 7 worker.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator",
    "success": false,
    "start_time": "2025-04-09T13:42:06.417742+01:00",
    "end_time": "2025-04-09T13:42:07.568414+01:00",
    "duration": "1.15067275s",
    "output": "INFO: Invocation ID: 9d1dddae-b913-430e-90fe-53ded4528258\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator (5 packages loaded, 124 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator failed to build\nINFO: Elapsed time: 0.471s, Critical Path: 0.36s\nINFO: 4 processes: 5 action cache hit, 2 disk cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BackupServices:BackupServices",
    "success": false,
    "start_time": "2025-04-09T13:42:07.568424+01:00",
    "end_time": "2025-04-09T13:42:09.053582+01:00",
    "duration": "1.48515975s",
    "output": "INFO: Invocation ID: a401b643-d76f-4094-b5de-eaf4e3eca7c0\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupServices:BackupServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupServices:BackupServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BackupServices:BackupServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/BackupServices:BackupServices failed to build\nINFO: Elapsed time: 0.504s, Critical Path: 0.40s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices",
    "success": true,
    "start_time": "2025-04-09T13:42:09.053608+01:00",
    "end_time": "2025-04-09T13:42:11.116651+01:00",
    "duration": "2.063045458s",
    "output": "INFO: Invocation ID: 38734438-07a7-4531-a2f7-10622c31fa82\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices (4 packages loaded, 20 targets configured).\n[9 / 10] [Prepa] Linking packages/UmbraImplementations/Sources/BookmarkServices/libBookmarkServices.a\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/BookmarkServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/BookmarkServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/BookmarkServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/libBookmarkServices.a\nINFO: Elapsed time: 1.268s, Critical Path: 1.17s\nINFO: 6 processes: 4 action cache hit, 1 disk cache hit, 1 internal, 4 worker.\nINFO: Build completed successfully, 6 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger",
    "success": true,
    "start_time": "2025-04-09T13:42:11.116656+01:00",
    "end_time": "2025-04-09T13:42:11.934444+01:00",
    "duration": "817.788875ms",
    "output": "INFO: Invocation ID: 9ab7ba8d-4f2d-451c-8a14-9b8fb1b9c1dd\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Logging/BookmarkLogger.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Logging/BookmarkLogger.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Logging/BookmarkLogger.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Logging/libBookmarkLogger.a\nINFO: Elapsed time: 0.117s, Critical Path: 0.03s\nINFO: 2 processes: 1 internal, 1 local.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel",
    "success": true,
    "start_time": "2025-04-09T13:42:11.93447+01:00",
    "end_time": "2025-04-09T13:42:12.819491+01:00",
    "duration": "885.0215ms",
    "output": "INFO: Invocation ID: e38564eb-27c2-4c6f-9f23-09bfa4f75954\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Model/BookmarkModel.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Model/BookmarkModel.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Model/BookmarkModel.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/BookmarkServices/Model/libBookmarkModel.a\nINFO: Elapsed time: 0.084s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices",
    "success": true,
    "start_time": "2025-04-09T13:42:12.8195+01:00",
    "end_time": "2025-04-09T13:42:14.274607+01:00",
    "duration": "1.455108875s",
    "output": "INFO: Invocation ID: a7ada5bb-34fa-4bd8-94ff-f2016bdada92\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices (1 packages loaded, 3 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/ConfigServices/ConfigServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/ConfigServices/ConfigServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/ConfigServices/ConfigServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/ConfigServices/libConfigServices.a\nINFO: Elapsed time: 0.636s, Critical Path: 0.50s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CoreServices:CoreServices",
    "success": false,
    "start_time": "2025-04-09T13:42:14.274617+01:00",
    "end_time": "2025-04-09T13:42:15.501127+01:00",
    "duration": "1.226511708s",
    "output": "INFO: Invocation ID: 9f3a2295-a7ce-40f7-86f4-8f2fae6e49fe\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CoreServices:CoreServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CoreServices:CoreServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CoreServices:CoreServices (1 packages loaded, 8 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/CoreServices:CoreServices failed to build\nINFO: Elapsed time: 0.500s, Critical Path: 0.40s\nINFO: 3 processes: 1 action cache hit, 3 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices",
    "success": false,
    "start_time": "2025-04-09T13:42:15.501136+01:00",
    "end_time": "2025-04-09T13:42:17.017645+01:00",
    "duration": "1.516509709s",
    "output": "INFO: Invocation ID: 6bc7f2d7-c5d0-475e-87f9-a89fa02f0972\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices failed to build\nINFO: Elapsed time: 0.443s, Critical Path: 0.36s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger",
    "success": true,
    "start_time": "2025-04-09T13:42:17.017651+01:00",
    "end_time": "2025-04-09T13:42:17.771125+01:00",
    "duration": "753.473916ms",
    "output": "INFO: Invocation ID: c28cc481-5763-42f2-bb69-37ce17d8af33\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoServices/Logging/CryptoLogger.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoServices/Logging/CryptoLogger.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoServices/Logging/CryptoLogger.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoServices/Logging/libCryptoLogger.a\nINFO: Elapsed time: 0.078s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices",
    "success": true,
    "start_time": "2025-04-09T13:42:17.771133+01:00",
    "end_time": "2025-04-09T13:42:19.013798+01:00",
    "duration": "1.242665666s",
    "output": "INFO: Invocation ID: baf1ad4a-0c80-4b03-9a04-1cc5f93b9a8f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices (1 packages loaded, 4 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoXPCServices/CryptoXPCServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoXPCServices/CryptoXPCServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoXPCServices/CryptoXPCServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/CryptoXPCServices/libCryptoXPCServices.a\nINFO: Elapsed time: 0.562s, Critical Path: 0.48s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices",
    "success": true,
    "start_time": "2025-04-09T13:42:19.013807+01:00",
    "end_time": "2025-04-09T13:42:20.688173+01:00",
    "duration": "1.674367667s",
    "output": "INFO: Invocation ID: 5eba182f-a054-4c0f-a8d8-b9a10a84d34d\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices (2 packages loaded, 8 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/DateTimeServices/DateTimeServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/DateTimeServices/DateTimeServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/DateTimeServices/DateTimeServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/DateTimeServices/libDateTimeServices.a\nINFO: Elapsed time: 0.957s, Critical Path: 0.87s\nINFO: 4 processes: 2 action cache hit, 1 disk cache hit, 1 internal, 2 worker.\nINFO: Build completed successfully, 4 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl",
    "success": true,
    "start_time": "2025-04-09T13:42:20.688179+01:00",
    "end_time": "2025-04-09T13:42:21.495859+01:00",
    "duration": "807.680666ms",
    "output": "INFO: Invocation ID: c6d7e235-ee41-4f64-8905-f7eddb6b98e3\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorDomainsImpl/ErrorDomainsImpl.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorDomainsImpl/ErrorDomainsImpl.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorDomainsImpl/ErrorDomainsImpl.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorDomainsImpl/libErrorDomainsImpl.a\nINFO: Elapsed time: 0.080s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl",
    "success": true,
    "start_time": "2025-04-09T13:42:21.495868+01:00",
    "end_time": "2025-04-09T13:42:22.8232+01:00",
    "duration": "1.32733225s",
    "output": "INFO: Invocation ID: 9f7a2c27-7f39-407f-991b-e7b57e31f360\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl (1 packages loaded, 4 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorHandlingImpl/ErrorHandlingImpl.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorHandlingImpl/ErrorHandlingImpl.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorHandlingImpl/ErrorHandlingImpl.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorHandlingImpl/libErrorHandlingImpl.a\nINFO: Elapsed time: 0.663s, Critical Path: 0.57s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices",
    "success": true,
    "start_time": "2025-04-09T13:42:22.823204+01:00",
    "end_time": "2025-04-09T13:42:23.659941+01:00",
    "duration": "836.738ms",
    "output": "INFO: Invocation ID: d43627c5-d1a6-44e9-83a1-88eff891b490\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices (2 packages loaded, 8 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorLoggingServices/ErrorLoggingServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorLoggingServices/ErrorLoggingServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorLoggingServices/ErrorLoggingServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/ErrorLoggingServices/libErrorLoggingServices.a\nINFO: Elapsed time: 0.113s, Critical Path: 0.01s\nINFO: 4 processes: 2 action cache hit, 3 disk cache hit, 1 internal.\nINFO: Build completed successfully, 4 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices",
    "success": false,
    "start_time": "2025-04-09T13:42:23.659965+01:00",
    "end_time": "2025-04-09T13:42:25.461176+01:00",
    "duration": "1.801212792s",
    "output": "INFO: Invocation ID: cbfc0b9c-d518-49b3-a8ce-695d712c6ce7\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices (2 packages loaded, 35 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/FileSystemServices/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/FileSystemServices/FileSystemServices.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:156:15: error: invalid redeclaration of 'setExtendedAttribute(at:name:value:)'\n154 |              `FileSystemError.writeError` if the attribute cannot be set\n155 |    */\n156 |   public func setExtendedAttribute(\n    |               `- error: invalid redeclaration of 'setExtendedAttribute(at:name:value:)'\n157 |     at path: FilePath,\n158 |     name: String,\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:239:15: error: invalid redeclaration of 'getExtendedAttribute(at:name:)'\n237 |              `FileSystemError.readError` if the attribute does not exist\n238 |    */\n239 |   public func getExtendedAttribute(\n    |               `- error: invalid redeclaration of 'getExtendedAttribute(at:name:)'\n240 |     at path: FilePath,\n241 |     name: String\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:156:15: error: invalid redeclaration of 'setExtendedAttribute(at:name:value:)'\n154 |              `FileSystemError.writeError` if the attribute cannot be set\n155 |    */\n156 |   public func setExtendedAttribute(\n    |               `- error: invalid redeclaration of 'setExtendedAttribute(at:name:value:)'\n157 |     at path: FilePath,\n158 |     name: String,\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:239:15: error: invalid redeclaration of 'getExtendedAttribute(at:name:)'\n237 |              `FileSystemError.readError` if the attribute does not exist\n238 |    */\n239 |   public func getExtendedAttribute(\n    |               `- error: invalid redeclaration of 'getExtendedAttribute(at:name:)'\n240 |     at path: FilePath,\n241 |     name: String\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:170:19: error: extra argument 'metadata' in call\n168 |         operation: \"setExtendedAttribute\",\n169 |         source: \"FileSystemService\",\n170 |         metadata: metadata\n    |                   `- error: extra argument 'metadata' in call\n171 |       )\n172 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:194:18: error: no exact matches in call to initializer \n192 | \n193 |     do {\n194 |       let data = Data(value)\n    |                  `- error: no exact matches in call to initializer \n195 |       try fileManager.setExtendedAttribute(data, withName: name, forItemAtPath: path.path)\n196 |       \n\nFoundation.Data.init:2:19: note: candidate requires that 'SafeAttributeValue' conform to 'Sequence' (requirement specified as 'S' : 'Sequence')\n1 | struct Data {\n2 | @inlinable public init\u003cS\u003e(_ elements: S) where S : Sequence, S.Element == UInt8}\n  |                   `- note: candidate requires that 'SafeAttributeValue' conform to 'Sequence' (requirement specified as 'S' : 'Sequence')\n3 | \n\nSwift.RangeReplaceableCollection.init:2:19: note: candidate requires that 'SafeAttributeValue' conform to 'Sequence' (requirement specified as 'S' : 'Sequence')\n1 | protocol RangeReplaceableCollection {\n2 | @inlinable public init\u003cS\u003e(_ elements: S) where S : Sequence, Self.Element == S.Element}\n  |                   `- note: candidate requires that 'SafeAttributeValue' conform to 'Sequence' (requirement specified as 'S' : 'Sequence')\n3 | \n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:202:48: error: extra argument 'metadata' in call\n200 |           operation: \"setExtendedAttribute\",\n201 |           source: \"FileSystemService\",\n202 |           metadata: LogMetadataDTOCollection().withPrivate(key: \"path\", value: path.path)\n    |                                                `- error: extra argument 'metadata' in call\n203 |         )\n204 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:216:21: error: extra argument 'metadata' in call\n214 |           operation: \"setExtendedAttribute\",\n215 |           source: \"FileSystemService\",\n216 |           metadata: errorMetadata\n    |                     `- error: extra argument 'metadata' in call\n217 |         )\n218 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:175:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n173 | \n174 |     guard !path.path.isEmpty else {\n175 |       throw FileSystemInterfaces.FileSystemError.invalidPath(\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n176 |         path: \"\",\n177 |         reason: \"Empty path provided\"\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:182:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n180 | \n181 |     guard !name.isEmpty else {\n182 |       throw FileSystemInterfaces.FileSystemError.invalidPath(\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n183 |         path: path.path,\n184 |         reason: \"Empty attribute name provided\"\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:190:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n188 |     // Check if file exists\n189 |     if !fileManager.fileExists(atPath: path.path) {\n190 |       throw FileSystemInterfaces.FileSystemError.pathNotFound(path: path.path)\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n191 |     }\n192 | \n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:220:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n218 |       )\n219 |       \n220 |       throw FileSystemInterfaces.FileSystemError.writeError(\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n221 |         path: path.path,\n222 |         reason: \"Failed to set extended attribute '\\(name)': \\(error.localizedDescription)\"\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:252:19: error: extra argument 'metadata' in call\n250 |         operation: \"getExtendedAttribute\",\n251 |         source: \"FileSystemService\",\n252 |         metadata: metadata\n    |                   `- error: extra argument 'metadata' in call\n253 |       )\n254 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:283:48: error: extra argument 'metadata' in call\n281 |           operation: \"getExtendedAttribute\",\n282 |           source: \"FileSystemService\",\n283 |           metadata: LogMetadataDTOCollection().withPrivate(key: \"path\", value: path.path)\n    |                                                `- error: extra argument 'metadata' in call\n284 |         )\n285 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:287:32: error: incorrect argument label in call (have 'data:', expected 'from:')\n285 |       )\n286 |       \n287 |       return SafeAttributeValue(data: data)\n    |                                `- error: incorrect argument label in call (have 'data:', expected 'from:')\n288 |     } catch let fsError as FileSystemInterfaces.FileSystemError {\n289 |       // Rethrow FileSystemError directly\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:287:14: error: value of optional type 'SafeAttributeValue?' must be unwrapped to a value of type 'SafeAttributeValue'\n285 |       )\n286 |       \n287 |       return SafeAttributeValue(data: data)\n    |              |- error: value of optional type 'SafeAttributeValue?' must be unwrapped to a value of type 'SafeAttributeValue'\n    |              |- note: coalesce using '??' to provide a default when the optional value contains 'nil'\n    |              `- note: force-unwrap using '!' to abort execution if the optional value contains 'nil'\n288 |     } catch let fsError as FileSystemInterfaces.FileSystemError {\n289 |       // Rethrow FileSystemError directly\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:302:21: error: extra argument 'metadata' in call\n300 |           operation: \"getExtendedAttribute\",\n301 |           source: \"FileSystemService\",\n302 |           metadata: errorMetadata\n    |                     `- error: extra argument 'metadata' in call\n303 |         )\n304 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:257:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n255 | \n256 |     guard !path.path.isEmpty else {\n257 |       throw FileSystemInterfaces.FileSystemError.invalidPath(\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n258 |         path: \"\",\n259 |         reason: \"Empty path provided\"\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:264:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n262 | \n263 |     guard !name.isEmpty else {\n264 |       throw FileSystemInterfaces.FileSystemError.invalidPath(\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n265 |         path: path.path,\n266 |         reason: \"Empty attribute name provided\"\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:272:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n270 |     // Check if file exists\n271 |     if !fileManager.fileExists(atPath: path.path) {\n272 |       throw FileSystemInterfaces.FileSystemError.pathNotFound(path: path.path)\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n273 |     }\n274 | \n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:290:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n288 |     } catch let fsError as FileSystemInterfaces.FileSystemError {\n289 |       // Rethrow FileSystemError directly\n290 |       throw fsError\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n291 |     } catch {\n292 |       let errorMetadata = LogMetadataDTOCollection()\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:306:7: error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n304 |       )\n305 |       \n306 |       throw FileSystemInterfaces.FileSystemError.readError(\n    |       `- error: thrown expression type 'any Error' cannot be converted to error type 'Never'\n307 |         path: path.path,\n308 |         reason: \"Failed to read extended attribute '\\(name)': \\(error.localizedDescription)\"\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:333:19: error: extra argument 'metadata' in call\n331 |         operation: \"listExtendedAttributes\",\n332 |         source: \"FileSystemService\",\n333 |         metadata: metadata\n    |                   `- error: extra argument 'metadata' in call\n334 |       )\n335 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:361:21: error: extra argument 'metadata' in call\n359 |           operation: \"listExtendedAttributes\",\n360 |           source: \"FileSystemService\",\n361 |           metadata: resultMetadata\n    |                     `- error: extra argument 'metadata' in call\n362 |         )\n363 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl+ExtendedAttributes.swift:380:21: error: extra argument 'metadata' in call\n378 |           operation: \"listExtendedAttributes\",\n379 |           source: \"FileSystemService\",\n380 |           metadata: errorMetadata\n    |                     `- error: extra argument 'metadata' in call\n381 |         )\n382 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:110:14: error: extra argument 'metadata' in call\n 108 |             .withPrivate(key: \"path\", value: path.path)\n 109 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 110 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 111 |         )\n 112 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:238:14: error: extra argument 'metadata' in call\n 236 |           source: \"FileSystemService\",\n 237 |           metadata: LogMetadataDTOCollection()\n 238 |             .withPrivate(key: \"path\", value: path.path)\n     |              `- error: extra argument 'metadata' in call\n 239 |         )\n 240 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:252:14: error: extra argument 'metadata' in call\n 250 |             .withPrivate(key: \"path\", value: path.path)\n 251 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 252 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 253 |         )\n 254 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:330:14: error: extra argument 'metadata' in call\n 328 |             .withPrivate(key: \"path\", value: path.path)\n 329 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 330 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 331 |         )\n 332 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:397:14: error: extra argument 'metadata' in call\n 395 |           source: \"FileSystemService\",\n 396 |           metadata: LogMetadataDTOCollection()\n 397 |             .withPrivate(key: \"path\", value: path.path)\n     |              `- error: extra argument 'metadata' in call\n 398 |         )\n 399 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:409:14: error: extra argument 'metadata' in call\n 407 |             .withPrivate(key: \"path\", value: path.path)\n 408 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 409 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 410 |         )\n 411 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:438:12: error: extra argument 'metadata' in call\n 436 |         metadata: LogMetadataDTOCollection()\n 437 |           .withPrivate(key: \"path\", value: path.path)\n 438 |           .withPublic(key: \"attributeName\", value: attributeName)\n     |            `- error: extra argument 'metadata' in call\n 439 |       )\n 440 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:475:14: error: extra argument 'metadata' in call\n 473 |           metadata: LogMetadataDTOCollection()\n 474 |             .withPrivate(key: \"path\", value: path.path)\n 475 |             .withPublic(key: \"attributeName\", value: attributeName)\n     |              `- error: extra argument 'metadata' in call\n 476 |         )\n 477 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:488:14: error: extra argument 'metadata' in call\n 486 |             .withPublic(key: \"attributeName\", value: attributeName)\n 487 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 488 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 489 |         )\n 490 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:522:12: error: extra argument 'metadata' in call\n 520 |         metadata: LogMetadataDTOCollection()\n 521 |           .withPrivate(key: \"path\", value: path.path)\n 522 |           .withPublic(key: \"fileSize\", value: \"\\(data.count)\")\n     |            `- error: extra argument 'metadata' in call\n 523 |       )\n 524 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:566:16: error: extra argument 'metadata' in call\n 564 |               .withPrivate(key: \"path\", value: directory)\n 565 |               .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 566 |               .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |                `- error: extra argument 'metadata' in call\n 567 |           )\n 568 |         )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:588:14: error: extra argument 'metadata' in call\n 586 |           metadata: LogMetadataDTOCollection()\n 587 |             .withPrivate(key: \"path\", value: path.path)\n 588 |             .withPublic(key: \"fileSize\", value: \"\\(data.count)\")\n     |              `- error: extra argument 'metadata' in call\n 589 |         )\n 590 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:600:14: error: extra argument 'metadata' in call\n 598 |             .withPrivate(key: \"path\", value: path.path)\n 599 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 600 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 601 |         )\n 602 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:630:12: error: extra argument 'metadata' in call\n 628 |         metadata: LogMetadataDTOCollection()\n 629 |           .withPrivate(key: \"path\", value: path.path)\n 630 |           .withPublic(key: \"fileSize\", value: \"\\(data.count)\")\n     |            `- error: extra argument 'metadata' in call\n 631 |       )\n 632 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:665:14: error: extra argument 'metadata' in call\n 663 |           metadata: LogMetadataDTOCollection()\n 664 |             .withPrivate(key: \"path\", value: path.path)\n 665 |             .withPublic(key: \"fileSize\", value: \"\\(data.count)\")\n     |              `- error: extra argument 'metadata' in call\n 666 |         )\n 667 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:677:14: error: extra argument 'metadata' in call\n 675 |             .withPrivate(key: \"path\", value: path.path)\n 676 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 677 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 678 |         )\n 679 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:702:12: error: extra argument 'metadata' in call\n 700 |         source: \"FileSystemService\",\n 701 |         metadata: LogMetadataDTOCollection()\n 702 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n 703 |       )\n 704 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:722:12: error: extra argument 'metadata' in call\n 720 |         metadata: LogMetadataDTOCollection()\n 721 |           .withPrivate(key: \"path\", value: path.path)\n 722 |           .withPublic(key: \"exists\", value: \"\\(exists)\")\n     |            `- error: extra argument 'metadata' in call\n 723 |       )\n 724 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:743:12: error: extra argument 'metadata' in call\n 741 |         source: \"FileSystemService\",\n 742 |         metadata: LogMetadataDTOCollection()\n 743 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n 744 |       )\n 745 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:786:12: error: extra argument 'metadata' in call\n 784 |         source: \"FileSystemService\",\n 785 |         metadata: LogMetadataDTOCollection()\n 786 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n 787 |       )\n 788 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:826:14: error: extra argument 'metadata' in call\n 824 |             .withPrivate(key: \"path\", value: path.path)\n 825 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n 826 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n 827 |         )\n 828 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:850:12: error: extra argument 'metadata' in call\n 848 |         source: \"FileSystemService\",\n 849 |         metadata: LogMetadataDTOCollection()\n 850 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n 851 |       )\n 852 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:895:19: error: extra argument 'metadata' in call\n 893 |         operation: \"listDirectory\",\n 894 |         source: \"FileSystemService\",\n 895 |         metadata: metadata\n     |                   `- error: extra argument 'metadata' in call\n 896 |       )\n 897 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:947:21: error: extra argument 'metadata' in call\n 945 |           operation: \"listDirectory\",\n 946 |           source: \"FileSystemService\",\n 947 |           metadata: resultMetadata\n     |                     `- error: extra argument 'metadata' in call\n 948 |         )\n 949 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:963:21: error: extra argument 'metadata' in call\n 961 |           operation: \"listDirectory\",\n 962 |           source: \"FileSystemService\",\n 963 |           metadata: errorMetadata\n     |                     `- error: extra argument 'metadata' in call\n 964 |         )\n 965 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:993:12: error: extra argument 'metadata' in call\n 991 |         source: \"FileSystemService\",\n 992 |         metadata: LogMetadataDTOCollection()\n 993 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n 994 |       )\n 995 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1054:14: error: extra argument 'metadata' in call\n1052 |           metadata: LogMetadataDTOCollection()\n1053 |             .withPrivate(key: \"path\", value: path.path)\n1054 |             .withPublic(key: \"count\", value: \"\\(result.count)\")\n     |              `- error: extra argument 'metadata' in call\n1055 |         )\n1056 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1068:14: error: extra argument 'metadata' in call\n1066 |             .withPrivate(key: \"path\", value: path.path)\n1067 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1068 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n1069 |         )\n1070 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1093:12: error: extra argument 'metadata' in call\n1091 |         source: \"FileSystemService\",\n1092 |         metadata: LogMetadataDTOCollection()\n1093 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n1094 |       )\n1095 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1107:14: error: extra argument 'metadata' in call\n1105 |           metadata: LogMetadataDTOCollection()\n1106 |             .withPrivate(key: \"path\", value: path.path)\n1107 |             .withPublic(key: \"fileSize\", value: \"\\(data.count)\")\n     |              `- error: extra argument 'metadata' in call\n1108 |         )\n1109 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1121:14: error: extra argument 'metadata' in call\n1119 |             .withPrivate(key: \"path\", value: path.path)\n1120 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1121 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n1122 |         )\n1123 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1151:12: error: extra argument 'metadata' in call\n1149 |         metadata: LogMetadataDTOCollection()\n1150 |           .withPrivate(key: \"path\", value: path.path)\n1151 |           .withPublic(key: \"secure\", value: \"\\(secure)\")\n     |            `- error: extra argument 'metadata' in call\n1152 |       )\n1153 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1197:14: error: extra argument 'metadata' in call\n1195 |           source: \"FileSystemService\",\n1196 |           metadata: LogMetadataDTOCollection()\n1197 |             .withPrivate(key: \"path\", value: path.path)\n     |              `- error: extra argument 'metadata' in call\n1198 |         )\n1199 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1209:14: error: extra argument 'metadata' in call\n1207 |             .withPrivate(key: \"path\", value: path.path)\n1208 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1209 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n1210 |         )\n1211 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1239:12: error: extra argument 'metadata' in call\n1237 |         metadata: LogMetadataDTOCollection()\n1238 |           .withPrivate(key: \"path\", value: path.path)\n1239 |           .withPublic(key: \"secure\", value: \"\\(secure)\")\n     |            `- error: extra argument 'metadata' in call\n1240 |       )\n1241 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1294:14: error: extra argument 'metadata' in call\n1292 |           source: \"FileSystemService\",\n1293 |           metadata: LogMetadataDTOCollection()\n1294 |             .withPrivate(key: \"path\", value: path.path)\n     |              `- error: extra argument 'metadata' in call\n1295 |         )\n1296 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1306:14: error: extra argument 'metadata' in call\n1304 |             .withPrivate(key: \"path\", value: path.path)\n1305 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1306 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n1307 |         )\n1308 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1339:12: error: extra argument 'metadata' in call\n1337 |           .withPrivate(key: \"path\", value: sourcePath.path)\n1338 |           .withPrivate(key: \"destinationPath\", value: destinationPath.path)\n1339 |           .withPublic(key: \"overwrite\", value: \"\\(overwrite)\")\n     |            `- error: extra argument 'metadata' in call\n1340 |       )\n1341 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1381:16: error: extra argument 'metadata' in call\n1379 |               .withPrivate(key: \"destinationPath\", value: destinationPath.path)\n1380 |               .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1381 |               .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |                `- error: extra argument 'metadata' in call\n1382 |           )\n1383 |         )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1411:16: error: extra argument 'metadata' in call\n1409 |               .withPrivate(key: \"destinationPath\", value: destinationPath.path)\n1410 |               .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1411 |               .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |                `- error: extra argument 'metadata' in call\n1412 |           )\n1413 |         )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1433:14: error: extra argument 'metadata' in call\n1431 |           metadata: LogMetadataDTOCollection()\n1432 |             .withPrivate(key: \"path\", value: sourcePath.path)\n1433 |             .withPrivate(key: \"destinationPath\", value: destinationPath.path)\n     |              `- error: extra argument 'metadata' in call\n1434 |         )\n1435 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1446:14: error: extra argument 'metadata' in call\n1444 |             .withPrivate(key: \"destinationPath\", value: destinationPath.path)\n1445 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1446 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n1447 |         )\n1448 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1472:12: error: extra argument 'metadata' in call\n1470 |         source: \"FileSystemService\",\n1471 |         metadata: LogMetadataDTOCollection()\n1472 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n1473 |       )\n1474 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1509:12: error: extra argument 'metadata' in call\n1507 |         metadata: LogMetadataDTOCollection()\n1508 |           .withPrivate(key: \"path\", value: path.path)\n1509 |           .withPublic(key: \"readOnly\", value: \"\\(readOnly)\")\n     |            `- error: extra argument 'metadata' in call\n1510 |       )\n1511 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1543:14: error: extra argument 'metadata' in call\n1541 |           metadata: LogMetadataDTOCollection()\n1542 |             .withPrivate(key: \"path\", value: path.path)\n1543 |             .withPublic(key: \"bookmarkSize\", value: \"\\(bookmarkData.count)\")\n     |              `- error: extra argument 'metadata' in call\n1544 |         )\n1545 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1557:14: error: extra argument 'metadata' in call\n1555 |             .withPrivate(key: \"path\", value: path.path)\n1556 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1557 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n1558 |         )\n1559 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1584:12: error: extra argument 'metadata' in call\n1582 |         source: \"FileSystemService\",\n1583 |         metadata: LogMetadataDTOCollection()\n1584 |           .withPublic(key: \"bookmarkSize\", value: \"\\(bookmark.count)\")\n     |            `- error: extra argument 'metadata' in call\n1585 |       )\n1586 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1607:14: error: extra argument 'metadata' in call\n1605 |           metadata: LogMetadataDTOCollection()\n1606 |             .withPrivate(key: \"path\", value: path.path)\n1607 |             .withPublic(key: \"isStale\", value: \"\\(isStale)\")\n     |              `- error: extra argument 'metadata' in call\n1608 |         )\n1609 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1620:14: error: extra argument 'metadata' in call\n1618 |           metadata: LogMetadataDTOCollection()\n1619 |             .withPublic(key: \"errorType\", value: \"\\(type(of: error))\")\n1620 |             .withPrivate(key: \"errorMessage\", value: error.localizedDescription)\n     |              `- error: extra argument 'metadata' in call\n1621 |         )\n1622 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1647:12: error: extra argument 'metadata' in call\n1645 |         source: \"FileSystemService\",\n1646 |         metadata: LogMetadataDTOCollection()\n1647 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n1648 |       )\n1649 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1676:12: error: extra argument 'metadata' in call\n1674 |         metadata: LogMetadataDTOCollection()\n1675 |           .withPrivate(key: \"path\", value: path.path)\n1676 |           .withPublic(key: \"result\", value: \"\\(result)\")\n     |            `- error: extra argument 'metadata' in call\n1677 |       )\n1678 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1697:12: error: extra argument 'metadata' in call\n1695 |         source: \"FileSystemService\",\n1696 |         metadata: LogMetadataDTOCollection()\n1697 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n1698 |       )\n1699 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1717:12: error: extra argument 'metadata' in call\n1715 |         source: \"FileSystemService\",\n1716 |         metadata: LogMetadataDTOCollection()\n1717 |           .withPrivate(key: \"path\", value: path.path)\n     |            `- error: extra argument 'metadata' in call\n1718 |       )\n1719 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1746:19: error: extra argument 'metadata' in call\n1744 |         operation: \"createTempFile\",\n1745 |         source: \"FileSystemService\",\n1746 |         metadata: metadata\n     |                   `- error: extra argument 'metadata' in call\n1747 |       )\n1748 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1760:10: error: type of expression is ambiguous without a type annotation\n1758 |     do {\n1759 |       // Create an empty file\n1760 |       if !fileManager.createFile(atPath: tempPath, contents: Data(), attributes: options?.attributes) {\n     |          `- error: type of expression is ambiguous without a type annotation\n1761 |         throw FileSystemInterfaces.FileSystemError.writeError(\n1762 |           path: tempPath,\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1777:21: error: extra argument 'metadata' in call\n1775 |           operation: \"createTempFile\",\n1776 |           source: \"FileSystemService\",\n1777 |           metadata: resultMetadata\n     |                     `- error: extra argument 'metadata' in call\n1778 |         )\n1779 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1793:21: error: extra argument 'metadata' in call\n1791 |           operation: \"createTempFile\",\n1792 |           source: \"FileSystemService\",\n1793 |           metadata: errorMetadata\n     |                     `- error: extra argument 'metadata' in call\n1794 |         )\n1795 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1825:19: error: extra argument 'metadata' in call\n1823 |         operation: \"createTempDir\",\n1824 |         source: \"FileSystemService\",\n1825 |         metadata: metadata\n     |                   `- error: extra argument 'metadata' in call\n1826 |       )\n1827 |     )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1839:23: error: type of expression is ambiguous without a type annotation\n1837 |     do {\n1838 |       // Create the directory\n1839 |       try fileManager.createDirectory(\n     |                       `- error: type of expression is ambiguous without a type annotation\n1840 |         atPath: tempPath,\n1841 |         withIntermediateDirectories: true,\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1855:21: error: extra argument 'metadata' in call\n1853 |           operation: \"createTempDir\",\n1854 |           source: \"FileSystemService\",\n1855 |           metadata: resultMetadata\n     |                     `- error: extra argument 'metadata' in call\n1856 |         )\n1857 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceImpl.swift:1871:21: error: extra argument 'metadata' in call\n1869 |           operation: \"createTempDir\",\n1870 |           source: \"FileSystemService\",\n1871 |           metadata: errorMetadata\n     |                     `- error: extra argument 'metadata' in call\n1872 |         )\n1873 |       )\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceSecure.swift:472:25: error: type of expression is ambiguous without a type annotation\n 470 | \n 471 |     // Create an empty file\n 472 |     FileManager.default.createFile(atPath: url.path, contents: nil, attributes: options?.attributes)\n     |                         `- error: type of expression is ambiguous without a type annotation\n 473 | \n 474 |     return FilePath(path: url.path, isDirectory: false)\n\npackages/UmbraImplementations/Sources/FileSystemServices/Implementation/FileSystemServiceSecure.swift:498:31: error: type of expression is ambiguous without a type annotation\n 496 | \n 497 |     do {\n 498 |       try FileManager.default.createDirectory(\n     |                               `- error: type of expression is ambiguous without a type annotation\n 499 |         at: url,\n 500 |         withIntermediateDirectories: true,\nTarget //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices failed to build\nINFO: Elapsed time: 0.843s, Critical Path: 0.75s\nINFO: 3 processes: 2 action cache hit, 1 disk cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices",
    "success": false,
    "start_time": "2025-04-09T13:42:25.461189+01:00",
    "end_time": "2025-04-09T13:42:26.661388+01:00",
    "duration": "1.200199583s",
    "output": "INFO: Invocation ID: d0fed636-1282-4014-9381-9093e18bc4c6\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices failed to build\nINFO: Elapsed time: 0.458s, Critical Path: 0.36s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor",
    "success": true,
    "start_time": "2025-04-09T13:42:26.661393+01:00",
    "end_time": "2025-04-09T13:42:27.620742+01:00",
    "duration": "959.350542ms",
    "output": "INFO: Invocation ID: d8cce570-583d-4a38-9291-1f1976980827\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor (1 packages loaded, 2 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Actor/KeychainSecurityActor.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Actor/KeychainSecurityActor.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Actor/KeychainSecurityActor.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Actor/libKeychainSecurityActor.a\nINFO: Elapsed time: 0.094s, Critical Path: 0.01s\nINFO: 2 processes: 2 action cache hit, 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor",
    "success": false,
    "start_time": "2025-04-09T13:42:27.620764+01:00",
    "end_time": "2025-04-09T13:42:28.837228+01:00",
    "duration": "1.216464917s",
    "output": "INFO: Invocation ID: 535478ff-af8c-404c-8926-34ffe4b386e7\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor failed to build\nINFO: Elapsed time: 0.452s, Critical Path: 0.35s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks",
    "success": true,
    "start_time": "2025-04-09T13:42:28.837234+01:00",
    "end_time": "2025-04-09T13:42:29.662286+01:00",
    "duration": "825.0525ms",
    "output": "INFO: Invocation ID: af643129-8961-494a-af94-0a470b77911b\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Fallbacks/Fallbacks.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Fallbacks/Fallbacks.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Fallbacks/Fallbacks.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/KeychainServices/Fallbacks/libFallbacks.a\nINFO: Elapsed time: 0.085s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger",
    "success": false,
    "start_time": "2025-04-09T13:42:29.662293+01:00",
    "end_time": "2025-04-09T13:42:30.879333+01:00",
    "duration": "1.217041584s",
    "output": "INFO: Invocation ID: 1ae4d8a7-a8d0-44e3-9df6-a05166be4a43\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed to build\nINFO: Elapsed time: 0.446s, Critical Path: 0.35s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters",
    "success": true,
    "start_time": "2025-04-09T13:42:30.879339+01:00",
    "end_time": "2025-04-09T13:42:31.819965+01:00",
    "duration": "940.627417ms",
    "output": "INFO: Invocation ID: 3c79375b-ed8b-4261-897c-01192c9060af\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingAdapters/LoggingAdapters.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingAdapters/LoggingAdapters.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingAdapters/LoggingAdapters.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingAdapters/libLoggingAdapters.a\nINFO: Elapsed time: 0.120s, Critical Path: 0.03s\nINFO: 2 processes: 1 internal, 1 local.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices",
    "success": true,
    "start_time": "2025-04-09T13:42:31.819972+01:00",
    "end_time": "2025-04-09T13:42:32.713396+01:00",
    "duration": "893.424834ms",
    "output": "INFO: Invocation ID: fd2ca7b3-f09e-432a-9d83-a6b4db19d243\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingServices/LoggingServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingServices/LoggingServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingServices/LoggingServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingServices/libLoggingServices.a\nINFO: Elapsed time: 0.101s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices",
    "success": true,
    "start_time": "2025-04-09T13:42:32.713402+01:00",
    "end_time": "2025-04-09T13:42:33.537831+01:00",
    "duration": "824.429ms",
    "output": "INFO: Invocation ID: e373d587-5965-4bb3-a928-cf204dbb12f0\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingWrapperServices/LoggingWrapperServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingWrapperServices/LoggingWrapperServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingWrapperServices/LoggingWrapperServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/LoggingWrapperServices/libLoggingWrapperServices.a\nINFO: Elapsed time: 0.092s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices",
    "success": true,
    "start_time": "2025-04-09T13:42:33.537838+01:00",
    "end_time": "2025-04-09T13:42:35.437619+01:00",
    "duration": "1.899782792s",
    "output": "INFO: Invocation ID: a7d42c4b-75ca-4270-bba0-eef27a787a17\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices (2 packages loaded, 12 targets configured).\n[5 / 6] [Prepa] Linking packages/UmbraImplementations/Sources/NetworkServices/libNetworkServices.a\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/NetworkServices/NetworkServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/NetworkServices/NetworkServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/NetworkServices/NetworkServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/NetworkServices/libNetworkServices.a\nINFO: Elapsed time: 1.205s, Critical Path: 1.10s\nINFO: 4 processes: 2 action cache hit, 1 internal, 1 local, 2 worker.\nINFO: Build completed successfully, 4 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices",
    "success": true,
    "start_time": "2025-04-09T13:42:35.437626+01:00",
    "end_time": "2025-04-09T13:42:36.899886+01:00",
    "duration": "1.46226125s",
    "output": "INFO: Invocation ID: da45b1f1-a205-4d0f-a07d-05326abc45d1\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices (1 packages loaded, 7 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/RepositoryServices/RepositoryServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/RepositoryServices/RepositoryServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/RepositoryServices/RepositoryServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/RepositoryServices/libRepositoryServices.a\nINFO: Elapsed time: 0.613s, Critical Path: 0.50s\nINFO: 3 processes: 1 action cache hit, 1 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 3 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ResticServices:ResticServices",
    "success": false,
    "start_time": "2025-04-09T13:42:36.899893+01:00",
    "end_time": "2025-04-09T13:42:38.076681+01:00",
    "duration": "1.176789666s",
    "output": "INFO: Invocation ID: 0ac34080-437d-4ad7-b5f0-fb201c4d3644\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ResticServices:ResticServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ResticServices:ResticServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ResticServices:ResticServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/ResticServices:ResticServices failed to build\nINFO: Elapsed time: 0.459s, Critical Path: 0.36s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore",
    "success": true,
    "start_time": "2025-04-09T13:42:38.076689+01:00",
    "end_time": "2025-04-09T13:42:38.917043+01:00",
    "duration": "840.355334ms",
    "output": "INFO: Invocation ID: 87ffacd5-cc18-4509-b59b-8ecf34973bbd\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityCore/SecurityCore.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityCore/SecurityCore.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityCore/SecurityCore.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityCore/libSecurityCore.a\nINFO: Elapsed time: 0.096s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices",
    "success": false,
    "start_time": "2025-04-09T13:42:38.917051+01:00",
    "end_time": "2025-04-09T13:42:40.101749+01:00",
    "duration": "1.184698834s",
    "output": "INFO: Invocation ID: a1433c4a-3193-4b82-95af-a92d23c8bd2b\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices (3 packages loaded, 14 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices failed to build\nINFO: Elapsed time: 0.471s, Critical Path: 0.37s\nINFO: 3 processes: 3 action cache hit, 3 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations",
    "success": false,
    "start_time": "2025-04-09T13:42:40.101757+01:00",
    "end_time": "2025-04-09T13:42:41.249666+01:00",
    "duration": "1.147909959s",
    "output": "INFO: Invocation ID: 87821b8e-9502-4617-abac-d2cbef20388a\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations failed to build\nINFO: Elapsed time: 0.468s, Critical Path: 0.37s\nINFO: 3 processes: 3 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories",
    "success": false,
    "start_time": "2025-04-09T13:42:41.249672+01:00",
    "end_time": "2025-04-09T13:42:42.427963+01:00",
    "duration": "1.178292291s",
    "output": "INFO: Invocation ID: 8c19e753-ded5-4c35-bd90-cdd1e3a0a9f4\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories failed to build\nINFO: Elapsed time: 0.461s, Critical Path: 0.36s\nINFO: 3 processes: 3 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation",
    "success": false,
    "start_time": "2025-04-09T13:42:42.42797+01:00",
    "end_time": "2025-04-09T13:42:43.594785+01:00",
    "duration": "1.166815834s",
    "output": "INFO: Invocation ID: f7b60bbc-aa1e-4855-89b3-31f88e9e0cd0\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/KeychainServices/Logging/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:166:32: error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n164 |     // Add all entries from the additional metadata\n165 |     for entry in additionalMetadata.entries {\n166 |       combinedMetadata.entries.append(entry)\n    |                                `- error: cannot use mutating member on immutable value: 'entries' setter is inaccessible\n167 |     }\n168 |     \n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:176:17: error: extra argument 'metadata' in call\n174 |       domainName: domainName,\n175 |       correlationID: correlationID,\n176 |       metadata: combinedMetadata\n    |                 `- error: extra argument 'metadata' in call\n177 |     )\n178 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:198:17: error: extra argument 'metadata' in call\n196 |       domainName: domainName,\n197 |       correlationID: correlationID,\n198 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n199 |     )\n200 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:220:17: error: extra argument 'metadata' in call\n218 |       domainName: domainName,\n219 |       correlationID: correlationID,\n220 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n221 |     )\n222 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogContext.swift:242:17: error: extra argument 'metadata' in call\n240 |       domainName: domainName,\n241 |       correlationID: correlationID,\n242 |       metadata: updatedMetadata\n    |                 `- error: extra argument 'metadata' in call\n243 |     )\n244 |   }\n\npackages/UmbraImplementations/Sources/KeychainServices/Logging/KeychainLogger.swift:334:16: error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n332 |  A basic implementation of LogContextDTO for use with the KeychainLogger.\n333 |  */\n334 | private struct BaseLogContextDTO: LogContextDTO {\n    |                |- error: type 'BaseLogContextDTO' does not conform to protocol 'LogContextDTO'\n    |                `- note: add stubs for conformance\n335 |   let domainName: String\n336 |   let source: String?\n\n/Users/mpy/.bazel/execroot/_main/packages/UmbraCoreTypes/Sources/LoggingTypes/LogContextDTO.swift:14:7: note: protocol requires property 'correlationID' with type 'String?'\n12 | \n13 |   /// Optional correlation ID for tracing related log events\n14 |   var correlationID: String? { get }\n   |       `- note: protocol requires property 'correlationID' with type 'String?'\n15 | \n16 |   /// The metadata collection for this context\nTarget //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation failed to build\nINFO: Elapsed time: 0.452s, Critical Path: 0.37s\nINFO: 3 processes: 3 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement",
    "success": false,
    "start_time": "2025-04-09T13:42:43.59479+01:00",
    "end_time": "2025-04-09T13:42:44.851026+01:00",
    "duration": "1.256237292s",
    "output": "INFO: Invocation ID: ff69d0e6-f875-4b04-8ec9-2abc9f2b9387\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraImplementations/Sources/SecurityKeyManagement/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.6.0-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/SecurityKeyManagement.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'PrivacyAwareLoggingProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'PrivacyAwareLoggingProtocol'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'LoggingProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'LoggingProtocol'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'CoreLoggingProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'CoreLoggingProtocol'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'Actor'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'Actor'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: type 'DefaultLoggingService' does not conform to protocol 'LoggingServiceProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                |- error: type 'DefaultLoggingService' does not conform to protocol 'LoggingServiceProtocol'\n    |                `- note: add stubs for conformance\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n 92 |   func trace(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n 93 |   func debug(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 94 |   func info(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 95 |   func warning(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 96 |   func error(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 97 |   func critical(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 98 | \n 99 |   // MARK: - PrivacyAwareLoggingProtocol Methods\n\nLoggingInterfaces.LoggingServiceProtocol.verbose:2:6: note: protocol requires function 'verbose(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func verbose(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'verbose(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.debug:2:6: note: protocol requires function 'debug(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func debug(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'debug(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.info:2:6: note: protocol requires function 'info(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func info(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'info(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.warning:2:6: note: protocol requires function 'warning(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func warning(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'warning(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.error:2:6: note: protocol requires function 'error(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func error(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'error(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.critical:2:6: note: protocol requires function 'critical(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func critical(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'critical(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \npackages/UmbraImplementations/Sources/SecurityKeyManagement/DefaultLogger.swift:91:26: error: cannot convert value of type 'PrivacyMetadata' to expected argument type 'LogMetadataDTOCollection'\n 89 |     let context=LogContext(\n 90 |       source: source,\n 91 |       metadata: metadata ?? PrivacyMetadata()\n    |                          `- error: cannot convert value of type 'PrivacyMetadata' to expected argument type 'LogMetadataDTOCollection'\n 92 |     )\n 93 | \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'PrivacyAwareLoggingProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'PrivacyAwareLoggingProtocol'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'LoggingProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'LoggingProtocol'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'CoreLoggingProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'CoreLoggingProtocol'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'Actor'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                `- error: non-class type 'DefaultLoggingService' cannot conform to class protocol 'Actor'\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n\npackages/UmbraImplementations/Sources/SecurityKeyManagement/KeyManagementFactory.swift:89:16: error: type 'DefaultLoggingService' does not conform to protocol 'LoggingServiceProtocol'\n 87 |  This implementation follows the privacy-aware logging system design.\n 88 |  */\n 89 | private struct DefaultLoggingService: LoggingServiceProtocol, PrivacyAwareLoggingProtocol {\n    |                |- error: type 'DefaultLoggingService' does not conform to protocol 'LoggingServiceProtocol'\n    |                `- note: add stubs for conformance\n 90 |   // MARK: - LoggingProtocol Methods\n 91 |   \n 92 |   func trace(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n 93 |   func debug(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 94 |   func info(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 95 |   func warning(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 96 |   func error(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 97 |   func critical(_: String, metadata _: LogMetadataDTOCollection?, source _: String) async {}\n    |        `- note: candidate has non-matching type '(String, LogMetadataDTOCollection?, String) async -\u003e ()'\n 98 | \n 99 |   // MARK: - PrivacyAwareLoggingProtocol Methods\n\nLoggingInterfaces.LoggingServiceProtocol.verbose:2:6: note: protocol requires function 'verbose(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func verbose(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'verbose(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.debug:2:6: note: protocol requires function 'debug(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func debug(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'debug(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.info:2:6: note: protocol requires function 'info(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func info(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'info(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.warning:2:6: note: protocol requires function 'warning(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func warning(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'warning(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.error:2:6: note: protocol requires function 'error(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func error(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'error(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \n\nLoggingInterfaces.LoggingServiceProtocol.critical:2:6: note: protocol requires function 'critical(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n1 | protocol LoggingServiceProtocol {\n2 | func critical(_ message: String, metadata: LoggingTypes.LogMetadataDTOCollection?, source: String?) async}\n  |      `- note: protocol requires function 'critical(_:metadata:source:)' with type '(String, LogMetadataDTOCollection?, String?) async -\u003e ()'\n3 | \nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement failed to build\nINFO: Elapsed time: 0.533s, Critical Path: 0.44s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor",
    "success": true,
    "start_time": "2025-04-09T13:42:44.851038+01:00",
    "end_time": "2025-04-09T13:42:46.076307+01:00",
    "duration": "1.225270541s",
    "output": "INFO: Invocation ID: 20f28140-6ffd-4693-ab06-d682af0ac0f2\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor (2 packages loaded, 4 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor/KeyManagementActor.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor/KeyManagementActor.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor/KeyManagementActor.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor/libKeyManagementActor.a\nINFO: Elapsed time: 0.519s, Critical Path: 0.41s\nINFO: 4 processes: 2 action cache hit, 2 disk cache hit, 1 internal, 1 worker.\nINFO: Build completed successfully, 4 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes",
    "success": true,
    "start_time": "2025-04-09T13:42:46.076323+01:00",
    "end_time": "2025-04-09T13:42:47.207021+01:00",
    "duration": "1.130699s",
    "output": "INFO: Invocation ID: 2fb68c8b-027a-49bf-b50e-6a064ae7d64f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes/KeyManagementActorTypes.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes/KeyManagementActorTypes.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes/KeyManagementActorTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes/libKeyManagementActorTypes.a\nINFO: Elapsed time: 0.092s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage",
    "success": true,
    "start_time": "2025-04-09T13:42:47.207027+01:00",
    "end_time": "2025-04-09T13:42:48.254773+01:00",
    "duration": "1.047746792s",
    "output": "INFO: Invocation ID: d792af2f-e74b-42b4-9c6b-8a18d65df79f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage/KeyStorage.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage/KeyStorage.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage/KeyStorage.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage/libKeyStorage.a\nINFO: Elapsed time: 0.092s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes",
    "success": true,
    "start_time": "2025-04-09T13:42:48.254793+01:00",
    "end_time": "2025-04-09T13:42:49.048557+01:00",
    "duration": "793.76475ms",
    "output": "INFO: Invocation ID: e1e6ab8b-4b8b-4111-a7ae-eb4607cf54f7\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Types/SecurityKeyTypes.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Types/SecurityKeyTypes.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Types/SecurityKeyTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityKeyManagement/Types/libSecurityKeyTypes.a\nINFO: Elapsed time: 0.079s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders",
    "success": true,
    "start_time": "2025-04-09T13:42:49.04858+01:00",
    "end_time": "2025-04-09T13:42:49.842813+01:00",
    "duration": "794.233666ms",
    "output": "INFO: Invocation ID: d65c7345-c138-475c-8dd7-1abf5105a2d2\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityProviders/SecurityProviders.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityProviders/SecurityProviders.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityProviders/SecurityProviders.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityProviders/libSecurityProviders.a\nINFO: Elapsed time: 0.089s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils",
    "success": true,
    "start_time": "2025-04-09T13:42:49.842819+01:00",
    "end_time": "2025-04-09T13:42:50.618209+01:00",
    "duration": "775.390416ms",
    "output": "INFO: Invocation ID: a98d4690-ef90-4b47-8d17-38ad8192b146\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityUtils/SecurityUtils.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityUtils/SecurityUtils.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityUtils/SecurityUtils.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/SecurityUtils/libSecurityUtils.a\nINFO: Elapsed time: 0.086s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/XPCServices:XPCServices",
    "success": true,
    "start_time": "2025-04-09T13:42:50.618234+01:00",
    "end_time": "2025-04-09T13:42:51.427054+01:00",
    "duration": "808.82125ms",
    "output": "INFO: Invocation ID: b9ca6cba-f817-4d2f-8f5d-a571089ab06e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/XPCServices:XPCServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/XPCServices:XPCServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/XPCServices:XPCServices (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraImplementations/Sources/XPCServices:XPCServices up-to-date:\n  bazel-bin/packages/UmbraImplementations/Sources/XPCServices/XPCServices.swiftdoc\n  bazel-bin/packages/UmbraImplementations/Sources/XPCServices/XPCServices.swiftmodule\n  bazel-bin/packages/UmbraImplementations/Sources/XPCServices/XPCServices.swiftsourceinfo\n  bazel-bin/packages/UmbraImplementations/Sources/XPCServices/libXPCServices.a\nINFO: Elapsed time: 0.093s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:51.427074+01:00",
    "end_time": "2025-04-09T13:42:52.265262+01:00",
    "duration": "838.188958ms",
    "output": "INFO: Invocation ID: 8691489f-8a66-4c40-be17-1fbaccc82533\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/APIInterfaces/APIInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/APIInterfaces/APIInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/APIInterfaces/APIInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/APIInterfaces/libAPIInterfaces.a\nINFO: Elapsed time: 0.077s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:52.265283+01:00",
    "end_time": "2025-04-09T13:42:53.085607+01:00",
    "duration": "820.324334ms",
    "output": "INFO: Invocation ID: 2f942e21-99e7-4fc3-a0a2-5451cfda07a6\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/BackupInterfaces/BackupInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/BackupInterfaces/BackupInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/BackupInterfaces/BackupInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/BackupInterfaces/libBackupInterfaces.a\nINFO: Elapsed time: 0.091s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:53.085618+01:00",
    "end_time": "2025-04-09T13:42:53.91032+01:00",
    "duration": "824.702792ms",
    "output": "INFO: Invocation ID: a08f83ad-4356-44b5-aa99-d06c109f2a5c\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/CoreInterfaces/CoreInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/CoreInterfaces/CoreInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/CoreInterfaces/CoreInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/CoreInterfaces/libCoreInterfaces.a\nINFO: Elapsed time: 0.090s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:53.910329+01:00",
    "end_time": "2025-04-09T13:42:54.753008+01:00",
    "duration": "842.680291ms",
    "output": "INFO: Invocation ID: 8cdd08f9-c17e-4b3d-86b4-c1b8c1e17966\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/CryptoInterfaces/CryptoInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/CryptoInterfaces/CryptoInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/CryptoInterfaces/CryptoInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/CryptoInterfaces/libCryptoInterfaces.a\nINFO: Elapsed time: 0.084s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:54.753018+01:00",
    "end_time": "2025-04-09T13:42:55.511062+01:00",
    "duration": "758.045ms",
    "output": "INFO: Invocation ID: c8d4fc7b-d5af-4d21-92a3-84a3f2122631\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/DateTimeInterfaces/DateTimeInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/DateTimeInterfaces/DateTimeInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/DateTimeInterfaces/DateTimeInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/DateTimeInterfaces/libDateTimeInterfaces.a\nINFO: Elapsed time: 0.095s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:55.511085+01:00",
    "end_time": "2025-04-09T13:42:56.406777+01:00",
    "duration": "895.692375ms",
    "output": "INFO: Invocation ID: 44d2706a-e098-44e7-8ac8-0a9c42e557d8\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces/libErrorHandlingInterfaces.a\nINFO: Elapsed time: 0.099s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:56.406784+01:00",
    "end_time": "2025-04-09T13:42:57.279204+01:00",
    "duration": "872.421166ms",
    "output": "INFO: Invocation ID: caf8b467-7e6a-4244-888e-0944a80b9bf4\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces/ErrorLoggingInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces/ErrorLoggingInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces/ErrorLoggingInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces/libErrorLoggingInterfaces.a\nINFO: Elapsed time: 0.095s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:57.279211+01:00",
    "end_time": "2025-04-09T13:42:58.375038+01:00",
    "duration": "1.095828708s",
    "output": "INFO: Invocation ID: 9c893af4-5157-41bb-840b-e37c27895067\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/FileSystemInterfaces/FileSystemInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/FileSystemInterfaces/FileSystemInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/FileSystemInterfaces/FileSystemInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/FileSystemInterfaces/libFileSystemInterfaces.a\nINFO: Elapsed time: 0.080s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:58.375046+01:00",
    "end_time": "2025-04-09T13:42:59.281675+01:00",
    "duration": "906.62925ms",
    "output": "INFO: Invocation ID: 04e84c0f-fd24-4168-bf76-b14feaa162d6\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/KeychainInterfaces/KeychainInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/KeychainInterfaces/KeychainInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/KeychainInterfaces/KeychainInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/KeychainInterfaces/libKeychainInterfaces.a\nINFO: Elapsed time: 0.087s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:42:59.281682+01:00",
    "end_time": "2025-04-09T13:43:00.21841+01:00",
    "duration": "936.7285ms",
    "output": "INFO: Invocation ID: cec49a47-c269-4a5f-bf66-963ca8969e29\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingInterfaces/LoggingInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingInterfaces/LoggingInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingInterfaces/LoggingInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingInterfaces/libLoggingInterfaces.a\nINFO: Elapsed time: 0.086s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:43:00.218416+01:00",
    "end_time": "2025-04-09T13:43:01.007742+01:00",
    "duration": "789.327125ms",
    "output": "INFO: Invocation ID: 5dcf733e-a53c-4f38-b196-8ae96c961495\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces/libLoggingWrapperInterfaces.a\nINFO: Elapsed time: 0.084s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:43:01.007759+01:00",
    "end_time": "2025-04-09T13:43:01.799507+01:00",
    "duration": "791.748583ms",
    "output": "INFO: Invocation ID: fbf60255-8047-46a3-8dce-d32a5277474c\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/NetworkInterfaces/NetworkInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/NetworkInterfaces/NetworkInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/NetworkInterfaces/NetworkInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/NetworkInterfaces/libNetworkInterfaces.a\nINFO: Elapsed time: 0.093s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:43:01.799514+01:00",
    "end_time": "2025-04-09T13:43:02.598826+01:00",
    "duration": "799.312292ms",
    "output": "INFO: Invocation ID: 6bc2264f-0bdf-48bb-97a6-95f91824145a\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/RepositoryInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/RepositoryInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/RepositoryInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/libRepositoryInterfaces.a\nINFO: Elapsed time: 0.089s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:43:02.598832+01:00",
    "end_time": "2025-04-09T13:43:03.51119+01:00",
    "duration": "912.359584ms",
    "output": "INFO: Invocation ID: 111d0174-029a-481e-acbc-cbc509c6f81a\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/ResticInterfaces/ResticInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/ResticInterfaces/ResticInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/ResticInterfaces/ResticInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/ResticInterfaces/libResticInterfaces.a\nINFO: Elapsed time: 0.107s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:43:03.511196+01:00",
    "end_time": "2025-04-09T13:43:04.294791+01:00",
    "duration": "783.595708ms",
    "output": "INFO: Invocation ID: a6086248-c4ac-49ce-881e-84202bd4a207\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityCoreInterfaces/SecurityCoreInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityCoreInterfaces/SecurityCoreInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityCoreInterfaces/SecurityCoreInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityCoreInterfaces/libSecurityCoreInterfaces.a\nINFO: Elapsed time: 0.078s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces",
    "success": true,
    "start_time": "2025-04-09T13:43:04.294798+01:00",
    "end_time": "2025-04-09T13:43:05.31192+01:00",
    "duration": "1.017122583s",
    "output": "INFO: Invocation ID: f696b622-d625-4eba-8c62-e443681d2e71\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityInterfaces/SecurityInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityInterfaces/SecurityInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityInterfaces/SecurityInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/SecurityInterfaces/libSecurityInterfaces.a\nINFO: Elapsed time: 0.093s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore",
    "success": true,
    "start_time": "2025-04-09T13:43:05.311926+01:00",
    "end_time": "2025-04-09T13:43:06.096073+01:00",
    "duration": "784.147958ms",
    "output": "INFO: Invocation ID: 0127d2ff-9d18-4d68-ac2d-28c3f7713103\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/XPCProtocolsCore/XPCProtocolsCore.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/XPCProtocolsCore/XPCProtocolsCore.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/XPCProtocolsCore/XPCProtocolsCore.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/XPCProtocolsCore/libXPCProtocolsCore.a\nINFO: Elapsed time: 0.077s, Critical Path: 0.00s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  },
  {
    "target": "rule //packages/UmbraServices/Sources/LoggingServices:LoggingServices",
    "success": true,
    "start_time": "2025-04-09T13:43:06.09608+01:00",
    "end_time": "2025-04-09T13:43:06.940226+01:00",
    "duration": "844.146542ms",
    "output": "INFO: Invocation ID: 7b6ce208-857c-4f1d-821c-51b24beba596\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraServices/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraServices/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraServices/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraServices/Sources/LoggingServices:LoggingServices up-to-date:\n  bazel-bin/packages/UmbraServices/Sources/LoggingServices/LoggingServices.swiftdoc\n  bazel-bin/packages/UmbraServices/Sources/LoggingServices/LoggingServices.swiftmodule\n  bazel-bin/packages/UmbraServices/Sources/LoggingServices/LoggingServices.swiftsourceinfo\n  bazel-bin/packages/UmbraServices/Sources/LoggingServices/libLoggingServices.a\nINFO: Elapsed time: 0.094s, Critical Path: 0.01s\nINFO: 2 processes: 1 disk cache hit, 1 internal.\nINFO: Build completed successfully, 2 total actions\n"
  }
]
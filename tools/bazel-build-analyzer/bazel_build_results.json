[
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:17:59.302323+01:00",
    "end_time": "2025-04-06T12:18:02.069854+01:00",
    "duration": "2.767513875s",
    "output": "INFO: Invocation ID: f8cd4d56-9c84-4582-9ee3-9d44b5556592\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces (4 packages loaded, 7 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces (4 packages loaded, 7 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces (105 packages loaded, 2793 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/APIInterfaces:APIInterfaces failed to build\nINFO: Elapsed time: 1.916s, Critical Path: 0.65s\nINFO: 3 processes: 53 action cache hit, 3 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:18:02.069864+01:00",
    "end_time": "2025-04-06T12:18:03.347703+01:00",
    "duration": "1.277831416s",
    "output": "INFO: Invocation ID: 9ff1bc98-4c02-4092-947f-4f1b02283ae6\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces (1 packages loaded, 6 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/ConfigInterfaces:ConfigInterfaces failed to build\nINFO: Elapsed time: 0.743s, Critical Path: 0.60s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs",
    "success": false,
    "start_time": "2025-04-06T12:18:03.347708+01:00",
    "end_time": "2025-04-06T12:18:04.700057+01:00",
    "duration": "1.352340792s",
    "output": "INFO: Invocation ID: a28dc082-b0fc-4386-8306-f71ff7652536\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOs failed to build\nINFO: Elapsed time: 0.774s, Critical Path: 0.63s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests",
    "success": false,
    "start_time": "2025-04-06T12:18:04.700067+01:00",
    "end_time": "2025-04-06T12:18:06.025976+01:00",
    "duration": "1.325900875s",
    "output": "INFO: Invocation ID: 02442ec9-f460-4a35-85ce-dd52a414512c\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests (0 packages loaded, 1 target configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/CoreDTOs:CoreDTOsTests failed to build\nINFO: Elapsed time: 0.732s, Critical Path: 0.59s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:18:06.025981+01:00",
    "end_time": "2025-04-06T12:18:07.323972+01:00",
    "duration": "1.297982958s",
    "output": "INFO: Invocation ID: 96d7b8d0-e6a9-4774-8c41-d3834ea91934\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces (1 packages loaded, 8 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/CoreInterfaces:CoreInterfaces failed to build\nINFO: Elapsed time: 0.728s, Critical Path: 0.58s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes",
    "success": false,
    "start_time": "2025-04-06T12:18:07.323984+01:00",
    "end_time": "2025-04-06T12:18:08.60343+01:00",
    "duration": "1.279438084s",
    "output": "INFO: Invocation ID: 59348696-f78a-4a54-b319-a78461c25027\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/CoreSecurityTypes:CoreSecurityTypes failed to build\nINFO: Elapsed time: 0.725s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:18:08.603437+01:00",
    "end_time": "2025-04-06T12:18:10.27772+01:00",
    "duration": "1.674272375s",
    "output": "INFO: Invocation ID: 8a49f929-77a6-4935-b647-838870e0edff\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces (2 packages loaded, 15 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/CryptoInterfaces:CryptoInterfaces failed to build\nINFO: Elapsed time: 0.735s, Critical Path: 0.59s\nINFO: 2 processes: 2 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes",
    "success": false,
    "start_time": "2025-04-06T12:18:10.277728+01:00",
    "end_time": "2025-04-06T12:18:11.658269+01:00",
    "duration": "1.380532541s",
    "output": "INFO: Invocation ID: 942cdeaf-1e5b-494a-8d2b-ca772ff917a8\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/CryptoTypes:CryptoTypes failed to build\nINFO: Elapsed time: 0.723s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes",
    "success": true,
    "start_time": "2025-04-06T12:18:11.658274+01:00",
    "end_time": "2025-04-06T12:18:12.480394+01:00",
    "duration": "822.115583ms",
    "output": "INFO: Invocation ID: d666021b-6dea-4234-888a-b8f91d9e7afd\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/DateTimeTypes:DateTimeTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/DateTimeTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/DateTimeTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/DateTimeTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/DateTimeTypes/libDateTimeTypes.a\nINFO: Elapsed time: 0.141s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes",
    "success": false,
    "start_time": "2025-04-06T12:18:12.480401+01:00",
    "end_time": "2025-04-06T12:18:13.778192+01:00",
    "duration": "1.297781958s",
    "output": "INFO: Invocation ID: 8b58c565-e187-4784-98d7-3faed534347f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/DomainSecurityTypes:DomainSecurityTypes failed to build\nINFO: Elapsed time: 0.720s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes",
    "success": true,
    "start_time": "2025-04-06T12:18:13.778202+01:00",
    "end_time": "2025-04-06T12:18:14.508731+01:00",
    "duration": "730.52425ms",
    "output": "INFO: Invocation ID: 5b7e6650-d309-418d-adc1-4fb014ec889e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes (1 packages loaded, 4 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/ErrorCoreTypes:ErrorCoreTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/ErrorCoreTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/ErrorCoreTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/ErrorCoreTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/ErrorCoreTypes/libErrorCoreTypes.a\nINFO: Elapsed time: 0.140s, Critical Path: 0.00s\nINFO: 1 process: 3 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes",
    "success": true,
    "start_time": "2025-04-06T12:18:14.508737+01:00",
    "end_time": "2025-04-06T12:18:15.199686+01:00",
    "duration": "690.944667ms",
    "output": "INFO: Invocation ID: 6e1e58cd-cdd1-4db5-a48e-19610ac6277b\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/FileSystemTypes:FileSystemTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/FileSystemTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/FileSystemTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/FileSystemTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/FileSystemTypes/libFileSystemTypes.a\nINFO: Elapsed time: 0.135s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes",
    "success": true,
    "start_time": "2025-04-06T12:18:15.199696+01:00",
    "end_time": "2025-04-06T12:18:15.894161+01:00",
    "duration": "694.460875ms",
    "output": "INFO: Invocation ID: 539e5fd3-ed9b-479a-b386-47863e0c53cb\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes (1 packages loaded, 7 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypes up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypes.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypes.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypes.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/libKeyManagementTypes.a\nINFO: Elapsed time: 0.146s, Critical Path: 0.00s\nINFO: 1 process: 3 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests",
    "success": true,
    "start_time": "2025-04-06T12:18:15.894182+01:00",
    "end_time": "2025-04-06T12:18:16.59311+01:00",
    "duration": "698.923958ms",
    "output": "INFO: Invocation ID: 26f10c29-c3a8-4b99-aa0f-7acb2546cb19\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests (0 packages loaded, 1 target configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/KeyManagementTypes:KeyManagementTypesTests up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/KeyManagementTypes/libKeyManagementTypesTests.a\nINFO: Elapsed time: 0.142s, Critical Path: 0.00s\nINFO: 1 process: 3 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes",
    "success": false,
    "start_time": "2025-04-06T12:18:16.593117+01:00",
    "end_time": "2025-04-06T12:18:18.063968+01:00",
    "duration": "1.470842458s",
    "output": "INFO: Invocation ID: acf3ea65-409f-4a0a-bd51-ad200ca700ba\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes (2 packages loaded, 9 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/KeychainTypes:KeychainTypes failed to build\nINFO: Elapsed time: 0.726s, Critical Path: 0.58s\nINFO: 2 processes: 2 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes",
    "success": false,
    "start_time": "2025-04-06T12:18:18.063977+01:00",
    "end_time": "2025-04-06T12:18:19.418006+01:00",
    "duration": "1.35402025s",
    "output": "INFO: Invocation ID: 4010334f-e24c-4c8b-928b-d3c15a2ce49a\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed to build\nINFO: Elapsed time: 0.731s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/Notification:Notification",
    "success": true,
    "start_time": "2025-04-06T12:18:19.418018+01:00",
    "end_time": "2025-04-06T12:18:20.103182+01:00",
    "duration": "685.159625ms",
    "output": "INFO: Invocation ID: 8acb9bab-0038-48b8-911d-d322717493c9\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Notification:Notification (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Notification:Notification (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/Notification:Notification (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/Notification:Notification up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/Notification.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/Notification.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/Notification.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/Notification/libNotification.a\nINFO: Elapsed time: 0.130s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling",
    "success": true,
    "start_time": "2025-04-06T12:18:20.103191+01:00",
    "end_time": "2025-04-06T12:18:20.831797+01:00",
    "duration": "728.601458ms",
    "output": "INFO: Invocation ID: 17294fc1-95ab-4e1e-a20d-8c61e1f72b40\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/Scheduling:Scheduling up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/Scheduling.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/Scheduling.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/Scheduling.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/Scheduling/libScheduling.a\nINFO: Elapsed time: 0.133s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:18:20.831804+01:00",
    "end_time": "2025-04-06T12:18:22.200035+01:00",
    "duration": "1.36822275s",
    "output": "INFO: Invocation ID: 5413d564-5c58-4def-91e5-a3fbd17a194e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces (1 packages loaded, 2 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces:SecurityInterfaces failed to build\nINFO: Elapsed time: 0.743s, Critical Path: 0.60s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters",
    "success": false,
    "start_time": "2025-04-06T12:18:22.200042+01:00",
    "end_time": "2025-04-06T12:18:23.519872+01:00",
    "duration": "1.319822s",
    "output": "INFO: Invocation ID: c21d11d3-20ea-42fe-a763-77a23c25a9c9\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters (3 packages loaded, 17 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Adapters:SecurityInterfacesAdapters failed to build\nINFO: Elapsed time: 0.744s, Critical Path: 0.59s\nINFO: 2 processes: 3 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs",
    "success": false,
    "start_time": "2025-04-06T12:18:23.519884+01:00",
    "end_time": "2025-04-06T12:18:24.801605+01:00",
    "duration": "1.281713208s",
    "output": "INFO: Invocation ID: 47730345-f0cd-48f2-b9b9-1065ba114be7\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/DTOs:SecurityInterfacesDTOs failed to build\nINFO: Elapsed time: 0.735s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels",
    "success": false,
    "start_time": "2025-04-06T12:18:24.801611+01:00",
    "end_time": "2025-04-06T12:18:26.096902+01:00",
    "duration": "1.295283208s",
    "output": "INFO: Invocation ID: 9d7446ce-73e4-42f0-a22b-da03097b4d8e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels (1 packages loaded, 2 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Models:SecurityInterfacesModels failed to build\nINFO: Elapsed time: 0.727s, Critical Path: 0.58s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols",
    "success": false,
    "start_time": "2025-04-06T12:18:26.096915+01:00",
    "end_time": "2025-04-06T12:18:27.429171+01:00",
    "duration": "1.3322475s",
    "output": "INFO: Invocation ID: dc8cd574-5b0c-4d38-a185-aa914b8d6289\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Protocols:SecurityInterfacesProtocols failed to build\nINFO: Elapsed time: 0.726s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes",
    "success": false,
    "start_time": "2025-04-06T12:18:27.429179+01:00",
    "end_time": "2025-04-06T12:18:28.737675+01:00",
    "duration": "1.308487291s",
    "output": "INFO: Invocation ID: faf2627f-91b2-44d0-a147-037701cf692e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes (1 packages loaded, 4 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/Types:SecurityInterfacesTypes failed to build\nINFO: Elapsed time: 0.729s, Critical Path: 0.59s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC",
    "success": false,
    "start_time": "2025-04-06T12:18:28.737685+01:00",
    "end_time": "2025-04-06T12:18:30.039732+01:00",
    "duration": "1.302038291s",
    "output": "INFO: Invocation ID: bcd77d30-7d4f-47ab-bc75-236a01180e6f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC (1 packages loaded, 2 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityInterfaces/XPC:SecurityInterfacesXPC failed to build\nINFO: Elapsed time: 0.733s, Critical Path: 0.59s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes",
    "success": false,
    "start_time": "2025-04-06T12:18:30.039742+01:00",
    "end_time": "2025-04-06T12:18:31.422881+01:00",
    "duration": "1.383130208s",
    "output": "INFO: Invocation ID: 3c4a209c-f91a-4f69-9eee-7c9bca45e75d\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes (1 packages loaded, 3 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraCoreTypes/Sources/SecurityKeyTypes:SecurityKeyTypes failed to build\nINFO: Elapsed time: 0.728s, Critical Path: 0.58s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors",
    "success": true,
    "start_time": "2025-04-06T12:18:31.422896+01:00",
    "end_time": "2025-04-06T12:18:32.095631+01:00",
    "duration": "672.730583ms",
    "output": "INFO: Invocation ID: 44880c6c-d82b-4db4-b731-f0d81c266960\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors:UmbraErrors up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/UmbraErrors.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/UmbraErrors.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/UmbraErrors.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/libUmbraErrors.a\nINFO: Elapsed time: 0.138s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore",
    "success": true,
    "start_time": "2025-04-06T12:18:32.095654+01:00",
    "end_time": "2025-04-06T12:18:32.815021+01:00",
    "duration": "719.362292ms",
    "output": "INFO: Invocation ID: 441706e8-b300-4a11-9643-77fbce8c1be7\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/Core:UmbraErrorsCore up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Core/libUmbraErrorsCore.a\nINFO: Elapsed time: 0.132s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs",
    "success": true,
    "start_time": "2025-04-06T12:18:32.815027+01:00",
    "end_time": "2025-04-06T12:18:33.48025+01:00",
    "duration": "665.218166ms",
    "output": "INFO: Invocation ID: c13ad75f-f929-4826-aa03-62ddc92ef0cb\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs:UmbraErrorsDTOs up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/UmbraErrorsDTOs.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/UmbraErrorsDTOs.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/UmbraErrorsDTOs.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/DTOs/libUmbraErrorsDTOs.a\nINFO: Elapsed time: 0.140s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains",
    "success": true,
    "start_time": "2025-04-06T12:18:33.480257+01:00",
    "end_time": "2025-04-06T12:18:34.16059+01:00",
    "duration": "680.329541ms",
    "output": "INFO: Invocation ID: c6bd8add-5b3e-4438-8a43-635b74c9ea07\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/Domains:UmbraErrorsDomains up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/UmbraErrorsDomains.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/UmbraErrorsDomains.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/UmbraErrorsDomains.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Domains/libUmbraErrorsDomains.a\nINFO: Elapsed time: 0.134s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping",
    "success": true,
    "start_time": "2025-04-06T12:18:34.160597+01:00",
    "end_time": "2025-04-06T12:18:34.914488+01:00",
    "duration": "753.886625ms",
    "output": "INFO: Invocation ID: 2fe8d908-375f-4d1e-88f0-321e19b065fc\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping:UmbraErrorsMapping up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/UmbraErrorsMapping.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/UmbraErrorsMapping.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/UmbraErrorsMapping.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UmbraErrors/Mapping/libUmbraErrorsMapping.a\nINFO: Elapsed time: 0.129s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults",
    "success": true,
    "start_time": "2025-04-06T12:18:34.914494+01:00",
    "end_time": "2025-04-06T12:18:35.619105+01:00",
    "duration": "704.6065ms",
    "output": "INFO: Invocation ID: 388fd8d4-2f14-455c-9d8a-0dad945446ac\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UserDefaults:UserDefaults up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/UserDefaults.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/UserDefaults.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/UserDefaults.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/libUserDefaults.a\nINFO: Elapsed time: 0.135s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters",
    "success": true,
    "start_time": "2025-04-06T12:18:35.619112+01:00",
    "end_time": "2025-04-06T12:18:36.337031+01:00",
    "duration": "717.914875ms",
    "output": "INFO: Invocation ID: e924b7cd-2edd-41e8-a4ae-bd1dabe782c2\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UserDefaults/Adapters:UserDefaultsAdapters up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/UserDefaultsAdapters.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/UserDefaultsAdapters.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/UserDefaultsAdapters.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/Adapters/libUserDefaultsAdapters.a\nINFO: Elapsed time: 0.133s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs",
    "success": true,
    "start_time": "2025-04-06T12:18:36.337038+01:00",
    "end_time": "2025-04-06T12:18:37.064457+01:00",
    "duration": "727.414625ms",
    "output": "INFO: Invocation ID: 808886d3-45a5-4889-9c2b-f86f76b1e337\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraCoreTypes/Sources/UserDefaults/DTOs:UserDefaultsDTOs up-to-date:\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/UserDefaultsDTOs.swiftdoc\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/UserDefaultsDTOs.swiftmodule\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/UserDefaultsDTOs.swiftsourceinfo\n  bazel-bin/packages/UmbraCoreTypes/Sources/UserDefaults/DTOs/libUserDefaultsDTOs.a\nINFO: Elapsed time: 0.136s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/APIServices:APIServices",
    "success": false,
    "start_time": "2025-04-06T12:18:37.064463+01:00",
    "end_time": "2025-04-06T12:18:38.486029+01:00",
    "duration": "1.421556875s",
    "output": "INFO: Invocation ID: 03156001-612a-4e4b-9677-f5b14152a4cb\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/APIServices:APIServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/APIServices:APIServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/APIServices:APIServices (11 packages loaded, 95 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/APIServices:APIServices failed to build\nINFO: Elapsed time: 0.750s, Critical Path: 0.59s\nINFO: 2 processes: 12 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator",
    "success": false,
    "start_time": "2025-04-06T12:18:38.486037+01:00",
    "end_time": "2025-04-06T12:18:39.813864+01:00",
    "duration": "1.327819125s",
    "output": "INFO: Invocation ID: b873d4d5-ca0d-4359-8faf-2c4ac11dfbf0\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator (17 packages loaded, 156 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/BackupCoordinator:BackupCoordinator failed to build\nINFO: Elapsed time: 0.758s, Critical Path: 0.58s\nINFO: 3 processes: 17 action cache hit, 3 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BackupServices:BackupServices",
    "success": false,
    "start_time": "2025-04-06T12:18:39.813873+01:00",
    "end_time": "2025-04-06T12:18:41.153525+01:00",
    "duration": "1.3396435s",
    "output": "INFO: Invocation ID: fb30aef1-53a8-4a09-8eeb-0c36827853c3\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupServices:BackupServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BackupServices:BackupServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BackupServices:BackupServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/BackupServices:BackupServices failed to build\nINFO: Elapsed time: 0.756s, Critical Path: 0.60s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices",
    "success": false,
    "start_time": "2025-04-06T12:18:41.153533+01:00",
    "end_time": "2025-04-06T12:18:42.440317+01:00",
    "duration": "1.286776208s",
    "output": "INFO: Invocation ID: 5b8a9a96-af1f-4d16-ba4b-f1e0d50255c2\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices (3 packages loaded, 8 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/BookmarkServices:BookmarkServices failed to build\nINFO: Elapsed time: 0.727s, Critical Path: 0.59s\nINFO: 2 processes: 3 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger",
    "success": false,
    "start_time": "2025-04-06T12:18:42.440326+01:00",
    "end_time": "2025-04-06T12:18:43.777424+01:00",
    "duration": "1.337088708s",
    "output": "INFO: Invocation ID: 172f7a62-4e22-42b0-8ee0-8d4ee7068046\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/BookmarkServices/Logging:BookmarkLogger failed to build\nINFO: Elapsed time: 0.712s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel",
    "success": false,
    "start_time": "2025-04-06T12:18:43.77743+01:00",
    "end_time": "2025-04-06T12:18:45.177236+01:00",
    "duration": "1.399796584s",
    "output": "INFO: Invocation ID: 745eed4c-5cd5-4b5f-aabb-d8ac98e6cb13\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/BookmarkServices/Model:BookmarkModel failed to build\nINFO: Elapsed time: 0.736s, Critical Path: 0.60s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices",
    "success": false,
    "start_time": "2025-04-06T12:18:45.177243+01:00",
    "end_time": "2025-04-06T12:18:46.489437+01:00",
    "duration": "1.312185458s",
    "output": "INFO: Invocation ID: d0008d11-5242-4b37-9f7e-bff06f3aacc0\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices (2 packages loaded, 12 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/ConfigServices:ConfigServices failed to build\nINFO: Elapsed time: 0.731s, Critical Path: 0.59s\nINFO: 2 processes: 2 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CoreServices:CoreServices",
    "success": false,
    "start_time": "2025-04-06T12:18:46.489444+01:00",
    "end_time": "2025-04-06T12:18:47.820615+01:00",
    "duration": "1.331162208s",
    "output": "INFO: Invocation ID: 834a2a5a-b7bc-497c-ab5c-b81c5069819f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CoreServices:CoreServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CoreServices:CoreServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CoreServices:CoreServices (3 packages loaded, 41 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/CoreServices:CoreServices failed to build\nINFO: Elapsed time: 0.717s, Critical Path: 0.58s\nINFO: 2 processes: 3 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices",
    "success": false,
    "start_time": "2025-04-06T12:18:47.820624+01:00",
    "end_time": "2025-04-06T12:18:49.151944+01:00",
    "duration": "1.331311458s",
    "output": "INFO: Invocation ID: 7b92c262-caef-4be9-8750-de89220eb9df\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/CryptoServices:CryptoServices failed to build\nINFO: Elapsed time: 0.728s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger",
    "success": false,
    "start_time": "2025-04-06T12:18:49.151951+01:00",
    "end_time": "2025-04-06T12:18:50.40294+01:00",
    "duration": "1.250981292s",
    "output": "INFO: Invocation ID: beda2b16-e31b-4d5b-b1fa-6f0b4cd468ea\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/CryptoServices/Logging:CryptoLogger failed to build\nINFO: Elapsed time: 0.727s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices",
    "success": false,
    "start_time": "2025-04-06T12:18:50.402949+01:00",
    "end_time": "2025-04-06T12:18:51.692898+01:00",
    "duration": "1.2899415s",
    "output": "INFO: Invocation ID: 947b9787-7884-4709-b8a7-a4205049cd49\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices (1 packages loaded, 4 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/CryptoXPCServices:CryptoXPCServices failed to build\nINFO: Elapsed time: 0.735s, Critical Path: 0.59s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices",
    "success": false,
    "start_time": "2025-04-06T12:18:51.692903+01:00",
    "end_time": "2025-04-06T12:18:53.127261+01:00",
    "duration": "1.434348958s",
    "output": "INFO: Invocation ID: 6d73f3d9-c57f-4b3d-9cda-6d5126852127\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices (2 packages loaded, 5 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/DateTimeServices:DateTimeServices failed to build\nINFO: Elapsed time: 0.746s, Critical Path: 0.60s\nINFO: 2 processes: 2 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl",
    "success": false,
    "start_time": "2025-04-06T12:18:53.127278+01:00",
    "end_time": "2025-04-06T12:18:54.443794+01:00",
    "duration": "1.316508125s",
    "output": "INFO: Invocation ID: 61c12c9a-b46c-438f-b160-0c64a6d13823\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/ErrorDomainsImpl:ErrorDomainsImpl failed to build\nINFO: Elapsed time: 0.728s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl",
    "success": false,
    "start_time": "2025-04-06T12:18:54.443805+01:00",
    "end_time": "2025-04-06T12:18:55.795644+01:00",
    "duration": "1.351831s",
    "output": "INFO: Invocation ID: c4b2b3bb-00b0-4f62-a4ac-4548d7e0ece3\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl (1 packages loaded, 4 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/ErrorHandlingImpl:ErrorHandlingImpl failed to build\nINFO: Elapsed time: 0.790s, Critical Path: 0.65s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices",
    "success": false,
    "start_time": "2025-04-06T12:18:55.795653+01:00",
    "end_time": "2025-04-06T12:18:57.152061+01:00",
    "duration": "1.356399875s",
    "output": "INFO: Invocation ID: b5e62737-704b-444a-8f3a-12d5d60661e4\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices (2 packages loaded, 8 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/ErrorLoggingServices:ErrorLoggingServices failed to build\nINFO: Elapsed time: 0.780s, Critical Path: 0.65s\nINFO: 2 processes: 2 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices",
    "success": false,
    "start_time": "2025-04-06T12:18:57.152068+01:00",
    "end_time": "2025-04-06T12:18:58.468083+01:00",
    "duration": "1.31600725s",
    "output": "INFO: Invocation ID: 4db682d8-8297-480e-a629-d62b45113409\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices (3 packages loaded, 43 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/FileSystemServices:FileSystemServices failed to build\nINFO: Elapsed time: 0.751s, Critical Path: 0.63s\nINFO: 2 processes: 4 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices",
    "success": false,
    "start_time": "2025-04-06T12:18:58.468092+01:00",
    "end_time": "2025-04-06T12:18:59.724822+01:00",
    "duration": "1.25672175s",
    "output": "INFO: Invocation ID: 15408c1e-1c84-4c84-817d-a20425d1689b\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/KeychainServices:KeychainServices failed to build\nINFO: Elapsed time: 0.728s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor",
    "success": false,
    "start_time": "2025-04-06T12:18:59.724829+01:00",
    "end_time": "2025-04-06T12:19:01.013199+01:00",
    "duration": "1.288362125s",
    "output": "INFO: Invocation ID: cb7775ff-382c-46e7-b7fd-7406525d6290\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor (1 packages loaded, 2 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/KeychainServices/Actor:KeychainSecurityActor failed to build\nINFO: Elapsed time: 0.740s, Critical Path: 0.58s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor",
    "success": false,
    "start_time": "2025-04-06T12:19:01.013208+01:00",
    "end_time": "2025-04-06T12:19:02.32635+01:00",
    "duration": "1.3131335s",
    "output": "INFO: Invocation ID: 68ffbc1b-b6a4-44e2-b304-b7c4335df123\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/KeychainServices/ActorTypes:KeychainSecurityActor failed to build\nINFO: Elapsed time: 0.733s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks",
    "success": false,
    "start_time": "2025-04-06T12:19:02.326357+01:00",
    "end_time": "2025-04-06T12:19:03.680142+01:00",
    "duration": "1.3537765s",
    "output": "INFO: Invocation ID: e1ce38fa-8b68-4e44-94a2-a3ace8a56404\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/KeychainServices/Fallbacks:Fallbacks failed to build\nINFO: Elapsed time: 0.758s, Critical Path: 0.62s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger",
    "success": false,
    "start_time": "2025-04-06T12:19:03.680161+01:00",
    "end_time": "2025-04-06T12:19:04.964219+01:00",
    "duration": "1.284049959s",
    "output": "INFO: Invocation ID: d1149435-7060-44bb-8dca-fd8335e8e616\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/KeychainServices/Logging:KeychainLogger failed to build\nINFO: Elapsed time: 0.733s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters",
    "success": false,
    "start_time": "2025-04-06T12:19:04.964225+01:00",
    "end_time": "2025-04-06T12:19:06.268374+01:00",
    "duration": "1.304141375s",
    "output": "INFO: Invocation ID: aac8df01-395f-44e1-ba39-ce9eb3ae6935\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/LoggingAdapters:LoggingAdapters failed to build\nINFO: Elapsed time: 0.759s, Critical Path: 0.61s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices",
    "success": false,
    "start_time": "2025-04-06T12:19:06.268383+01:00",
    "end_time": "2025-04-06T12:19:07.56509+01:00",
    "duration": "1.296699333s",
    "output": "INFO: Invocation ID: 778a2220-c218-4113-af0c-09a9700d6e23\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/LoggingServices:LoggingServices failed to build\nINFO: Elapsed time: 0.755s, Critical Path: 0.62s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices",
    "success": false,
    "start_time": "2025-04-06T12:19:07.565097+01:00",
    "end_time": "2025-04-06T12:19:08.883654+01:00",
    "duration": "1.318548958s",
    "output": "INFO: Invocation ID: d89357d9-ce18-4a80-ab9d-d0673768420c\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/LoggingWrapperServices:LoggingWrapperServices failed to build\nINFO: Elapsed time: 0.778s, Critical Path: 0.64s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices",
    "success": false,
    "start_time": "2025-04-06T12:19:08.883672+01:00",
    "end_time": "2025-04-06T12:19:10.206897+01:00",
    "duration": "1.323216709s",
    "output": "INFO: Invocation ID: e93d1cb1-0535-4bbd-878a-3820a660e96e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices (1 packages loaded, 4 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/NetworkServices:NetworkServices failed to build\nINFO: Elapsed time: 0.756s, Critical Path: 0.61s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices",
    "success": false,
    "start_time": "2025-04-06T12:19:10.206904+01:00",
    "end_time": "2025-04-06T12:19:11.616068+01:00",
    "duration": "1.409155041s",
    "output": "INFO: Invocation ID: f0920b19-2d5a-49e5-817d-3cc3ab40cf85\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices (1 packages loaded, 7 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/RepositoryServices:RepositoryServices failed to build\nINFO: Elapsed time: 0.759s, Critical Path: 0.62s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/ResticServices:ResticServices",
    "success": false,
    "start_time": "2025-04-06T12:19:11.616081+01:00",
    "end_time": "2025-04-06T12:19:12.927985+01:00",
    "duration": "1.311895791s",
    "output": "INFO: Invocation ID: e7ef8b41-395b-4877-926f-939b0a213d05\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/ResticServices:ResticServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/ResticServices:ResticServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/ResticServices:ResticServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/ResticServices:ResticServices failed to build\nINFO: Elapsed time: 0.715s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore",
    "success": false,
    "start_time": "2025-04-06T12:19:12.927992+01:00",
    "end_time": "2025-04-06T12:19:14.238767+01:00",
    "duration": "1.31076675s",
    "output": "INFO: Invocation ID: ca5e753a-c398-4031-aaba-512d4df185fa\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityCore:SecurityCore failed to build\nINFO: Elapsed time: 0.740s, Critical Path: 0.62s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices",
    "success": false,
    "start_time": "2025-04-06T12:19:14.238776+01:00",
    "end_time": "2025-04-06T12:19:15.634376+01:00",
    "duration": "1.395592125s",
    "output": "INFO: Invocation ID: 1e8d1cde-8edb-4deb-8605-bdc97ce2dc56\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices (7 packages loaded, 55 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityCryptoServices:SecurityCryptoServices failed to build\nINFO: Elapsed time: 0.811s, Critical Path: 0.65s\nINFO: 2 processes: 7 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations",
    "success": false,
    "start_time": "2025-04-06T12:19:15.634388+01:00",
    "end_time": "2025-04-06T12:19:16.920701+01:00",
    "duration": "1.286305334s",
    "output": "INFO: Invocation ID: 2b7f40b1-d394-47bb-b4be-300b59b8c30f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityCryptoServices/ActorTypes:CryptoActorImplementations failed to build\nINFO: Elapsed time: 0.722s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories",
    "success": false,
    "start_time": "2025-04-06T12:19:16.920712+01:00",
    "end_time": "2025-04-06T12:19:18.227761+01:00",
    "duration": "1.307041416s",
    "output": "INFO: Invocation ID: 67a86bfb-11f6-4003-8a99-4721ceb7abef\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityCryptoServices/ProviderFactories:ProviderFactories failed to build\nINFO: Elapsed time: 0.728s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation",
    "success": false,
    "start_time": "2025-04-06T12:19:18.227769+01:00",
    "end_time": "2025-04-06T12:19:19.578393+01:00",
    "duration": "1.350616042s",
    "output": "INFO: Invocation ID: 8840bbca-2e37-4a1e-be72-814e32e1a8af\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityImplementation:SecurityImplementation failed to build\nINFO: Elapsed time: 0.750s, Critical Path: 0.61s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement",
    "success": false,
    "start_time": "2025-04-06T12:19:19.578404+01:00",
    "end_time": "2025-04-06T12:19:20.891371+01:00",
    "duration": "1.312958333s",
    "output": "INFO: Invocation ID: a930f41c-e604-44b2-a609-437edc9924d3\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement:SecurityKeyManagement failed to build\nINFO: Elapsed time: 0.755s, Critical Path: 0.62s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor",
    "success": false,
    "start_time": "2025-04-06T12:19:20.891379+01:00",
    "end_time": "2025-04-06T12:19:22.202482+01:00",
    "duration": "1.311093958s",
    "output": "INFO: Invocation ID: 4ed1cb0e-acd2-459b-b92d-a43fb398856e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor (2 packages loaded, 4 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/Actor:KeyManagementActor failed to build\nINFO: Elapsed time: 0.762s, Critical Path: 0.61s\nINFO: 2 processes: 2 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes",
    "success": false,
    "start_time": "2025-04-06T12:19:22.202492+01:00",
    "end_time": "2025-04-06T12:19:23.550565+01:00",
    "duration": "1.348064291s",
    "output": "INFO: Invocation ID: b6972c8b-cf9b-48c3-978c-98b385e10244\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/ActorTypes:KeyManagementActorTypes failed to build\nINFO: Elapsed time: 0.788s, Critical Path: 0.68s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage",
    "success": false,
    "start_time": "2025-04-06T12:19:23.550575+01:00",
    "end_time": "2025-04-06T12:19:24.829479+01:00",
    "duration": "1.278896s",
    "output": "INFO: Invocation ID: 411427cc-82a3-42a8-a1ad-f37b8c866b70\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/Storage:KeyStorage failed to build\nINFO: Elapsed time: 0.733s, Critical Path: 0.61s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes",
    "success": false,
    "start_time": "2025-04-06T12:19:24.829487+01:00",
    "end_time": "2025-04-06T12:19:26.1064+01:00",
    "duration": "1.276905458s",
    "output": "INFO: Invocation ID: b03e33f7-9fdd-4b36-8693-8bbc0261a356\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityKeyManagement/Types:SecurityKeyTypes failed to build\nINFO: Elapsed time: 0.713s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders",
    "success": false,
    "start_time": "2025-04-06T12:19:26.106413+01:00",
    "end_time": "2025-04-06T12:19:27.405816+01:00",
    "duration": "1.299394958s",
    "output": "INFO: Invocation ID: a4193ebd-86e5-48c8-b0d6-9a28e4d03397\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityProviders:SecurityProviders failed to build\nINFO: Elapsed time: 0.745s, Critical Path: 0.61s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils",
    "success": false,
    "start_time": "2025-04-06T12:19:27.405822+01:00",
    "end_time": "2025-04-06T12:19:28.761803+01:00",
    "duration": "1.355972667s",
    "output": "INFO: Invocation ID: 3dce8220-fe19-4dfa-ad23-0a3b6f7e6361\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/SecurityUtils:SecurityUtils failed to build\nINFO: Elapsed time: 0.745s, Critical Path: 0.61s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraImplementations/Sources/XPCServices:XPCServices",
    "success": false,
    "start_time": "2025-04-06T12:19:28.761816+01:00",
    "end_time": "2025-04-06T12:19:30.077838+01:00",
    "duration": "1.316013417s",
    "output": "INFO: Invocation ID: 86061d98-8e6d-4b6a-8781-422d9711f518\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraImplementations/Sources/XPCServices:XPCServices (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraImplementations/Sources/XPCServices:XPCServices (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraImplementations/Sources/XPCServices:XPCServices (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraImplementations/Sources/XPCServices:XPCServices failed to build\nINFO: Elapsed time: 0.722s, Critical Path: 0.60s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:30.077845+01:00",
    "end_time": "2025-04-06T12:19:31.353078+01:00",
    "duration": "1.275224875s",
    "output": "INFO: Invocation ID: 80329417-b90b-45a7-88f7-d12fa6dda216\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/APIInterfaces:APIInterfaces failed to build\nINFO: Elapsed time: 0.716s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:31.353086+01:00",
    "end_time": "2025-04-06T12:19:32.711439+01:00",
    "duration": "1.3583445s",
    "output": "INFO: Invocation ID: ac5b1160-a72b-4e2a-8e42-41c20c114733\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/BackupInterfaces:BackupInterfaces failed to build\nINFO: Elapsed time: 0.740s, Critical Path: 0.60s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:32.711445+01:00",
    "end_time": "2025-04-06T12:19:34.097806+01:00",
    "duration": "1.386351792s",
    "output": "INFO: Invocation ID: 8138f2c1-a573-4257-ad67-b99b15da6663\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/CoreInterfaces:CoreInterfaces failed to build\nINFO: Elapsed time: 0.736s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:34.097815+01:00",
    "end_time": "2025-04-06T12:19:35.360577+01:00",
    "duration": "1.2627535s",
    "output": "INFO: Invocation ID: 2aa0cef0-7f1b-4ac6-9908-895da45916e1\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/CryptoInterfaces:CryptoInterfaces failed to build\nINFO: Elapsed time: 0.709s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:35.360587+01:00",
    "end_time": "2025-04-06T12:19:36.676707+01:00",
    "duration": "1.316112s",
    "output": "INFO: Invocation ID: b10b5213-3493-43f1-97f4-bd887a31b144\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/DateTimeInterfaces:DateTimeInterfaces failed to build\nINFO: Elapsed time: 0.729s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:36.676718+01:00",
    "end_time": "2025-04-06T12:19:37.952111+01:00",
    "duration": "1.275384792s",
    "output": "INFO: Invocation ID: a4922260-671e-41a5-99f8-1a0ac6a85055\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces failed to build\nINFO: Elapsed time: 0.723s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:37.95212+01:00",
    "end_time": "2025-04-06T12:19:39.248273+01:00",
    "duration": "1.296145125s",
    "output": "INFO: Invocation ID: 6bab0787-0ee4-45f5-afea-5ff7936ceb3f\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/ErrorLoggingInterfaces:ErrorLoggingInterfaces failed to build\nINFO: Elapsed time: 0.718s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:39.248282+01:00",
    "end_time": "2025-04-06T12:19:40.573784+01:00",
    "duration": "1.325494041s",
    "output": "INFO: Invocation ID: 5d122f0c-ac44-4c5c-9141-a8b4a22019c9\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/FileSystemInterfaces:FileSystemInterfaces failed to build\nINFO: Elapsed time: 0.739s, Critical Path: 0.60s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:40.573801+01:00",
    "end_time": "2025-04-06T12:19:41.82846+01:00",
    "duration": "1.254651s",
    "output": "INFO: Invocation ID: 95b6c923-f3bf-45a3-8b85-5e174349fee0\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/KeychainInterfaces:KeychainInterfaces failed to build\nINFO: Elapsed time: 0.725s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:41.82847+01:00",
    "end_time": "2025-04-06T12:19:43.090349+01:00",
    "duration": "1.261870583s",
    "output": "INFO: Invocation ID: 961f0708-cbff-4430-ba72-e86f6cd67444\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/LoggingInterfaces:LoggingInterfaces failed to build\nINFO: Elapsed time: 0.705s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:43.090357+01:00",
    "end_time": "2025-04-06T12:19:44.348925+01:00",
    "duration": "1.258560791s",
    "output": "INFO: Invocation ID: 1f62dfd0-0c70-4ceb-9bf1-3f8afe1ef4bb\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces failed to build\nINFO: Elapsed time: 0.719s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:44.348935+01:00",
    "end_time": "2025-04-06T12:19:45.616786+01:00",
    "duration": "1.267842917s",
    "output": "INFO: Invocation ID: feb4293e-5875-42af-bca4-327e26c13001\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/NetworkInterfaces:NetworkInterfaces failed to build\nINFO: Elapsed time: 0.725s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces",
    "success": true,
    "start_time": "2025-04-06T12:19:45.616794+01:00",
    "end_time": "2025-04-06T12:19:46.271609+01:00",
    "duration": "654.811125ms",
    "output": "INFO: Invocation ID: a9ca3a17-af31-4ce8-902a-9c2edf044138\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces (0 packages loaded, 0 targets configured).\nINFO: Found 1 target...\nTarget //packages/UmbraInterfaces/Sources/RepositoryInterfaces:RepositoryInterfaces up-to-date:\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/RepositoryInterfaces.swiftdoc\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/RepositoryInterfaces.swiftmodule\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/RepositoryInterfaces.swiftsourceinfo\n  bazel-bin/packages/UmbraInterfaces/Sources/RepositoryInterfaces/libRepositoryInterfaces.a\nINFO: Elapsed time: 0.134s, Critical Path: 0.00s\nINFO: 1 process: 1 action cache hit, 1 internal.\nINFO: Build completed successfully, 1 total action\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:46.271633+01:00",
    "end_time": "2025-04-06T12:19:47.529241+01:00",
    "duration": "1.257600958s",
    "output": "INFO: Invocation ID: 80a4a303-b027-4d76-bba2-fb98fa178a32\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/ResticInterfaces:ResticInterfaces failed to build\nINFO: Elapsed time: 0.722s, Critical Path: 0.58s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:47.529257+01:00",
    "end_time": "2025-04-06T12:19:48.823045+01:00",
    "duration": "1.293780292s",
    "output": "INFO: Invocation ID: 4a30109c-ed33-4fa8-b2d0-4b5e171a1394\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/SecurityCoreInterfaces:SecurityCoreInterfaces failed to build\nINFO: Elapsed time: 0.736s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces",
    "success": false,
    "start_time": "2025-04-06T12:19:48.823055+01:00",
    "end_time": "2025-04-06T12:19:50.255456+01:00",
    "duration": "1.432392083s",
    "output": "INFO: Invocation ID: 003c1dee-7848-4d6d-81d5-d1f949104376\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/SecurityInterfaces:SecurityInterfaces failed to build\nINFO: Elapsed time: 0.734s, Critical Path: 0.60s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore",
    "success": false,
    "start_time": "2025-04-06T12:19:50.255468+01:00",
    "end_time": "2025-04-06T12:19:51.552664+01:00",
    "duration": "1.297188041s",
    "output": "INFO: Invocation ID: a7dae906-52bc-4efa-9d9a-b3d894b6cfd3\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore (0 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore (0 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore (0 packages loaded, 0 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraInterfaces/Sources/XPCProtocolsCore:XPCProtocolsCore failed to build\nINFO: Elapsed time: 0.728s, Critical Path: 0.59s\nINFO: 2 processes: 2 internal.\nERROR: Build did NOT complete successfully\n"
  },
  {
    "target": "rule //packages/UmbraServices/Sources/LoggingServices:LoggingServices",
    "success": false,
    "start_time": "2025-04-06T12:19:51.552679+01:00",
    "end_time": "2025-04-06T12:19:52.816668+01:00",
    "duration": "1.263981583s",
    "output": "INFO: Invocation ID: fa307df5-afd2-4696-aed5-e608189c0a51\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: target //packages/UmbraServices/Sources/LoggingServices:LoggingServices (1 packages loaded, 0 targets configured)\nAnalyzing: target //packages/UmbraServices/Sources/LoggingServices:LoggingServices (1 packages loaded, 0 targets configured)\n\nINFO: Analyzed target //packages/UmbraServices/Sources/LoggingServices:LoggingServices (1 packages loaded, 6 targets configured).\nERROR: /Users/mpy/CascadeProjects/UmbraCore/packages/UmbraCoreTypes/Sources/LoggingTypes/BUILD.bazel:3:20: Compiling Swift module //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //packages/UmbraCoreTypes/Sources/LoggingTypes:LoggingTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM=MacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE=15.4 \\\n    CC=clang \\\n    PATH=/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin:/Users/mpy/.windsurf/extensions/ms-python.debugpy-2025.4.1-darwin-arm64/bundled/scripts/noConfigScripts:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts \\\n    XCODE_VERSION_OVERRIDE=16.3.0.16E140 \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/packages/UmbraCoreTypes/Sources/LoggingTypes/LoggingTypes.swiftmodule-0.params)\n# Configuration: 76a1bf3a80f2d50513004915454165d2f164db794b63e4666809cbd93e1abeaa\n# Execution platform: @@platforms//host:host\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:51:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 49 |         \n 50 |         if let operationalState = operationalState {\n 51 |             updatedMetadata.addPublic(key: \"state\", value: operationalState)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 52 |         }\n 53 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:55:29: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 53 |         \n 54 |         if let component = component {\n 55 |             updatedMetadata.addPublic(key: \"component\", value: component)\n    |                             `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n 56 |         }\n 57 |         \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/CoreLogContext.swift:116:25: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n114 |     ) -\u003e CoreLogContext {\n115 |         var updatedMetadata = metadata\n116 |         updatedMetadata.addPublic(key: \"operation\", value: operation)\n    |                         `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n117 |         \n118 |         return CoreLogContext(\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:92:8: error: initializer for conditional binding must have Optional type, not 'NSError'\n 90 |     \n 91 |     // Extract domain and code from NSError if possible\n 92 |     if let nsError = error as NSError {\n    |        `- error: initializer for conditional binding must have Optional type, not 'NSError'\n 93 |       self.domain = nsError.domain\n 94 |       self.code = nsError.code\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:153:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n151 |     \n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n155 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:154:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n152 |     // Public information\n153 |     metadata.addPublic(key: \"domain\", value: domain)\n154 |     metadata.addPublic(key: \"code\", value: String(code))\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPublic'\n155 |     \n156 |     // Private information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:157:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n155 |     \n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n158 |     metadata.addPrivate(key: \"source\", value: source)\n159 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:158:14: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n156 |     // Private information\n157 |     metadata.addPrivate(key: \"message\", value: message)\n158 |     metadata.addPrivate(key: \"source\", value: source)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n159 |     \n160 |     // Sensitive information\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:161:14: error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n159 |     \n160 |     // Sensitive information\n161 |     metadata.addSensitive(key: \"details\", value: details)\n    |              `- error: value of type 'LogMetadataDTOCollection' has no member 'addSensitive'\n162 |     \n163 |     // Correlation ID (if available)\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:165:16: error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n163 |     // Correlation ID (if available)\n164 |     if let correlationID = correlationID {\n165 |       metadata.addPrivate(key: \"correlationID\", value: correlationID)\n    |                `- error: value of type 'LogMetadataDTOCollection' has no member 'addPrivate'\n166 |     }\n167 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:211:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n209 |     \n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n212 |     metadata.addPublic(\"code\", value: String(code))\n213 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:212:14: error: value of type 'PrivacyMetadata' has no member 'addPublic'\n210 |     // Add domain and code as public\n211 |     metadata.addPublic(\"domain\", value: domain)\n212 |     metadata.addPublic(\"code\", value: String(code))\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPublic'\n213 |     \n214 |     // Add message and source as private\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:215:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n213 |     \n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n216 |     metadata.addPrivate(\"source\", value: source)\n217 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:216:14: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n214 |     // Add message and source as private\n215 |     metadata.addPrivate(\"message\", value: message)\n216 |     metadata.addPrivate(\"source\", value: source)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n217 |     \n218 |     // Add details as sensitive\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:219:14: error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n217 |     \n218 |     // Add details as sensitive\n219 |     metadata.addSensitive(\"details\", value: details)\n    |              `- error: value of type 'PrivacyMetadata' has no member 'addSensitive'\n220 |     \n221 |     // Add correlation ID if available\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:223:16: error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n221 |     // Add correlation ID if available\n222 |     if let correlationID = correlationID {\n223 |       metadata.addPrivate(\"correlationID\", value: correlationID)\n    |                `- error: value of type 'PrivacyMetadata' has no member 'addPrivate'\n224 |     }\n225 |     \n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:261:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n259 |     source: String\n260 |   ) -\u003e LoggableErrorDTO {\n261 |     var details = \"Validation failed for field: \\(field)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n262 |     \n263 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:284:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n282 |     source: String\n283 |   ) -\u003e LoggableErrorDTO {\n284 |     var details = \"Security operation failed: \\(operation)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n285 |     \n286 |     return LoggableErrorDTO(\n\npackages/UmbraCoreTypes/Sources/LoggingTypes/LoggableErrorDTO.swift:309:9: warning: variable 'details' was never mutated; consider changing to 'let' constant\n307 |     source: String\n308 |   ) -\u003e LoggableErrorDTO {\n309 |     var details = \"Network request failed with status code: \\(statusCode)\\nEndpoint: \\(endpoint)\"\n    |         `- warning: variable 'details' was never mutated; consider changing to 'let' constant\n310 |     \n311 |     return LoggableErrorDTO(\nTarget //packages/UmbraServices/Sources/LoggingServices:LoggingServices failed to build\nINFO: Elapsed time: 0.734s, Critical Path: 0.59s\nINFO: 2 processes: 1 action cache hit, 2 internal.\nERROR: Build did NOT complete successfully\n"
  }
]
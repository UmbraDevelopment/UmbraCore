name: Deploy Documentation

on:
  push:
    branches:
      - main
    paths:
      - docs/**
      - mkdocs.yml
      - .github/workflows/deploy-documentation.yml
      - requirements.txt
  workflow_dispatch:


permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: [self-hosted, macos]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Set up Python Virtual Environment
        run: |
          python3 -m venv docs-venv
          source docs-venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build Documentation
        run: |
          source docs-venv/bin/activate
          python -m mkdocs build --verbose
          
      - name: Setup GNU Tools
        run: |
          brew install gnu-tar || true
          echo "/opt/homebrew/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH
          which gtar || echo "gtar not found, attempting fallback"
          if ! which gtar; then
            sudo ln -sf /opt/homebrew/bin/gtar /usr/local/bin/gtar
          fi
          
      - name: Build DocC Documentation
        run: |
          echo "Building DocC documentation for core modules..."
          # Build DocC documentation using the new script
          ./docc_manager.sh build
          # Copy documentation to the site directory
          mkdir -p ./site/api
          cp -R docs/.docc-build/* ./site/api/
          
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment

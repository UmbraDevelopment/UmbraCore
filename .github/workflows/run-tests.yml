name: UmbraCore Tests

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run with additional debug logging'
        required: false
        default: false
        type: boolean

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  # Removed SDKROOT to avoid conflicts with system-defined value
  SWIFT_DETERMINISTIC_HASHING: 1
  BAZEL_TEST_TIMEOUT: "600"  # 10 minute timeout for individual tests

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: Run Stable Tests
    runs-on: [self-hosted, macOS, ARM64]
    timeout-minutes: 60  # Set a job-level timeout
    
    steps:
    - uses: actions/checkout@v4
      with:
        clean: true
        fetch-depth: 0
      
    - name: Setup Xcode
      run: |
        xcode-select --print-path
        swift --version

    - name: Install Bazelisk
      run: |
        brew install bazelisk || true
        bazelisk --version
        
    - name: Prepare Test Targets
      id: prepare-tests
      run: |
        # Create a file listing all stable test targets
        cat > stable_test_targets.txt << EOL
        //Tests/CoreTests:CoreTests
        //Tests/CryptoTests:CryptoTests
        //Tests/KeychainTests:KeychainTests
        //Tests/ModelsTests:ModelsTests
        //Tests/ResourcesTests:ResourcesTests
        //Tests/ResticTypesTests:ResticTypesTests
        //Tests/SecurityImplementationTests:SecurityImplementationTests
        //Tests/UmbraTestKit/Tests:UmbraTestKitTests
        //Tests/UmbraXPCTests:UmbraXPCTests
        EOL
        
        # Count targets
        TARGET_COUNT=$(wc -l < stable_test_targets.txt | xargs)
        echo "Found $TARGET_COUNT stable test targets"
        
        # Enable additional debugging if requested
        if [[ "${{ github.event.inputs.debug_enabled }}" == "true" ]]; then
          echo "Debug mode enabled - extra test output will be shown"
          echo "Test targets to be run:"
          cat stable_test_targets.txt
        fi
          
    - name: Run Stable Tests
      timeout-minutes: 45  # Set a step-level timeout
      run: |
        echo "Running stable tests with ci_tests configuration..."
        TEST_OUTPUT_FLAG="--test_output=errors"
        
        if [[ "${{ github.event.inputs.debug_enabled }}" == "true" ]]; then
          TEST_OUTPUT_FLAG="--test_output=all"
        fi
        
        # Run tests with optimized resource usage
        bazelisk test \
          --config=ci_tests \
          $TEST_OUTPUT_FLAG \
          --flaky_test_attempts=1 \
          --test_verbose_timeout_warnings \
          --show_progress_rate_limit=5 \
          --jobs=2 \
          --local_test_jobs=1 \
          --local_resources=CPU=2.0,RAM=4096 \
          --remote_timeout=3600 \
          --worker_verbose \
          --experimental_ui_max_stdouterr_bytes=10485760 \
          --keep_going \
          $(cat stable_test_targets.txt)
          
    - name: Handle Swift Warnings
      if: always()
      run: |
        echo "Note: There are several Swift concurrency warnings in the codebase."
        echo "These are mainly related to Sendable conformance and will be errors in Swift 6."
        echo "These warnings do not affect the functionality of the current tests."

    - name: Summarise Test Results
      if: always()
      run: |
        TARGET_COUNT=$(wc -l < stable_test_targets.txt | xargs)
        echo "Completed testing of $TARGET_COUNT stable test targets"
        echo "ResticCLIHelperTests were excluded as they require special environment setup"
        
        # List any tests with build issues that weren't attempted
        echo "The following tests currently have build issues and were not included:"
        echo "- BookmarkTests"
        echo "- LoggingTests"
        echo "- UmbraSecurityTests" 
        echo "- XPCTests"

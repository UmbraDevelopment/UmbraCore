name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:


jobs:
  test:
    runs-on: [self-hosted, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Prepare Test Environment
        run: |
          brew install bazelisk || true
          bazelisk --version
          
      - name: Run Tests with Coverage
        run: |
          echo "Running all tests with coverage instrumentation..."
          bazelisk coverage \
            --combined_report=lcov \
            --instrumentation_filter=//Sources/... \
            --coverage_report_generator=@bazel_tools//tools/test:coverage_report_generator \
            --test_output=errors \
            --define=build_environment=nonlocal \
            -k --verbose_failures \
            $(cat team-utils/test_targets.txt) || true
          
          # Process the coverage reports, which will exist even if some tests failed
          mkdir -p coverage_reports
          cp $(bazelisk info output_path)/_coverage/_coverage_report.dat ./coverage_reports/lcov.info || echo "No coverage report generated"
          
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage_reports/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
        if: always()
      - name: Summarise Test Results
        run: |
          TEST_COUNT=$(wc -l < team-utils/test_targets.txt | xargs)
          echo "Completed $TEST_COUNT test targets"
          
        if: always()

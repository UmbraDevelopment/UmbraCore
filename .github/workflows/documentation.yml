name: Documentation

# This workflow handles the generation and deployment of UmbraCore's documentation
# Key components:
# 1. API documentation using Jazzy
# 2. Static site generation with Jekyll
# 3. Deployment to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'Sources/**/*.swift'
      - '.github/workflows/documentation.yml'
      - '.github/workflows/shared-setup.yml'
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with debug logging enabled'
        required: false
        default: false
      swift_version:
        type: choice
        description: 'Swift version to use'
        options:
          - '5.9.2'
          - '5.9.1'
          - '5.9.0'
        default: '5.9.2'
        required: true
      ruby_version:
        type: choice
        description: 'Ruby version to use'
        options:
          - '3.2'
          - '3.1'
          - '3.0'
        default: '3.2'
        required: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure we don't have multiple deployments running at once
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  setup:
    strategy:
      matrix:
        include:
          - swift: ${{ inputs.swift_version || '5.9.2' }}
            ruby: ${{ inputs.ruby_version || '3.2' }}
      fail-fast: false
    uses: ./.github/workflows/shared-setup.yml
    with:
      ruby-version: ${{ matrix.ruby }}
      swift-version: ${{ matrix.swift }}
    secrets: inherit

  build-documentation:
    needs: setup
    runs-on: macos-14
    timeout-minutes: 30
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      BUNDLE_FORCE_RUBY_PLATFORM: "1"
      RUNNER_DEBUG: ${{ inputs.debug_enabled }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    # Cache Swift packages to speed up builds
    # Note: actions/cache@v3 is the latest stable version as of 2025-02
    - name: Cache Swift packages
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}-${{ matrix.swift }}
        restore-keys: |
          ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}-
          ${{ runner.os }}-spm-
    
    # Cache Ruby gems to speed up documentation generation
    - name: Cache Ruby gems
      uses: actions/cache@v3
      with:
        path: docs/vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('docs/Gemfile.lock') }}-${{ matrix.ruby }}
        restore-keys: |
          ${{ runner.os }}-gems-${{ hashFiles('docs/Gemfile.lock') }}-
          ${{ runner.os }}-gems-
        
    - name: Install dependencies
      id: install-deps
      timeout-minutes: 10
      env:
        LDFLAGS: "-L${{ needs.setup.outputs.openssl-root }}/lib"
        CPPFLAGS: "-I${{ needs.setup.outputs.openssl-root }}/include"
        PKG_CONFIG_PATH: "${{ needs.setup.outputs.openssl-root }}/lib/pkgconfig"
      run: |
        cd docs
        bundle config set --local path 'vendor/bundle'
        bundle config set force_ruby_platform true
        bundle install --jobs 4 --retry 3
        gem install jazzy
        
    - name: Generate API Documentation
      id: generate-api-docs
      timeout-minutes: 10
      run: |
        jazzy \
          --author "mpy-dev-ml" \
          --author_url https://github.com/mpy-dev-ml \
          --github_url https://github.com/mpy-dev-ml/UmbraCore \
          --github-file-prefix https://github.com/mpy-dev-ml/UmbraCore/blob/main \
          --module-version main \
          --module UmbraCore \
          --theme apple \
          --swift-build-tool spm \
          --build-tool-arguments -Xswiftc,-swift-version,${{ matrix.swift }} \
          --output docs/api
          
    - name: Build Jekyll site
      id: build-site
      timeout-minutes: 10
      run: |
        cd docs
        bundle exec jekyll build --baseurl /UmbraCore
        
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v4
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/_site
        retention-days: 7
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Post-deployment cleanup
      if: always()
      run: |
        rm -rf .build/repositories
        rm -rf docs/vendor/bundle

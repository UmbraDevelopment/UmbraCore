name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/documentation.yml'
  workflow_dispatch:

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-14
    timeout-minutes: 30
    
    strategy:
      matrix:
        swift-version: ['5.9.2']
        ruby-version: ['3.2.2']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          working-directory: docs
      
      - name: Cache Swift packages
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ matrix.swift-version }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-${{ matrix.swift-version }}-
      
      - name: Configure Bundler
        run: |
          cd docs
          bundle config path vendor/bundle
          bundle config --local deployment true
      
      - name: Install dependencies
        run: |
          cd docs
          bundle install
      
      - name: Generate documentation
        run: |
          swift package --allow-writing-to-directory docs/api generate-documentation \
            --target UmbraCore \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path UmbraCore \
            --output-path docs/api
      
      - name: Build site
        run: |
          cd docs
          bundle exec jekyll build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

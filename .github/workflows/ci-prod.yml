name: CI Production Build

on: 
  push:
    branches:
      - main
      - feature/**
    paths:
      - 'Sources/**'
      - 'BUILD.bazel'
      - '.bazelrc'
      - '.github/workflows/ci-prod.yml'
  pull_request:
    paths:
      - 'Sources/**'
      - 'BUILD.bazel'
      - '.bazelrc'
      - '.github/workflows/ci-prod.yml'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run with additional debug logging'
        required: false
        default: false
        type: boolean

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk

permissions:
  contents: read
  security-events: write
  id-token: write
  checks: write
  pull-requests: write

jobs:
  build:
    name: Production Build
    runs-on: [self-hosted, macOS, ARM64]
    
    steps:
    - uses: actions/checkout@v4
      with:
        clean: true
        fetch-depth: 0

    - name: Setup Xcode
      run: |
        xcode-select --print-path
        swift --version

    - name: Install Bazelisk
      run: |
        brew install bazelisk || true
        bazelisk --version

    - name: Generate Production Target List
      id: prod-targets
      run: |
        # Create a directory for storing target lists
        mkdir -p .build_targets
        
        # Find production targets (library and binary targets, excluding tests)
        echo "Finding production targets..."
        bazelisk query 'kind("swift_library rule", //Sources/...)' --output=label > .build_targets/prod_targets.txt
        bazelisk query 'kind("swift_binary rule", //Sources/...)' --output=label >> .build_targets/prod_targets.txt
        
        # Count targets
        PROD_COUNT=$(wc -l < .build_targets/prod_targets.txt | xargs)
        
        echo "Found $PROD_COUNT production targets"
        
        # Output sample of targets (first 5)
        echo "Sample production targets:"
        head -n 5 .build_targets/prod_targets.txt
        
        # Enable additional debugging if requested
        if [[ "${{ github.event.inputs.debug_enabled }}" == "true" ]]; then
          echo "Debug mode enabled - listing all targets:"
          cat .build_targets/prod_targets.txt
        fi

    - name: Build Production Targets
      run: |
        echo "Building production targets..."
        cat .build_targets/prod_targets.txt | xargs bazelisk build --show_progress_rate_limit=5

    - name: Cleanup
      if: always()
      run: |
        rm -rf .build_targets
        bazelisk clean --expunge || true

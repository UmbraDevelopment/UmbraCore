name: Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BAZEL_VERSION: 8.1.0
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk

jobs:
  core-tests:
    name: Core Tests
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
      with:
        clean: true

    - name: System Info
      run: |
        uname -a
        swift --version
        bazel --version

    - name: Setup Bazel
      uses: bazel-contrib/setup-bazel@0.8.0
      with:
        bazelrc: .bazelrc
        version: ${{ env.BAZEL_VERSION }}

    - name: Configure Bazel
      run: |
        echo "build --cpu=darwin_arm64" >> .bazelrc
        echo "build --apple_platform_type=macos" >> .bazelrc
        echo "build --macos_minimum_os=13.0" >> .bazelrc
        echo "build --features=swift.use_global_module_cache" >> .bazelrc
        echo "build --features=swift.enable_batch_mode" >> .bazelrc
        echo "build --features=swift.enable_concurrency_checking" >> .bazelrc
        echo "build --verbose_failures" >> .bazelrc

    - name: Build
      run: bazel build //...

    - name: Run Tests
      run: bazel test //...

  security-tests:
    name: Security Tests
    needs: core-tests
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
      with:
        clean: true

    - name: Setup Bazel
      uses: bazel-contrib/setup-bazel@0.8.0
      with:
        bazelrc: .bazelrc
        version: ${{ env.BAZEL_VERSION }}

    - name: Configure Bazel
      run: |
        echo "build --cpu=darwin_arm64" >> .bazelrc
        echo "build --apple_platform_type=macos" >> .bazelrc
        echo "build --macos_minimum_os=13.0" >> .bazelrc
        echo "build --features=swift.use_global_module_cache" >> .bazelrc
        echo "build --features=swift.enable_batch_mode" >> .bazelrc
        echo "build --features=swift.enable_concurrency_checking" >> .bazelrc
        echo "build --verbose_failures" >> .bazelrc

    - name: Run Security Tests
      run: bazel test //... --test_tag_filters=security

  coverage:
    name: Coverage
    needs: [core-tests, security-tests]
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
      with:
        clean: true

    - name: Setup Bazel
      uses: bazel-contrib/setup-bazel@0.8.0
      with:
        bazelrc: .bazelrc
        version: ${{ env.BAZEL_VERSION }}

    - name: Configure Bazel
      run: |
        echo "build --cpu=darwin_arm64" >> .bazelrc
        echo "build --apple_platform_type=macos" >> .bazelrc
        echo "build --macos_minimum_os=13.0" >> .bazelrc
        echo "build --features=swift.use_global_module_cache" >> .bazelrc
        echo "build --features=swift.enable_batch_mode" >> .bazelrc
        echo "build --features=swift.enable_concurrency_checking" >> .bazelrc
        echo "build --verbose_failures" >> .bazelrc

    - name: Generate Coverage
      run: bazel coverage //...

    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        files: bazel-out/_coverage/_coverage_report.dat

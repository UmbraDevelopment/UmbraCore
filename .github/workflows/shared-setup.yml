name: Shared Setup

# This reusable workflow handles common setup tasks for UmbraCore workflows
# It provides:
# 1. Development tools installation (gcc, openssl)
# 2. Swift environment setup
# 3. Ruby environment setup
# 4. OpenSSL configuration for native gem compilation

on:
  workflow_call:
    inputs:
      ruby-version:
        required: false
        type: string
        default: '3.2'
        description: 'Ruby version to install'
      swift-version:
        required: false
        type: string
        default: '5.9.2'
        description: 'Swift version to install'
    outputs:
      openssl-root:
        description: 'OpenSSL installation root directory'
        value: ${{ jobs.setup-environment.outputs.openssl-root }}
      swift-version:
        description: 'Installed Swift version'
        value: ${{ jobs.setup-environment.outputs.swift-version }}
      ruby-version:
        description: 'Installed Ruby version'
        value: ${{ jobs.setup-environment.outputs.ruby-version }}

jobs:
  setup-environment:
    runs-on: macos-14
    timeout-minutes: 15
    outputs:
      openssl-root: ${{ steps.setup-tools.outputs.openssl-root }}
      swift-version: ${{ steps.verify-versions.outputs.swift-version }}
      ruby-version: ${{ steps.verify-versions.outputs.ruby-version }}
    
    steps:
    - name: Install Development Tools
      id: setup-tools
      timeout-minutes: 10
      run: |
        # Update Homebrew and install required packages
        brew update
        brew install gcc openssl@3 || brew upgrade gcc openssl@3
        
        # Configure Xcode command line tools
        sudo rm -rf /Library/Developer/CommandLineTools
        sudo xcode-select --install || true
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -license accept
        xcrun --show-sdk-path
        
        # Set up OpenSSL environment variables
        OPENSSL_ROOT="$(brew --prefix openssl@3)"
        echo "openssl-root=$OPENSSL_ROOT" >> $GITHUB_OUTPUT
        echo "OPENSSL_ROOT_DIR=$OPENSSL_ROOT" >> $GITHUB_ENV
        echo "BUNDLE_BUILD__EVENTMACHINE=--with-opt-dir=$OPENSSL_ROOT" >> $GITHUB_ENV
        echo "BUNDLE_BUILD__THIN=--with-opt-dir=$OPENSSL_ROOT" >> $GITHUB_ENV
    
    - name: Set up Swift
      id: setup-swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: ${{ inputs.swift-version }}
    
    - name: Set up Ruby
      id: setup-ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ inputs.ruby-version }}
        bundler-cache: false
    
    - name: Verify Versions
      id: verify-versions
      run: |
        # Verify Swift installation
        SWIFT_VERSION=$(swift --version | head -n 1 | cut -d ' ' -f 4)
        echo "swift-version=$SWIFT_VERSION" >> $GITHUB_OUTPUT
        if [[ "$SWIFT_VERSION" != "${{ inputs.swift-version }}" ]]; then
          echo "::error::Swift version mismatch. Expected ${{ inputs.swift-version }}, got $SWIFT_VERSION"
          exit 1
        fi
        
        # Verify Ruby installation
        RUBY_VERSION=$(ruby --version | cut -d ' ' -f 2)
        echo "ruby-version=$RUBY_VERSION" >> $GITHUB_OUTPUT
        if [[ "$RUBY_VERSION" != "${{ inputs.ruby-version }}."* ]]; then
          echo "::error::Ruby version mismatch. Expected ${{ inputs.ruby-version }}, got $RUBY_VERSION"
          exit 1
        fi
        
        # Verify OpenSSL installation
        if ! openssl version; then
          echo "::error::OpenSSL installation failed"
          exit 1
        fi

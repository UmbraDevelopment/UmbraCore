load("//bazel:swift_rules.bzl", "umbra_swift_library")

umbra_swift_library(
    name = "Domains",
    srcs = glob(["*.swift", "**/*.swift"],
        exclude = ["**/Tests/**", "**/*Test.swift", "**/*.generated.swift"],
        exclude_directories = 1,
        allow_empty = True
    ),
    deps = [
        "//Sources/UmbraErrors/Core:UmbraErrorsCore",
        "//Sources/ErrorHandling",
        "//Sources/ErrorHandlingInterfaces",
        # Additional dependencies as needed:
        # "//Sources/CoreDTOs",  # Commented out to break dependency cycle
        "//Sources/UmbraLogging",
        # "@com_github_apple_swift_log//:Logging",
        "//Sources/UmbraCoreTypes",
    ],
    visibility = ["//visibility:public"],
)

# Create an alias for the UmbraErrorsDomains module name
alias(
    name = "UmbraErrorsDomains",
    actual = ":Domains",
    visibility = ["//visibility:public"],
)

# Uncomment if documentation generation is needed
# load("@build_bazel_rules_swift//swift:swift.bzl", "swift_library")
# load("@rules_swift_package_manager//swiftpkg:defs.bzl", "swift_package")
#
# swift_package(
#     name = "docc_documentation",
#     srcs = glob([
#         "**/*.swift",
#         "**/*.docc/**",
#     ]),
#     deps = [
#         "//Sources/UmbraErrors/Core:UmbraErrorsCore",
#         "//Sources/ErrorHandling",
#         "//Sources/ErrorHandlingInterfaces",
#         "//Sources/UmbraLogging",
#         "//Sources/UmbraCoreTypes",
#     ],
# )

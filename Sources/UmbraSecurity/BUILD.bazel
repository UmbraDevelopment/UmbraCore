load("//:swift_rules.bzl", "umbra_swift_library")

umbra_swift_library(
    name = "UmbraSecurity",
    srcs = glob(["Sources/**/*.swift"], allow_empty = True),
        deps = [
        "//ErrorHandling/Core:ErrorHandlingCore",
        "//ErrorHandling/Domains:ErrorHandlingDomains",
        "//ErrorHandling/Interfaces:ErrorHandlingInterfaces",
        "//ErrorHandling/Mapping:ErrorHandlingMapping",
        "//Sources/CoreDTOs:CoreDTOs",
        "//Sources/CoreTypesInterfaces:CoreTypesInterfaces",
        "//Sources/SecurityBridgeTypes:SecurityBridgeTypes",
        "//Sources/SecurityInterfaces:SecurityInterfaces",
        "//Sources/SecurityInterfacesBase:SecurityInterfacesBase",
        "//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols",
        "//Sources/UmbraCoreTypes:UmbraCoreTypes",
        "//Sources/XPCProtocolsCore:XPCProtocolsCore",
    ],
)

# Uncomment if documentation generation is needed
# load("@build_bazel_rules_swift//swift:swift.bzl", "swift_library")
# load("@rules_swift_package_manager//swiftpkg:defs.bzl", "swift_package")
#
# swift_package(
#     name = "docc_documentation",
#     srcs = glob(["Sources/**/*.swift"], allow_empty = True),
#         deps = [
        "//ErrorHandling/Core:ErrorHandlingCore",
        "//ErrorHandling/Domains:ErrorHandlingDomains",
        "//ErrorHandling/Interfaces:ErrorHandlingInterfaces",
        "//ErrorHandling/Mapping:ErrorHandlingMapping",
        "//Sources/CoreDTOs:CoreDTOs",
        "//Sources/CoreTypesInterfaces:CoreTypesInterfaces",
        "//Sources/SecurityBridgeTypes:SecurityBridgeTypes",
        "//Sources/SecurityInterfaces:SecurityInterfaces",
        "//Sources/SecurityInterfacesBase:SecurityInterfacesBase",
        "//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols",
        "//Sources/UmbraCoreTypes:UmbraCoreTypes",
        "//Sources/XPCProtocolsCore:XPCProtocolsCore",
    ],
# )

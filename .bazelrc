# Enable bzlmod
common --enable_bzlmod

# Swift specific settings
build --features=swift.use_global_module_cache
build --features=swift.enable_batch_mode
build --features=swift.enable_concurrency_checking

# C++ settings for crypto dependencies
build --cxxopt=-std=c++14

# Environment setup
build --action_env=PATH
build --action_env=CC=clang

# Cache settings
build --disk_cache=/tmp/bazel-cache
build --repository_cache=/tmp/bazel-repo-cache
build --experimental_guard_against_concurrent_changes  # Prevent cache corruption
build --experimental_repository_cache_hardlinks  # Use hardlinks for repo cache

# Test configuration
test --test_output=errors
test --test_verbose_timeout_warnings
test --test_summary=detailed

# Coverage settings
coverage --instrument_test_targets
coverage --combined_report=lcov
coverage --coverage_report_generator=@bazel_tools//tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator:Main
coverage --instrumentation_filter="^//Sources"

# Performance optimizations
build --incompatible_strict_action_env
build --remote_local_fallback
build --jobs=auto  # Automatically determine the number of jobs

# macOS configuration
build:macos --cpu=darwin_arm64
build:macos --apple_platform_type=macos
build:macos --macos_minimum_os=14.0
build:macos --features=swift.use_global_module_cache
build:macos --features=swift.enable_batch_mode
build:macos --features=swift.enable_concurrency_checking

# DocC documentation configuration
build:docc --config=macos
run:docc --config=macos

# Swift documentation configuration
build:swift --apple_generate_dsym
build:swift --swiftcopt=-emit-module-doc
build:swift --swiftcopt=-emit-module-doc-path=$(BINDIR)/$(TARGET).swiftmodule

# Build defaults
build --cpu=darwin_arm64
build --apple_platform_type=macos
build --macos_minimum_os=14.0
build --verbose_failures
test --test_output=errors

# Import local settings (must be last)
try-import %workspace%/user.bazelrc

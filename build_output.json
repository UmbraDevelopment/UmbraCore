{"id":{"started":{}},"children":[{"progress":{}},{"unstructuredCommandLine":{}},{"structuredCommandLine":{"commandLineLabel":"original"}},{"structuredCommandLine":{"commandLineLabel":"canonical"}},{"structuredCommandLine":{"commandLineLabel":"tool"}},{"buildMetadata":{}},{"optionsParsed":{}},{"workspaceStatus":{}},{"pattern":{"pattern":["//Sources/..."]}},{"buildFinished":{}}],"started":{"uuid":"8180378b-fa89-42c9-a155-3395a034f08e","startTimeMillis":"1742942837401","buildToolVersion":"8.1.1","optionsDescription":"--apple_platform_type\u003dmacos --macos_minimum_os\u003d14.7.4 --cpu\u003ddarwin_arm64 --host_cpu\u003ddarwin_arm64 --platforms\u003d//:macos_arm64 --apple_crosstool_top\u003d@local_config_apple_cc//:toolchain --crosstool_top\u003d@local_config_apple_cc//:toolchain --host_crosstool_top\u003d@local_config_apple_cc//:toolchain --features\u003dswift.use_global_module_cache --features\u003dswift.enable_batch_mode --features\u003dswift.enable_concurrency_checking --features\u003dswift.use_global_index_store --strategy\u003d\u0027SwiftCompile\u003dworker\u0027 --worker_max_instances\u003d4 --cxxopt\u003d\u0027-std\u003dc++14\u0027 --action_env\u003dPATH --action_env\u003d\u0027CC\u003dclang\u0027 --disk_cache\u003d\u0027~/.cache/bazel-disk\u0027 --repository_cache\u003d\u0027~/.cache/bazel-repo\u0027 --experimental_repository_cache_hardlinks --noexperimental_check_output_files --experimental_remote_merkle_tree_cache --reuse_sandbox_directories --experimental_merged_skyframe_analysis_execution --incompatible_strict_action_env --remote_local_fallback --spawn_strategy\u003dlocal,sandboxed --noincompatible_disallow_empty_glob --deleted_packages\u003d.build/checkouts/swift-syntax --define\u003d\u0027build_environment\u003dnonlocal\u0027 --macos_cpus\u003darm64 --disk_cache\u003d/Users/mpy/.bazel-cache --keep_going --verbose_failures --build_event_json_file\u003dbuild_output.json","command":"build","workingDirectory":"/Users/mpy/CascadeProjects/UmbraCore","workspaceDirectory":"/Users/mpy/CascadeProjects/UmbraCore","serverPid":"36662","startTime":"2025-03-25T22:47:17.401Z"}}
{"id":{"buildMetadata":{}},"buildMetadata":{}}
{"id":{"unstructuredCommandLine":{}},"unstructuredCommandLine":{"args":["build","--startup_time\u003d699","--command_wait_time\u003d0","--restart_reason\u003dno_daemon","--binary_path\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin/bazel","--rc_source\u003dclient","--default_override\u003d0:common\u003d--isatty\u003d0","--default_override\u003d0:common\u003d--terminal_columns\u003d80","--rc_source\u003d/Users/mpy/CascadeProjects/UmbraCore/.bazelrc","--rc_source\u003d/Users/mpy/.bazelrc","--default_override\u003d1:coverage\u003d--instrument_test_targets","--default_override\u003d1:coverage\u003d--combined_report\u003dlcov","--default_override\u003d1:coverage\u003d--coverage_report_generator\u003d@bazel_tools//tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator:Main","--default_override\u003d1:coverage\u003d--instrumentation_filter\u003d^//Sources","--default_override\u003d1:test\u003d--test_output\u003derrors","--default_override\u003d1:test\u003d--test_env\u003dDYLD_LIBRARY_PATH","--default_override\u003d1:test\u003d--test_env\u003dDYLD_FRAMEWORK_PATH","--default_override\u003d1:test\u003d--test_env\u003dDEVELOPER_DIR","--default_override\u003d1:test\u003d--test_env\u003dSWIFT_DETERMINISTIC_HASHING\u003d1","--default_override\u003d1:test\u003d--test_env\u003dSDKROOT","--default_override\u003d1:test\u003d--test_env\u003dMACOS_SDK_VERSION\u003d15.4","--default_override\u003d1:test\u003d--test_env\u003dXCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a","--default_override\u003d1:test\u003d--test_env\u003dPLATFORM_NAME\u003dmacosx","--default_override\u003d1:test\u003d--test_verbose_timeout_warnings","--default_override\u003d1:test\u003d--test_summary\u003ddetailed","--default_override\u003d1:test\u003d--build_tests_only","--default_override\u003d1:test\u003d--test_strategy\u003dexclusive","--default_override\u003d1:build:local_build\u003d--define\u003dbuild_environment\u003dlocal","--default_override\u003d1:build:prodonly\u003d--compilation_mode\u003dopt","--default_override\u003d1:build:prodonly\u003d--build_tests_only\u003dfalse","--default_override\u003d1:build:prodonly\u003d--build_tag_filters\u003d-test,-tests","--default_override\u003d1:build\u003d--apple_platform_type\u003dmacos","--default_override\u003d1:build\u003d--macos_minimum_os\u003d14.7.4","--default_override\u003d1:build\u003d--cpu\u003ddarwin_arm64","--default_override\u003d1:build\u003d--host_cpu\u003ddarwin_arm64","--default_override\u003d1:build\u003d--platforms\u003d//:macos_arm64","--default_override\u003d1:build\u003d--apple_crosstool_top\u003d@local_config_apple_cc//:toolchain","--default_override\u003d1:build\u003d--crosstool_top\u003d@local_config_apple_cc//:toolchain","--default_override\u003d1:build\u003d--host_crosstool_top\u003d@local_config_apple_cc//:toolchain","--default_override\u003d1:build\u003d--features\u003dswift.use_global_module_cache","--default_override\u003d1:build\u003d--features\u003dswift.enable_batch_mode","--default_override\u003d1:build\u003d--features\u003dswift.enable_concurrency_checking","--default_override\u003d1:build\u003d--features\u003dswift.use_global_index_store","--default_override\u003d1:build\u003d--strategy\u003dSwiftCompile\u003dworker","--default_override\u003d1:build\u003d--worker_max_instances\u003d4","--default_override\u003d1:build\u003d--cxxopt\u003d-std\u003dc++14","--default_override\u003d1:build\u003d--action_env\u003dPATH","--default_override\u003d1:build\u003d--action_env\u003dCC\u003dclang","--default_override\u003d1:build\u003d--disk_cache\u003d~/.cache/bazel-disk","--default_override\u003d1:build\u003d--repository_cache\u003d~/.cache/bazel-repo","--default_override\u003d1:build\u003d--experimental_repository_cache_hardlinks","--default_override\u003d1:build\u003d--noexperimental_check_output_files","--default_override\u003d1:build\u003d--experimental_remote_merkle_tree_cache","--default_override\u003d1:build\u003d--experimental_reuse_sandbox_directories","--default_override\u003d1:build\u003d--experimental_merged_skyframe_analysis_execution","--default_override\u003d1:build\u003d--incompatible_strict_action_env","--default_override\u003d1:build\u003d--remote_local_fallback","--default_override\u003d1:build\u003d--spawn_strategy\u003dlocal,sandboxed","--default_override\u003d1:build\u003d--noincompatible_disallow_empty_glob","--default_override\u003d1:build\u003d--deleted_packages\u003d.build/checkouts/swift-syntax","--default_override\u003d1:build\u003d--define\u003dbuild_environment\u003dnonlocal","--default_override\u003d1:build:debug\u003d-c","--default_override\u003d1:build:debug\u003ddbg","--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-g","--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-Onone","--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-enable-testing","--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-DDEBUG","--default_override\u003d1:build:withtests\u003d--compilation_mode\u003ddbg","--default_override\u003d1:build:withtests\u003d--build_tests_only\u003dtrue","--default_override\u003d1:build:withtests\u003d--test_output\u003derrors","--default_override\u003d1:build:withtests\u003d--flaky_test_attempts\u003d3","--default_override\u003d1:build:withtests\u003d--keep_going","--default_override\u003d1:build:ci_tests\u003d--config\u003dwithtests","--default_override\u003d1:build:ci_tests\u003d--test_tag_filters\u003d-problematic","--default_override\u003d1:build:ci_tests\u003d--test_env\u003dBAZEL_TEST_TIMEOUT\u003d300","--default_override\u003d1:build:docc\u003d--compilation_mode\u003dopt","--default_override\u003d1:build:docc\u003d--build_tests_only\u003dfalse","--default_override\u003d1:build:docc\u003d--build_tag_filters\u003d-test,-tests","--default_override\u003d1:build:docc\u003d--define\u003dbuild_environment\u003dci","--default_override\u003d1:build:docc\u003d--output_groups\u003d+docc","--default_override\u003d1:build:release\u003d-c","--default_override\u003d1:build:release\u003dopt","--default_override\u003d1:build:release\u003d--workspace_status_command\u003dtools/workspace_status.sh","--default_override\u003d1:build:prod\u003d--compilation_mode\u003dopt","--default_override\u003d1:build:prod\u003d--build_tests_only\u003dfalse","--default_override\u003d1:build:prod\u003d--build_tag_filters\u003d-test,-tests","--default_override\u003d1:build:prod\u003d--target_pattern_file\u003dproduction_targets.txt","--default_override\u003d1:build:prod\u003d--compilation_mode\u003dopt","--default_override\u003d1:build:prod\u003d--build_tests_only\u003dfalse","--default_override\u003d1:build:prod\u003d--build_tag_filters\u003d-test,-tests","--default_override\u003d2:build\u003d--macos_cpus\u003darm64","--default_override\u003d2:build\u003d--disk_cache\u003d/Users/mpy/.bazel-cache","--client_env\u003dCOMMAND_MODE\u003dunix2003","--client_env\u003dCONDA_DEFAULT_ENV\u003dbase","--client_env\u003dCONDA_EXE\u003d/opt/anaconda3/bin/conda","--client_env\u003dCONDA_PREFIX\u003d/opt/anaconda3","--client_env\u003dCONDA_PROMPT_MODIFIER\u003d(base) ","--client_env\u003dCONDA_PYTHON_EXE\u003d/opt/anaconda3/bin/python","--client_env\u003dCONDA_SHLVL\u003d1","--client_env\u003dEDITOR\u003dnano","--client_env\u003dGSETTINGS_SCHEMA_DIR\u003d/opt/anaconda3/share/glib-2.0/schemas","--client_env\u003dHOME\u003d/Users/mpy","--client_env\u003dHOMEBREW_CELLAR\u003d/opt/homebrew/Cellar","--client_env\u003dHOMEBREW_PREFIX\u003d/opt/homebrew","--client_env\u003dHOMEBREW_REPOSITORY\u003d/opt/homebrew","--client_env\u003dINFOPATH\u003d/opt/homebrew/share/info:","--client_env\u003dLESS\u003d-R","--client_env\u003dLOGNAME\u003dmpy","--client_env\u003dLSCOLORS\u003dGxfxcxdxbxegedabagacad","--client_env\u003dLS_COLORS\u003d*.7z\u003d38;5;40:*.WARC\u003d38;5;40:*.a\u003d38;5;40:*.arj\u003d38;5;40:*.bz2\u003d38;5;40:*.cpio\u003d38;5;40:*.gz\u003d38;5;40:*.lrz\u003d38;5;40:*.lz\u003d38;5;40:*.lzma\u003d38;5;40:*.lzo\u003d38;5;40:*.rar\u003d38;5;40:*.s7z\u003d38;5;40:*.sz\u003d38;5;40:*.tar\u003d38;5;40:*.tbz\u003d38;5;40:*.tgz\u003d38;5;40:*.warc\u003d38;5;40:*.xz\u003d38;5;40:*.z\u003d38;5;40:*.zip\u003d38;5;40:*.zipx\u003d38;5;40:*.zoo\u003d38;5;40:*.zpaq\u003d38;5;40:*.zst\u003d38;5;40:*.zstd\u003d38;5;40:*.zz\u003d38;5;40:*@.service\u003d38;5;45:*AUTHORS\u003d38;5;220;1:*CHANGES\u003d38;5;220;1:*CONTRIBUTORS\u003d38;5;220;1:*COPYING\u003d38;5;220;1:*COPYRIGHT\u003d38;5;220;1:*CodeResources\u003d38;5;239:*Dockerfile\u003d38;5;155:*HISTORY\u003d38;5;220;1:*INSTALL\u003d38;5;220;1:*LICENSE\u003d38;5;220;1:*LS_COLORS\u003d48;5;89;38;5;197;1;3;4;7:*MANIFEST\u003d38;5;243:*Makefile\u003d38;5;155:*NOTICE\u003d38;5;220;1:*PATENTS\u003d38;5;220;1:*PkgInfo\u003d38;5;239:*README\u003d38;5;220;1:*README.md\u003d38;5;220;1:*README.rst\u003d38;5;220;1:*VERSION\u003d38;5;220;1:*authorized_keys\u003d1:*cfg\u003d1:*conf\u003d1:*config\u003d1:*core\u003d38;5;241:*id_dsa\u003d38;5;192;3:*id_ecdsa\u003d38;5;192;3:*id_ed25519\u003d38;5;192;3:*id_rsa\u003d38;5;192;3:*known_hosts\u003d1:*lock\u003d38;5;248:*lockfile\u003d38;5;248:*pm_to_blib\u003d38;5;240:*rc\u003d1:*.1p\u003d38;5;7:*.32x\u003d38;5;213:*.3g2\u003d38;5;115:*.3ga\u003d38;5;137;1:*.3gp\u003d38;5;115:*.3p\u003d38;5;7:*.82p\u003d38;5;121:*.83p\u003d38;5;121:*.8eu\u003d38;5;121:*.8xe\u003d38;5;121:*.8xp\u003d38;5;121:*.A64\u003d38;5;213:*.BAT\u003d38;5;172:*.BUP\u003d38;5;241:*.C\u003d38;5;81:*.CFUserTextEncoding\u003d38;5;239:*.DS_Store\u003d38;5;239:*.F\u003d38;5;81:*.F03\u003d38;5;81:*.F08\u003d38;5;81:*.F90\u003d38;5;81:*.F95\u003d38;5;81:*.H\u003d38;5;110:*.IFO\u003d38;5;114:*.JPG\u003d38;5;97:*.M\u003d38;5;110:*.MOV\u003d38;5;114:*.PDF\u003d38;5;141:*.PFA\u003d38;5;66:*.PL\u003d38;5;160:*.R\u003d38;5;49:*.RData\u003d38;5;178:*.Rproj\u003d38;5;11:*.S\u003d38;5;110:*.S3M\u003d38;5;137;1:*.SKIP\u003d38;5;244:*.TIFF\u003d38;5;97:*.VOB\u003d38;5;115;1:*.a00\u003d38;5;213:*.a52\u003d38;5;213:*.a64\u003d38;5;213:*.a78\u003d38;5;213:*.aac\u003d38;5;137;1:*.accdb\u003d38;5;60:*.accde\u003d38;5;60:*.accdr\u003d38;5;60:*.accdt\u003d38;5;60:*.adf\u003d38;5;213:*.adoc\u003d38;5;184:*.afm\u003d38;5;66:*.agda\u003d38;5;81:*.agdai\u003d38;5;110:*.ahk\u003d38;5;41:*.ai\u003d38;5;99:*.aiff\u003d38;5;136;1:*.alac\u003d38;5;136;1:*.allow\u003d38;5;112:*.am\u003d38;5;242:*.amr\u003d38;5;137;1:*.ape\u003d38;5;136;1:*.apk\u003d38;5;215:*.application\u003d38;5;116:*.aria2\u003d38;5;241:*.asc\u003d38;5;192;3:*.asciidoc\u003d38;5;184:*.asf\u003d38;5;115:*.asm\u003d38;5;81:*.ass\u003d38;5;117:*.atr\u003d38;5;213:*.au\u003d38;5;137;1:*.automount\u003d38;5;45:*.avi\u003d38;5;114:*.awk\u003d38;5;172:*.bak\u003d38;5;241:*.bash\u003d38;5;197:*.bash_login\u003d1:*.bash_logout\u003d1:*.bash_profile\u003d1:*.bat\u003d38;5;172:*.bfe\u003d38;5;192;3:*.bib\u003d38;5;178:*.bin\u003d38;5;124:*.bmp\u003d38;5;97:*.bsp\u003d38;5;215:*.c\u003d38;5;81:*.c++\u003d38;5;81:*.cab\u003d38;5;215:*.caf\u003d38;5;137;1:*.cap\u003d38;5;29:*.car\u003d38;5;57:*.cbr\u003d38;5;141:*.cbz\u003d38;5;141:*.cc\u003d38;5;81:*.cda\u003d38;5;136;1:*.cdi\u003d38;5;213:*.cdr\u003d38;5;97:*.chm\u003d38;5;141:*.cl\u003d38;5;81:*.clj\u003d38;5;41:*.cljc\u003d38;5;41:*.cljs\u003d38;5;41:*.cljw\u003d38;5;41:*.cnc\u003d38;5;7:*.coffee\u003d38;5;074;1:*.cp\u003d38;5;81:*.cpp\u003d38;5;81:*.cr\u003d38;5;81:*.crx\u003d38;5;215:*.cs\u003d38;5;81:*.css\u003d38;5;125;1:*.csv\u003d38;5;78:*.ctp\u003d38;5;81:*.cue\u003d38;5;116:*.cxx\u003d38;5;81:*.dart\u003d38;5;51:*.dat\u003d38;5;137;1:*.db\u003d38;5;60:*.deb\u003d38;5;215:*.def\u003d38;5;7:*.deny\u003d38;5;196:*.description\u003d38;5;116:*.device\u003d38;5;45:*.dhall\u003d38;5;178:*.dicom\u003d38;5;97:*.diff\u003d48;5;197;38;5;232:*.directory\u003d38;5;116:*.divx\u003d38;5;114:*.djvu\u003d38;5;141:*.dll\u003d38;5;241:*.dmg\u003d38;5;215:*.dmp\u003d38;5;29:*.doc\u003d38;5;111:*.dockerignore\u003d38;5;240:*.docm\u003d38;5;111;4:*.docx\u003d38;5;111:*.drw\u003d38;5;99:*.dtd\u003d38;5;178:*.dts\u003d38;5;137;1:*.dump\u003d38;5;241:*.dwg\u003d38;5;216:*.dylib\u003d38;5;241:*.ear\u003d38;5;215:*.el\u003d38;5;81:*.elc\u003d38;5;241:*.eln\u003d38;5;241:*.eml\u003d38;5;125;1:*.enc\u003d38;5;192;3:*.entitlements\u003d1:*.epf\u003d1:*.eps\u003d38;5;99:*.epsf\u003d38;5;99:*.epub\u003d38;5;141:*.err\u003d38;5;160;1:*.error\u003d38;5;160;1:*.etx\u003d38;5;184:*.ex\u003d38;5;7:*.example\u003d38;5;7:*.f\u003d38;5;81:*.f03\u003d38;5;81:*.f08\u003d38;5;81:*.f4v\u003d38;5;115:*.f90\u003d38;5;81:*.f95\u003d38;5;81:*.fcm\u003d38;5;137;1:*.feature\u003d38;5;7:*.flac\u003d38;5;136;1:*.flif\u003d38;5;97:*.flv\u003d38;5;115:*.fm2\u003d38;5;213:*.fmp12\u003d38;5;60:*.fnt\u003d38;5;66:*.fon\u003d38;5;66:*.for\u003d38;5;81:*.fp7\u003d38;5;60:*.ftn\u003d38;5;81:*.fvd\u003d38;5;124:*.fxml\u003d38;5;178:*.gb\u003d38;5;213:*.gba\u003d38;5;213:*.gbc\u003d38;5;213:*.gbr\u003d38;5;7:*.gel\u003d38;5;213:*.gemspec\u003d38;5;41:*.ger\u003d38;5;7:*.gg\u003d38;5;213:*.ggl\u003d38;5;213:*.gif\u003d38;5;97:*.git\u003d38;5;197:*.gitattributes\u003d38;5;240:*.gitignore\u003d38;5;240:*.gitmodules\u003d38;5;240:*.go\u003d38;5;81:*.google\u003d38;5;81:*.gp3\u003d38;5;115:*.gp4\u003d38;5;115:*.gpg\u003d38;5;192;3:*.gs\u003d38;5;81:*.h\u003d38;5;110:*.h++\u003d38;5;110:*.hi\u003d38;5;110:*.hidden-color-scheme\u003d1:*.hidden-tmTheme\u003d1:*.hin\u003d38;5;242:*.hpp\u003d38;5;110:*.hs\u003d38;5;81:*.htm\u003d38;5;125;1:*.html\u003d38;5;125;1:*.hxx\u003d38;5;110:*.icns\u003d38;5;97:*.ico\u003d38;5;97:*.ics\u003d38;5;7:*.ii\u003d38;5;110:*.img\u003d38;5;124:*.iml\u003d38;5;166:*.in\u003d38;5;242:*.info\u003d38;5;184:*.ini\u003d1:*.ipa\u003d38;5;215:*.ipk\u003d38;5;213:*.ipynb\u003d38;5;41:*.iso\u003d38;5;124:*.j64\u003d38;5;213:*.jad\u003d38;5;215:*.jar\u003d38;5;215:*.java\u003d38;5;074;1:*.jhtm\u003d38;5;125;1:*.jpeg\u003d38;5;97:*.jpg\u003d38;5;97:*.js\u003d38;5;074;1:*.jsm\u003d38;5;074;1:*.json\u003d38;5;178:*.jsonl\u003d38;5;178:*.jsonnet\u003d38;5;178:*.jsp\u003d38;5;074;1:*.kak\u003d38;5;172:*.key\u003d38;5;166:*.lagda\u003d38;5;81:*.lagda.md\u003d38;5;81:*.lagda.rst\u003d38;5;81:*.lagda.tex\u003d38;5;81:*.last-run\u003d1:*.less\u003d38;5;125;1:*.lhs\u003d38;5;81:*.libsonnet\u003d38;5;142:*.lisp\u003d38;5;81:*.lnk\u003d38;5;39:*.localized\u003d38;5;239:*.localstorage\u003d38;5;60:*.log\u003d38;5;190:*.lua\u003d38;5;81:*.m\u003d38;5;110:*.m2v\u003d38;5;114:*.m3u\u003d38;5;116:*.m3u8\u003d38;5;116:*.m4\u003d38;5;242:*.m4a\u003d38;5;137;1:*.m4v\u003d38;5;114:*.map\u003d38;5;7:*.markdown\u003d38;5;184:*.md\u003d38;5;184:*.md5\u003d38;5;116:*.mdb\u003d38;5;60:*.mde\u003d38;5;60:*.mdump\u003d38;5;241:*.merged-ca-bundle\u003d1:*.mf\u003d38;5;7:*.mfasl\u003d38;5;7:*.mht\u003d38;5;125;1:*.mi\u003d38;5;7:*.mid\u003d38;5;136;1:*.midi\u003d38;5;136;1:*.mjs\u003d38;5;074;1:*.mkd\u003d38;5;184:*.mkv\u003d38;5;114:*.mm\u003d38;5;7:*.mobi\u003d38;5;141:*.mod\u003d38;5;137;1:*.moon\u003d38;5;81:*.mount\u003d38;5;45:*.mov\u003d38;5;114:*.mp3\u003d38;5;137;1:*.mp4\u003d38;5;114:*.mp4a\u003d38;5;137;1:*.mpeg\u003d38;5;114:*.mpg\u003d38;5;114:*.msg\u003d38;5;178:*.msql\u003d38;5;222:*.mtx\u003d38;5;7:*.mustache\u003d38;5;125;1:*.mysql\u003d38;5;222:*.nc\u003d38;5;60:*.ndjson\u003d38;5;178:*.nds\u003d38;5;213:*.nes\u003d38;5;213:*.nfo\u003d38;5;184:*.nib\u003d38;5;57:*.nim\u003d38;5;81:*.nimble\u003d38;5;81:*.nix\u003d38;5;155:*.nrg\u003d38;5;124:*.nth\u003d38;5;97:*.numbers\u003d38;5;112:*.o\u003d38;5;241:*.odb\u003d38;5;111:*.odp\u003d38;5;166:*.ods\u003d38;5;112:*.odt\u003d38;5;111:*.oga\u003d38;5;137;1:*.ogg\u003d38;5;137;1:*.ogm\u003d38;5;114:*.ogv\u003d38;5;115:*.old\u003d38;5;242:*.opus\u003d38;5;137;1:*.org\u003d38;5;184:*.orig\u003d38;5;241:*.otf\u003d38;5;66:*.out\u003d38;5;242:*.p12\u003d38;5;192;3:*.p7s\u003d38;5;192;3:*.pacnew\u003d38;5;33:*.pages\u003d38;5;111:*.pak\u003d38;5;215:*.part\u003d38;5;239:*.patch\u003d48;5;197;38;5;232;1:*.path\u003d38;5;45:*.pbxproj\u003d1:*.pc\u003d38;5;7:*.pcap\u003d38;5;29:*.pcb\u003d38;5;7:*.pcf\u003d1:*.pcm\u003d38;5;136;1:*.pdf\u003d38;5;141:*.pem\u003d38;5;192;3:*.pfa\u003d38;5;66:*.pfb\u003d38;5;66:*.pfm\u003d38;5;66:*.pgn\u003d38;5;178:*.pgp\u003d38;5;192;3:*.pgsql\u003d38;5;222:*.php\u003d38;5;81:*.pi\u003d38;5;7:*.pid\u003d38;5;248:*.pk3\u003d38;5;215:*.pl\u003d38;5;208:*.plist\u003d1:*.plt\u003d38;5;7:*.ply\u003d38;5;216:*.pm\u003d38;5;203:*.png\u003d38;5;97:*.pod\u003d38;5;184:*.pot\u003d38;5;7:*.pps\u003d38;5;166:*.ppt\u003d38;5;166:*.ppts\u003d38;5;166:*.pptsm\u003d38;5;166;4:*.pptx\u003d38;5;166:*.pptxm\u003d38;5;166;4:*.profile\u003d1:*.properties\u003d38;5;116:*.ps\u003d38;5;99:*.psd\u003d38;5;97:*.psf\u003d1:*.pxd\u003d38;5;97:*.pxm\u003d38;5;97:*.py\u003d38;5;41:*.pyc\u003d38;5;240:*.qcow\u003d38;5;124:*.r\u003d38;5;49:*.r[0-9]{0,2}\u003d38;5;239:*.rake\u003d38;5;155:*.rb\u003d38;5;41:*.rdata\u003d38;5;178:*.rdf\u003d38;5;7:*.rkt\u003d38;5;81:*.rlib\u003d38;5;241:*.rmvb\u003d38;5;114:*.rnc\u003d38;5;178:*.rng\u003d38;5;178:*.rom\u003d38;5;213:*.rpm\u003d38;5;215:*.rs\u003d38;5;81:*.rss\u003d38;5;178:*.rst\u003d38;5;184:*.rstheme\u003d1:*.rtf\u003d38;5;111:*.ru\u003d38;5;7:*.s\u003d38;5;110:*.s3m\u003d38;5;137;1:*.sample\u003d38;5;114:*.sass\u003d38;5;125;1:*.sassc\u003d38;5;244:*.sav\u003d38;5;213:*.sc\u003d38;5;41:*.scala\u003d38;5;41:*.scan\u003d38;5;242:*.sch\u003d38;5;7:*.scm\u003d38;5;7:*.scpt\u003d38;5;219:*.scss\u003d38;5;125;1:*.sed\u003d38;5;172:*.service\u003d38;5;45:*.sfv\u003d38;5;116:*.sgml\u003d38;5;178:*.sh\u003d38;5;197:*.sid\u003d38;5;137;1:*.sig\u003d38;5;192;3:*.signature\u003d38;5;192;3:*.sis\u003d38;5;7:*.sms\u003d38;5;213:*.snapshot\u003d38;5;45:*.socket\u003d38;5;45:*.sparseimage\u003d38;5;124:*.spl\u003d38;5;7:*.sql\u003d38;5;222:*.sqlite\u003d38;5;60:*.srt\u003d38;5;117:*.ssa\u003d38;5;117:*.st\u003d38;5;213:*.stackdump\u003d38;5;241:*.state\u003d38;5;248:*.stderr\u003d38;5;160;1:*.stl\u003d38;5;216:*.storyboard\u003d38;5;196:*.strings\u003d1:*.sty\u003d38;5;7:*.sub\u003d38;5;117:*.sublime-build\u003d1:*.sublime-commands\u003d1:*.sublime-keymap\u003d1:*.sublime-project\u003d1:*.sublime-settings\u003d1:*.sublime-snippet\u003d1:*.sublime-workspace\u003d1:*.sug\u003d38;5;7:*.sup\u003d38;5;117:*.svg\u003d38;5;99:*.swap\u003d38;5;45:*.swift\u003d38;5;219:*.swo\u003d38;5;244:*.swp\u003d38;5;244:*.sx\u003d38;5;81:*.t\u003d38;5;114:*.target\u003d38;5;45:*.tcc\u003d38;5;110:*.tcl\u003d38;5;64;1:*.tdy\u003d38;5;7:*.tex\u003d38;5;184:*.textile\u003d38;5;184:*.tf\u003d38;5;168:*.tfm\u003d38;5;7:*.tfnt\u003d38;5;7:*.tfstate\u003d38;5;168:*.tfvars\u003d38;5;168:*.tg\u003d38;5;7:*.theme\u003d38;5;116:*.tif\u003d38;5;97:*.tiff\u003d38;5;97:*.timer\u003d38;5;45:*.tmTheme\u003d1:*.tmp\u003d38;5;244:*.toast\u003d38;5;124:*.toml\u003d38;5;178:*.torrent\u003d38;5;116:*.ts\u003d38;5;115:*.tsv\u003d38;5;78:*.ttf\u003d38;5;66:*.twig\u003d38;5;81:*.txt\u003d38;5;253:*.typelib\u003d38;5;60:*.un~\u003d38;5;241:*.urlview\u003d38;5;116:*.user-ca-bundle\u003d1:*.v\u003d38;5;81:*.vala\u003d38;5;81:*.vapi\u003d38;5;81:*.vb\u003d38;5;81:*.vba\u003d38;5;81:*.vbs\u003d38;5;81:*.vcard\u003d38;5;7:*.vcd\u003d38;5;124:*.vcf\u003d38;5;7:*.vdf\u003d38;5;215:*.vdi\u003d38;5;124:*.vfd\u003d38;5;124:*.vhd\u003d38;5;124:*.vhdx\u003d38;5;124:*.vim\u003d38;5;172:*.viminfo\u003d1:*.vmdk\u003d38;5;124:*.vob\u003d38;5;115;1:*.vpk\u003d38;5;215:*.vtt\u003d38;5;117:*.war\u003d38;5;215:*.wav\u003d38;5;136;1:*.webloc\u003d38;5;116:*.webm\u003d38;5;115:*.webp\u003d38;5;97:*.wma\u003d38;5;137;1:*.wmv\u003d38;5;114:*.woff\u003d38;5;66:*.woff2\u003d38;5;66:*.wrl\u003d38;5;216:*.wv\u003d38;5;136;1:*.wvc\u003d38;5;136;1:*.xcconfig\u003d1:*.xcf\u003d38;5;7:*.xcsettings\u003d1:*.xcuserstate\u003d1:*.xcworkspacedata\u003d1:*.xib\u003d38;5;208:*.xla\u003d38;5;76:*.xln\u003d38;5;7:*.xls\u003d38;5;112:*.xlsx\u003d38;5;112:*.xlsxm\u003d38;5;112;4:*.xltm\u003d38;5;73;4:*.xltx\u003d38;5;73:*.xml\u003d38;5;178:*.xpi\u003d38;5;215:*.xpm\u003d38;5;97:*.xsd\u003d38;5;178:*.xsh\u003d38;5;41:*.yaml\u003d38;5;178:*.yml\u003d38;5;178:*.z[0-9]{0,2}\u003d38;5;239:*.zcompdump\u003d38;5;241:*.zig\u003d38;5;81:*.zlogin\u003d1:*.zlogout\u003d1:*.zprofile\u003d1:*.zsh\u003d38;5;197:*.zshenv\u003d1:*.zwc\u003d38;5;241:*.zx[0-9]{0,2}\u003d38;5;239:bd\u003d38;5;68:ca\u003d38;5;17:cd\u003d38;5;113;1:di\u003d38;5;172:do\u003d38;5;127:ex\u003d38;5;208;1:pi\u003d38;5;126:fi\u003d0:ln\u003dtarget:mh\u003d38;5;222;1:no\u003d0:or\u003d48;5;196;38;5;232;1:ow\u003d38;5;220;1:sg\u003d48;5;3;38;5;0:su\u003d38;5;220;1;3;100;1:so\u003d38;5;197:st\u003d38;5;86;48;5;234:tw\u003d48;5;235;38;5;139;3:","--client_env\u003dMallocNanoZone\u003d0","--client_env\u003dOLDPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","--client_env\u003dORIGINAL_XDG_CURRENT_DESKTOP\u003dundefined","--client_env\u003dP9K_SSH\u003d0","--client_env\u003dPAGER\u003dless","--client_env\u003dPATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin","--client_env\u003dSHELL\u003d/bin/zsh","--client_env\u003dSHLVL\u003d0","--client_env\u003dSSH_AUTH_SOCK\u003d/private/tmp/com.apple.launchd.sOYLbmRVbB/Listeners","--client_env\u003dTMPDIR\u003d/var/folders/ph/xlyxx8513l72lj5r4vvy5s7h0000gn/T/","--client_env\u003dUSER\u003dmpy","--client_env\u003dVSCODE_AMD_ENTRYPOINT\u003dvs/workbench/api/node/extensionHostProcess","--client_env\u003dVSCODE_CODE_CACHE_PATH\u003d/Users/mpy/Library/Application Support/Windsurf/CachedData/b3241b91445f79878ccc91626dfe190f90563e53","--client_env\u003dVSCODE_CRASH_REPORTER_PROCESS_TYPE\u003dextensionHost","--client_env\u003dVSCODE_CWD\u003d/","--client_env\u003dVSCODE_HANDLES_UNCAUGHT_ERRORS\u003dtrue","--client_env\u003dVSCODE_IPC_HOOK\u003d/Users/mpy/Library/Application Support/Windsurf/1.94-main.sock","--client_env\u003dVSCODE_NLS_CONFIG\u003d{\"userLocale\":\"en-gb\",\"osLocale\":\"en-gb\",\"resolvedLanguage\":\"en\",\"defaultMessagesFile\":\"/Applications/Windsurf.app/Contents/Resources/app/out/nls.messages.json\",\"locale\":\"en-gb\",\"availableLanguages\":{}}","--client_env\u003dVSCODE_PID\u003d13823","--client_env\u003dXPC_FLAGS\u003d0x0","--client_env\u003dXPC_SERVICE_NAME\u003dapplication.com.exafunction.windsurf.93286061.93286067","--client_env\u003dZSH\u003d/Users/mpy/.oh-my-zsh","--client_env\u003d__CFBundleIdentifier\u003dcom.exafunction.windsurf","--client_env\u003d__CF_USER_TEXT_ENCODING\u003d0x1F5:0:2","--client_env\u003dELECTRON_RUN_AS_NODE\u003d1","--client_env\u003dCODEIUM_EDITOR_APP_ROOT\u003d/Applications/Windsurf.app/Contents/Resources/app","--client_env\u003dPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","--client_env\u003d_\u003d/opt/homebrew/bin/bazelisk","--client_env\u003dBAZELISK_SKIP_WRAPPER\u003dtrue","--client_cwd\u003d/Users/mpy/CascadeProjects/UmbraCore","//Sources/...","-k","--verbose_failures","--build_event_json_file\u003dbuild_output.json"]}}
{"id":{"optionsParsed":{}},"optionsParsed":{"startupOptions":["--max_idle_secs\u003d10800","--noshutdown_on_low_sys_mem","--connect_timeout_secs\u003d30","--output_user_root\u003d/var/tmp/_bazel_mpy","--output_base\u003d/Users/mpy/.bazel","--failure_detail_out\u003d/Users/mpy/.bazel/failure_detail.rawproto","--idle_server_tasks","--write_command_log","--nowatchfs","--nofatal_event_bus_exceptions","--nowindows_enable_symlinks","--noclient_debug","--host_jvm_args\u003d-Xmx4g"],"explicitStartupOptions":["--output_base\u003d/Users/mpy/.bazel","--host_jvm_args\u003d-Xmx4g"],"cmdLine":["--apple_platform_type\u003dmacos","--macos_minimum_os\u003d14.7.4","--cpu\u003ddarwin_arm64","--host_cpu\u003ddarwin_arm64","--platforms\u003d//:macos_arm64","--apple_crosstool_top\u003d@local_config_apple_cc//:toolchain","--crosstool_top\u003d@local_config_apple_cc//:toolchain","--host_crosstool_top\u003d@local_config_apple_cc//:toolchain","--features\u003dswift.use_global_module_cache","--features\u003dswift.enable_batch_mode","--features\u003dswift.enable_concurrency_checking","--features\u003dswift.use_global_index_store","--strategy\u003dSwiftCompile\u003dworker","--worker_max_instances\u003d4","--cxxopt\u003d-std\u003dc++14","--action_env\u003dPATH","--action_env\u003dCC\u003dclang","--disk_cache\u003d~/.cache/bazel-disk","--repository_cache\u003d~/.cache/bazel-repo","--experimental_repository_cache_hardlinks","--noexperimental_check_output_files","--experimental_remote_merkle_tree_cache","--reuse_sandbox_directories","--experimental_merged_skyframe_analysis_execution","--incompatible_strict_action_env","--remote_local_fallback","--spawn_strategy\u003dlocal,sandboxed","--noincompatible_disallow_empty_glob","--deleted_packages\u003d.build/checkouts/swift-syntax","--define\u003dbuild_environment\u003dnonlocal","--macos_cpus\u003darm64","--disk_cache\u003d/Users/mpy/.bazel-cache","--keep_going","--verbose_failures","--build_event_json_file\u003dbuild_output.json"],"explicitCmdLine":["--keep_going","--verbose_failures","--build_event_json_file\u003dbuild_output.json"],"invocationPolicy":{}}}
{"id":{"structuredCommandLine":{"commandLineLabel":"original"}},"structuredCommandLine":{"commandLineLabel":"original","sections":[{"sectionLabel":"executable","chunkList":{"chunk":["bazel"]}},{"sectionLabel":"startup options","optionList":{"option":[{},{}]}},{"sectionLabel":"command","chunkList":{"chunk":["build"]}},{"sectionLabel":"command options","optionList":{"option":[{"combinedForm":"--rc_source\u003dclient","optionName":"rc_source","optionValue":"client","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d0:common\u003d--isatty\u003d0","optionName":"default_override","optionValue":"0:common\u003d--isatty\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d0:common\u003d--terminal_columns\u003d80","optionName":"default_override","optionValue":"0:common\u003d--terminal_columns\u003d80","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--rc_source\u003d/Users/mpy/CascadeProjects/UmbraCore/.bazelrc","optionName":"rc_source","optionValue":"/Users/mpy/CascadeProjects/UmbraCore/.bazelrc","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--rc_source\u003d/Users/mpy/.bazelrc","optionName":"rc_source","optionValue":"/Users/mpy/.bazelrc","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--instrument_test_targets","optionName":"default_override","optionValue":"1:coverage\u003d--instrument_test_targets","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--combined_report\u003dlcov","optionName":"default_override","optionValue":"1:coverage\u003d--combined_report\u003dlcov","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--coverage_report_generator\u003d@bazel_tools//tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator:Main","optionName":"default_override","optionValue":"1:coverage\u003d--coverage_report_generator\u003d@bazel_tools//tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator:Main","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--instrumentation_filter\u003d^//Sources","optionName":"default_override","optionValue":"1:coverage\u003d--instrumentation_filter\u003d^//Sources","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_output\u003derrors","optionName":"default_override","optionValue":"1:test\u003d--test_output\u003derrors","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dDYLD_LIBRARY_PATH","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dDYLD_LIBRARY_PATH","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dDYLD_FRAMEWORK_PATH","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dDYLD_FRAMEWORK_PATH","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dDEVELOPER_DIR","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dDEVELOPER_DIR","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dSWIFT_DETERMINISTIC_HASHING\u003d1","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dSWIFT_DETERMINISTIC_HASHING\u003d1","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dSDKROOT","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dSDKROOT","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dMACOS_SDK_VERSION\u003d15.4","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dMACOS_SDK_VERSION\u003d15.4","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dXCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dXCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dPLATFORM_NAME\u003dmacosx","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dPLATFORM_NAME\u003dmacosx","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_verbose_timeout_warnings","optionName":"default_override","optionValue":"1:test\u003d--test_verbose_timeout_warnings","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_summary\u003ddetailed","optionName":"default_override","optionValue":"1:test\u003d--test_summary\u003ddetailed","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--build_tests_only","optionName":"default_override","optionValue":"1:test\u003d--build_tests_only","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_strategy\u003dexclusive","optionName":"default_override","optionValue":"1:test\u003d--test_strategy\u003dexclusive","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:local_build\u003d--define\u003dbuild_environment\u003dlocal","optionName":"default_override","optionValue":"1:build:local_build\u003d--define\u003dbuild_environment\u003dlocal","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prodonly\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:prodonly\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prodonly\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:prodonly\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prodonly\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:prodonly\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--apple_platform_type\u003dmacos","optionName":"default_override","optionValue":"1:build\u003d--apple_platform_type\u003dmacos","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--macos_minimum_os\u003d14.7.4","optionName":"default_override","optionValue":"1:build\u003d--macos_minimum_os\u003d14.7.4","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--cpu\u003ddarwin_arm64","optionName":"default_override","optionValue":"1:build\u003d--cpu\u003ddarwin_arm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--host_cpu\u003ddarwin_arm64","optionName":"default_override","optionValue":"1:build\u003d--host_cpu\u003ddarwin_arm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--platforms\u003d//:macos_arm64","optionName":"default_override","optionValue":"1:build\u003d--platforms\u003d//:macos_arm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--apple_crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"default_override","optionValue":"1:build\u003d--apple_crosstool_top\u003d@local_config_apple_cc//:toolchain","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"default_override","optionValue":"1:build\u003d--crosstool_top\u003d@local_config_apple_cc//:toolchain","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--host_crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"default_override","optionValue":"1:build\u003d--host_crosstool_top\u003d@local_config_apple_cc//:toolchain","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.use_global_module_cache","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.use_global_module_cache","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.enable_batch_mode","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.enable_batch_mode","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.enable_concurrency_checking","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.enable_concurrency_checking","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.use_global_index_store","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.use_global_index_store","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--strategy\u003dSwiftCompile\u003dworker","optionName":"default_override","optionValue":"1:build\u003d--strategy\u003dSwiftCompile\u003dworker","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--worker_max_instances\u003d4","optionName":"default_override","optionValue":"1:build\u003d--worker_max_instances\u003d4","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--cxxopt\u003d-std\u003dc++14","optionName":"default_override","optionValue":"1:build\u003d--cxxopt\u003d-std\u003dc++14","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--action_env\u003dPATH","optionName":"default_override","optionValue":"1:build\u003d--action_env\u003dPATH","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--action_env\u003dCC\u003dclang","optionName":"default_override","optionValue":"1:build\u003d--action_env\u003dCC\u003dclang","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--disk_cache\u003d~/.cache/bazel-disk","optionName":"default_override","optionValue":"1:build\u003d--disk_cache\u003d~/.cache/bazel-disk","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--repository_cache\u003d~/.cache/bazel-repo","optionName":"default_override","optionValue":"1:build\u003d--repository_cache\u003d~/.cache/bazel-repo","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_repository_cache_hardlinks","optionName":"default_override","optionValue":"1:build\u003d--experimental_repository_cache_hardlinks","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--noexperimental_check_output_files","optionName":"default_override","optionValue":"1:build\u003d--noexperimental_check_output_files","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_remote_merkle_tree_cache","optionName":"default_override","optionValue":"1:build\u003d--experimental_remote_merkle_tree_cache","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_reuse_sandbox_directories","optionName":"default_override","optionValue":"1:build\u003d--experimental_reuse_sandbox_directories","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_merged_skyframe_analysis_execution","optionName":"default_override","optionValue":"1:build\u003d--experimental_merged_skyframe_analysis_execution","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--incompatible_strict_action_env","optionName":"default_override","optionValue":"1:build\u003d--incompatible_strict_action_env","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--remote_local_fallback","optionName":"default_override","optionValue":"1:build\u003d--remote_local_fallback","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--spawn_strategy\u003dlocal,sandboxed","optionName":"default_override","optionValue":"1:build\u003d--spawn_strategy\u003dlocal,sandboxed","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--noincompatible_disallow_empty_glob","optionName":"default_override","optionValue":"1:build\u003d--noincompatible_disallow_empty_glob","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--deleted_packages\u003d.build/checkouts/swift-syntax","optionName":"default_override","optionValue":"1:build\u003d--deleted_packages\u003d.build/checkouts/swift-syntax","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--define\u003dbuild_environment\u003dnonlocal","optionName":"default_override","optionValue":"1:build\u003d--define\u003dbuild_environment\u003dnonlocal","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d-c","optionName":"default_override","optionValue":"1:build:debug\u003d-c","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003ddbg","optionName":"default_override","optionValue":"1:build:debug\u003ddbg","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-g","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-g","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-Onone","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-Onone","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-enable-testing","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-enable-testing","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-DDEBUG","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-DDEBUG","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--compilation_mode\u003ddbg","optionName":"default_override","optionValue":"1:build:withtests\u003d--compilation_mode\u003ddbg","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--build_tests_only\u003dtrue","optionName":"default_override","optionValue":"1:build:withtests\u003d--build_tests_only\u003dtrue","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--test_output\u003derrors","optionName":"default_override","optionValue":"1:build:withtests\u003d--test_output\u003derrors","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--flaky_test_attempts\u003d3","optionName":"default_override","optionValue":"1:build:withtests\u003d--flaky_test_attempts\u003d3","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--keep_going","optionName":"default_override","optionValue":"1:build:withtests\u003d--keep_going","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:ci_tests\u003d--config\u003dwithtests","optionName":"default_override","optionValue":"1:build:ci_tests\u003d--config\u003dwithtests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:ci_tests\u003d--test_tag_filters\u003d-problematic","optionName":"default_override","optionValue":"1:build:ci_tests\u003d--test_tag_filters\u003d-problematic","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:ci_tests\u003d--test_env\u003dBAZEL_TEST_TIMEOUT\u003d300","optionName":"default_override","optionValue":"1:build:ci_tests\u003d--test_env\u003dBAZEL_TEST_TIMEOUT\u003d300","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:docc\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:docc\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:docc\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--define\u003dbuild_environment\u003dci","optionName":"default_override","optionValue":"1:build:docc\u003d--define\u003dbuild_environment\u003dci","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--output_groups\u003d+docc","optionName":"default_override","optionValue":"1:build:docc\u003d--output_groups\u003d+docc","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:release\u003d-c","optionName":"default_override","optionValue":"1:build:release\u003d-c","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:release\u003dopt","optionName":"default_override","optionValue":"1:build:release\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:release\u003d--workspace_status_command\u003dtools/workspace_status.sh","optionName":"default_override","optionValue":"1:build:release\u003d--workspace_status_command\u003dtools/workspace_status.sh","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:prod\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--target_pattern_file\u003dproduction_targets.txt","optionName":"default_override","optionValue":"1:build:prod\u003d--target_pattern_file\u003dproduction_targets.txt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:prod\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d2:build\u003d--macos_cpus\u003darm64","optionName":"default_override","optionValue":"2:build\u003d--macos_cpus\u003darm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d2:build\u003d--disk_cache\u003d/Users/mpy/.bazel-cache","optionName":"default_override","optionValue":"2:build\u003d--disk_cache\u003d/Users/mpy/.bazel-cache","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--startup_time\u003d699","optionName":"startup_time","optionValue":"699","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--command_wait_time\u003d0","optionName":"command_wait_time","optionValue":"0","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--restart_reason\u003dno_daemon","optionName":"restart_reason","optionValue":"no_daemon","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--binary_path\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin/bazel","optionName":"binary_path","optionValue":"/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin/bazel","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCOMMAND_MODE\u003dunix2003","optionName":"client_env","optionValue":"COMMAND_MODE\u003dunix2003","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_DEFAULT_ENV\u003dbase","optionName":"client_env","optionValue":"CONDA_DEFAULT_ENV\u003dbase","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_EXE\u003d/opt/anaconda3/bin/conda","optionName":"client_env","optionValue":"CONDA_EXE\u003d/opt/anaconda3/bin/conda","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_PREFIX\u003d/opt/anaconda3","optionName":"client_env","optionValue":"CONDA_PREFIX\u003d/opt/anaconda3","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_PROMPT_MODIFIER\u003d(base) ","optionName":"client_env","optionValue":"CONDA_PROMPT_MODIFIER\u003d(base) ","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_PYTHON_EXE\u003d/opt/anaconda3/bin/python","optionName":"client_env","optionValue":"CONDA_PYTHON_EXE\u003d/opt/anaconda3/bin/python","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_SHLVL\u003d1","optionName":"client_env","optionValue":"CONDA_SHLVL\u003d1","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dEDITOR\u003dnano","optionName":"client_env","optionValue":"EDITOR\u003dnano","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dGSETTINGS_SCHEMA_DIR\u003d/opt/anaconda3/share/glib-2.0/schemas","optionName":"client_env","optionValue":"GSETTINGS_SCHEMA_DIR\u003d/opt/anaconda3/share/glib-2.0/schemas","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOME\u003d/Users/mpy","optionName":"client_env","optionValue":"HOME\u003d/Users/mpy","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOMEBREW_CELLAR\u003d/opt/homebrew/Cellar","optionName":"client_env","optionValue":"HOMEBREW_CELLAR\u003d/opt/homebrew/Cellar","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOMEBREW_PREFIX\u003d/opt/homebrew","optionName":"client_env","optionValue":"HOMEBREW_PREFIX\u003d/opt/homebrew","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOMEBREW_REPOSITORY\u003d/opt/homebrew","optionName":"client_env","optionValue":"HOMEBREW_REPOSITORY\u003d/opt/homebrew","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dINFOPATH\u003d/opt/homebrew/share/info:","optionName":"client_env","optionValue":"INFOPATH\u003d/opt/homebrew/share/info:","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLESS\u003d-R","optionName":"client_env","optionValue":"LESS\u003d-R","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLOGNAME\u003dmpy","optionName":"client_env","optionValue":"LOGNAME\u003dmpy","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLSCOLORS\u003dGxfxcxdxbxegedabagacad","optionName":"client_env","optionValue":"LSCOLORS\u003dGxfxcxdxbxegedabagacad","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLS_COLORS\u003d*.7z\u003d38;5;40:*.WARC\u003d38;5;40:*.a\u003d38;5;40:*.arj\u003d38;5;40:*.bz2\u003d38;5;40:*.cpio\u003d38;5;40:*.gz\u003d38;5;40:*.lrz\u003d38;5;40:*.lz\u003d38;5;40:*.lzma\u003d38;5;40:*.lzo\u003d38;5;40:*.rar\u003d38;5;40:*.s7z\u003d38;5;40:*.sz\u003d38;5;40:*.tar\u003d38;5;40:*.tbz\u003d38;5;40:*.tgz\u003d38;5;40:*.warc\u003d38;5;40:*.xz\u003d38;5;40:*.z\u003d38;5;40:*.zip\u003d38;5;40:*.zipx\u003d38;5;40:*.zoo\u003d38;5;40:*.zpaq\u003d38;5;40:*.zst\u003d38;5;40:*.zstd\u003d38;5;40:*.zz\u003d38;5;40:*@.service\u003d38;5;45:*AUTHORS\u003d38;5;220;1:*CHANGES\u003d38;5;220;1:*CONTRIBUTORS\u003d38;5;220;1:*COPYING\u003d38;5;220;1:*COPYRIGHT\u003d38;5;220;1:*CodeResources\u003d38;5;239:*Dockerfile\u003d38;5;155:*HISTORY\u003d38;5;220;1:*INSTALL\u003d38;5;220;1:*LICENSE\u003d38;5;220;1:*LS_COLORS\u003d48;5;89;38;5;197;1;3;4;7:*MANIFEST\u003d38;5;243:*Makefile\u003d38;5;155:*NOTICE\u003d38;5;220;1:*PATENTS\u003d38;5;220;1:*PkgInfo\u003d38;5;239:*README\u003d38;5;220;1:*README.md\u003d38;5;220;1:*README.rst\u003d38;5;220;1:*VERSION\u003d38;5;220;1:*authorized_keys\u003d1:*cfg\u003d1:*conf\u003d1:*config\u003d1:*core\u003d38;5;241:*id_dsa\u003d38;5;192;3:*id_ecdsa\u003d38;5;192;3:*id_ed25519\u003d38;5;192;3:*id_rsa\u003d38;5;192;3:*known_hosts\u003d1:*lock\u003d38;5;248:*lockfile\u003d38;5;248:*pm_to_blib\u003d38;5;240:*rc\u003d1:*.1p\u003d38;5;7:*.32x\u003d38;5;213:*.3g2\u003d38;5;115:*.3ga\u003d38;5;137;1:*.3gp\u003d38;5;115:*.3p\u003d38;5;7:*.82p\u003d38;5;121:*.83p\u003d38;5;121:*.8eu\u003d38;5;121:*.8xe\u003d38;5;121:*.8xp\u003d38;5;121:*.A64\u003d38;5;213:*.BAT\u003d38;5;172:*.BUP\u003d38;5;241:*.C\u003d38;5;81:*.CFUserTextEncoding\u003d38;5;239:*.DS_Store\u003d38;5;239:*.F\u003d38;5;81:*.F03\u003d38;5;81:*.F08\u003d38;5;81:*.F90\u003d38;5;81:*.F95\u003d38;5;81:*.H\u003d38;5;110:*.IFO\u003d38;5;114:*.JPG\u003d38;5;97:*.M\u003d38;5;110:*.MOV\u003d38;5;114:*.PDF\u003d38;5;141:*.PFA\u003d38;5;66:*.PL\u003d38;5;160:*.R\u003d38;5;49:*.RData\u003d38;5;178:*.Rproj\u003d38;5;11:*.S\u003d38;5;110:*.S3M\u003d38;5;137;1:*.SKIP\u003d38;5;244:*.TIFF\u003d38;5;97:*.VOB\u003d38;5;115;1:*.a00\u003d38;5;213:*.a52\u003d38;5;213:*.a64\u003d38;5;213:*.a78\u003d38;5;213:*.aac\u003d38;5;137;1:*.accdb\u003d38;5;60:*.accde\u003d38;5;60:*.accdr\u003d38;5;60:*.accdt\u003d38;5;60:*.adf\u003d38;5;213:*.adoc\u003d38;5;184:*.afm\u003d38;5;66:*.agda\u003d38;5;81:*.agdai\u003d38;5;110:*.ahk\u003d38;5;41:*.ai\u003d38;5;99:*.aiff\u003d38;5;136;1:*.alac\u003d38;5;136;1:*.allow\u003d38;5;112:*.am\u003d38;5;242:*.amr\u003d38;5;137;1:*.ape\u003d38;5;136;1:*.apk\u003d38;5;215:*.application\u003d38;5;116:*.aria2\u003d38;5;241:*.asc\u003d38;5;192;3:*.asciidoc\u003d38;5;184:*.asf\u003d38;5;115:*.asm\u003d38;5;81:*.ass\u003d38;5;117:*.atr\u003d38;5;213:*.au\u003d38;5;137;1:*.automount\u003d38;5;45:*.avi\u003d38;5;114:*.awk\u003d38;5;172:*.bak\u003d38;5;241:*.bash\u003d38;5;197:*.bash_login\u003d1:*.bash_logout\u003d1:*.bash_profile\u003d1:*.bat\u003d38;5;172:*.bfe\u003d38;5;192;3:*.bib\u003d38;5;178:*.bin\u003d38;5;124:*.bmp\u003d38;5;97:*.bsp\u003d38;5;215:*.c\u003d38;5;81:*.c++\u003d38;5;81:*.cab\u003d38;5;215:*.caf\u003d38;5;137;1:*.cap\u003d38;5;29:*.car\u003d38;5;57:*.cbr\u003d38;5;141:*.cbz\u003d38;5;141:*.cc\u003d38;5;81:*.cda\u003d38;5;136;1:*.cdi\u003d38;5;213:*.cdr\u003d38;5;97:*.chm\u003d38;5;141:*.cl\u003d38;5;81:*.clj\u003d38;5;41:*.cljc\u003d38;5;41:*.cljs\u003d38;5;41:*.cljw\u003d38;5;41:*.cnc\u003d38;5;7:*.coffee\u003d38;5;074;1:*.cp\u003d38;5;81:*.cpp\u003d38;5;81:*.cr\u003d38;5;81:*.crx\u003d38;5;215:*.cs\u003d38;5;81:*.css\u003d38;5;125;1:*.csv\u003d38;5;78:*.ctp\u003d38;5;81:*.cue\u003d38;5;116:*.cxx\u003d38;5;81:*.dart\u003d38;5;51:*.dat\u003d38;5;137;1:*.db\u003d38;5;60:*.deb\u003d38;5;215:*.def\u003d38;5;7:*.deny\u003d38;5;196:*.description\u003d38;5;116:*.device\u003d38;5;45:*.dhall\u003d38;5;178:*.dicom\u003d38;5;97:*.diff\u003d48;5;197;38;5;232:*.directory\u003d38;5;116:*.divx\u003d38;5;114:*.djvu\u003d38;5;141:*.dll\u003d38;5;241:*.dmg\u003d38;5;215:*.dmp\u003d38;5;29:*.doc\u003d38;5;111:*.dockerignore\u003d38;5;240:*.docm\u003d38;5;111;4:*.docx\u003d38;5;111:*.drw\u003d38;5;99:*.dtd\u003d38;5;178:*.dts\u003d38;5;137;1:*.dump\u003d38;5;241:*.dwg\u003d38;5;216:*.dylib\u003d38;5;241:*.ear\u003d38;5;215:*.el\u003d38;5;81:*.elc\u003d38;5;241:*.eln\u003d38;5;241:*.eml\u003d38;5;125;1:*.enc\u003d38;5;192;3:*.entitlements\u003d1:*.epf\u003d1:*.eps\u003d38;5;99:*.epsf\u003d38;5;99:*.epub\u003d38;5;141:*.err\u003d38;5;160;1:*.error\u003d38;5;160;1:*.etx\u003d38;5;184:*.ex\u003d38;5;7:*.example\u003d38;5;7:*.f\u003d38;5;81:*.f03\u003d38;5;81:*.f08\u003d38;5;81:*.f4v\u003d38;5;115:*.f90\u003d38;5;81:*.f95\u003d38;5;81:*.fcm\u003d38;5;137;1:*.feature\u003d38;5;7:*.flac\u003d38;5;136;1:*.flif\u003d38;5;97:*.flv\u003d38;5;115:*.fm2\u003d38;5;213:*.fmp12\u003d38;5;60:*.fnt\u003d38;5;66:*.fon\u003d38;5;66:*.for\u003d38;5;81:*.fp7\u003d38;5;60:*.ftn\u003d38;5;81:*.fvd\u003d38;5;124:*.fxml\u003d38;5;178:*.gb\u003d38;5;213:*.gba\u003d38;5;213:*.gbc\u003d38;5;213:*.gbr\u003d38;5;7:*.gel\u003d38;5;213:*.gemspec\u003d38;5;41:*.ger\u003d38;5;7:*.gg\u003d38;5;213:*.ggl\u003d38;5;213:*.gif\u003d38;5;97:*.git\u003d38;5;197:*.gitattributes\u003d38;5;240:*.gitignore\u003d38;5;240:*.gitmodules\u003d38;5;240:*.go\u003d38;5;81:*.google\u003d38;5;81:*.gp3\u003d38;5;115:*.gp4\u003d38;5;115:*.gpg\u003d38;5;192;3:*.gs\u003d38;5;81:*.h\u003d38;5;110:*.h++\u003d38;5;110:*.hi\u003d38;5;110:*.hidden-color-scheme\u003d1:*.hidden-tmTheme\u003d1:*.hin\u003d38;5;242:*.hpp\u003d38;5;110:*.hs\u003d38;5;81:*.htm\u003d38;5;125;1:*.html\u003d38;5;125;1:*.hxx\u003d38;5;110:*.icns\u003d38;5;97:*.ico\u003d38;5;97:*.ics\u003d38;5;7:*.ii\u003d38;5;110:*.img\u003d38;5;124:*.iml\u003d38;5;166:*.in\u003d38;5;242:*.info\u003d38;5;184:*.ini\u003d1:*.ipa\u003d38;5;215:*.ipk\u003d38;5;213:*.ipynb\u003d38;5;41:*.iso\u003d38;5;124:*.j64\u003d38;5;213:*.jad\u003d38;5;215:*.jar\u003d38;5;215:*.java\u003d38;5;074;1:*.jhtm\u003d38;5;125;1:*.jpeg\u003d38;5;97:*.jpg\u003d38;5;97:*.js\u003d38;5;074;1:*.jsm\u003d38;5;074;1:*.json\u003d38;5;178:*.jsonl\u003d38;5;178:*.jsonnet\u003d38;5;178:*.jsp\u003d38;5;074;1:*.kak\u003d38;5;172:*.key\u003d38;5;166:*.lagda\u003d38;5;81:*.lagda.md\u003d38;5;81:*.lagda.rst\u003d38;5;81:*.lagda.tex\u003d38;5;81:*.last-run\u003d1:*.less\u003d38;5;125;1:*.lhs\u003d38;5;81:*.libsonnet\u003d38;5;142:*.lisp\u003d38;5;81:*.lnk\u003d38;5;39:*.localized\u003d38;5;239:*.localstorage\u003d38;5;60:*.log\u003d38;5;190:*.lua\u003d38;5;81:*.m\u003d38;5;110:*.m2v\u003d38;5;114:*.m3u\u003d38;5;116:*.m3u8\u003d38;5;116:*.m4\u003d38;5;242:*.m4a\u003d38;5;137;1:*.m4v\u003d38;5;114:*.map\u003d38;5;7:*.markdown\u003d38;5;184:*.md\u003d38;5;184:*.md5\u003d38;5;116:*.mdb\u003d38;5;60:*.mde\u003d38;5;60:*.mdump\u003d38;5;241:*.merged-ca-bundle\u003d1:*.mf\u003d38;5;7:*.mfasl\u003d38;5;7:*.mht\u003d38;5;125;1:*.mi\u003d38;5;7:*.mid\u003d38;5;136;1:*.midi\u003d38;5;136;1:*.mjs\u003d38;5;074;1:*.mkd\u003d38;5;184:*.mkv\u003d38;5;114:*.mm\u003d38;5;7:*.mobi\u003d38;5;141:*.mod\u003d38;5;137;1:*.moon\u003d38;5;81:*.mount\u003d38;5;45:*.mov\u003d38;5;114:*.mp3\u003d38;5;137;1:*.mp4\u003d38;5;114:*.mp4a\u003d38;5;137;1:*.mpeg\u003d38;5;114:*.mpg\u003d38;5;114:*.msg\u003d38;5;178:*.msql\u003d38;5;222:*.mtx\u003d38;5;7:*.mustache\u003d38;5;125;1:*.mysql\u003d38;5;222:*.nc\u003d38;5;60:*.ndjson\u003d38;5;178:*.nds\u003d38;5;213:*.nes\u003d38;5;213:*.nfo\u003d38;5;184:*.nib\u003d38;5;57:*.nim\u003d38;5;81:*.nimble\u003d38;5;81:*.nix\u003d38;5;155:*.nrg\u003d38;5;124:*.nth\u003d38;5;97:*.numbers\u003d38;5;112:*.o\u003d38;5;241:*.odb\u003d38;5;111:*.odp\u003d38;5;166:*.ods\u003d38;5;112:*.odt\u003d38;5;111:*.oga\u003d38;5;137;1:*.ogg\u003d38;5;137;1:*.ogm\u003d38;5;114:*.ogv\u003d38;5;115:*.old\u003d38;5;242:*.opus\u003d38;5;137;1:*.org\u003d38;5;184:*.orig\u003d38;5;241:*.otf\u003d38;5;66:*.out\u003d38;5;242:*.p12\u003d38;5;192;3:*.p7s\u003d38;5;192;3:*.pacnew\u003d38;5;33:*.pages\u003d38;5;111:*.pak\u003d38;5;215:*.part\u003d38;5;239:*.patch\u003d48;5;197;38;5;232;1:*.path\u003d38;5;45:*.pbxproj\u003d1:*.pc\u003d38;5;7:*.pcap\u003d38;5;29:*.pcb\u003d38;5;7:*.pcf\u003d1:*.pcm\u003d38;5;136;1:*.pdf\u003d38;5;141:*.pem\u003d38;5;192;3:*.pfa\u003d38;5;66:*.pfb\u003d38;5;66:*.pfm\u003d38;5;66:*.pgn\u003d38;5;178:*.pgp\u003d38;5;192;3:*.pgsql\u003d38;5;222:*.php\u003d38;5;81:*.pi\u003d38;5;7:*.pid\u003d38;5;248:*.pk3\u003d38;5;215:*.pl\u003d38;5;208:*.plist\u003d1:*.plt\u003d38;5;7:*.ply\u003d38;5;216:*.pm\u003d38;5;203:*.png\u003d38;5;97:*.pod\u003d38;5;184:*.pot\u003d38;5;7:*.pps\u003d38;5;166:*.ppt\u003d38;5;166:*.ppts\u003d38;5;166:*.pptsm\u003d38;5;166;4:*.pptx\u003d38;5;166:*.pptxm\u003d38;5;166;4:*.profile\u003d1:*.properties\u003d38;5;116:*.ps\u003d38;5;99:*.psd\u003d38;5;97:*.psf\u003d1:*.pxd\u003d38;5;97:*.pxm\u003d38;5;97:*.py\u003d38;5;41:*.pyc\u003d38;5;240:*.qcow\u003d38;5;124:*.r\u003d38;5;49:*.r[0-9]{0,2}\u003d38;5;239:*.rake\u003d38;5;155:*.rb\u003d38;5;41:*.rdata\u003d38;5;178:*.rdf\u003d38;5;7:*.rkt\u003d38;5;81:*.rlib\u003d38;5;241:*.rmvb\u003d38;5;114:*.rnc\u003d38;5;178:*.rng\u003d38;5;178:*.rom\u003d38;5;213:*.rpm\u003d38;5;215:*.rs\u003d38;5;81:*.rss\u003d38;5;178:*.rst\u003d38;5;184:*.rstheme\u003d1:*.rtf\u003d38;5;111:*.ru\u003d38;5;7:*.s\u003d38;5;110:*.s3m\u003d38;5;137;1:*.sample\u003d38;5;114:*.sass\u003d38;5;125;1:*.sassc\u003d38;5;244:*.sav\u003d38;5;213:*.sc\u003d38;5;41:*.scala\u003d38;5;41:*.scan\u003d38;5;242:*.sch\u003d38;5;7:*.scm\u003d38;5;7:*.scpt\u003d38;5;219:*.scss\u003d38;5;125;1:*.sed\u003d38;5;172:*.service\u003d38;5;45:*.sfv\u003d38;5;116:*.sgml\u003d38;5;178:*.sh\u003d38;5;197:*.sid\u003d38;5;137;1:*.sig\u003d38;5;192;3:*.signature\u003d38;5;192;3:*.sis\u003d38;5;7:*.sms\u003d38;5;213:*.snapshot\u003d38;5;45:*.socket\u003d38;5;45:*.sparseimage\u003d38;5;124:*.spl\u003d38;5;7:*.sql\u003d38;5;222:*.sqlite\u003d38;5;60:*.srt\u003d38;5;117:*.ssa\u003d38;5;117:*.st\u003d38;5;213:*.stackdump\u003d38;5;241:*.state\u003d38;5;248:*.stderr\u003d38;5;160;1:*.stl\u003d38;5;216:*.storyboard\u003d38;5;196:*.strings\u003d1:*.sty\u003d38;5;7:*.sub\u003d38;5;117:*.sublime-build\u003d1:*.sublime-commands\u003d1:*.sublime-keymap\u003d1:*.sublime-project\u003d1:*.sublime-settings\u003d1:*.sublime-snippet\u003d1:*.sublime-workspace\u003d1:*.sug\u003d38;5;7:*.sup\u003d38;5;117:*.svg\u003d38;5;99:*.swap\u003d38;5;45:*.swift\u003d38;5;219:*.swo\u003d38;5;244:*.swp\u003d38;5;244:*.sx\u003d38;5;81:*.t\u003d38;5;114:*.target\u003d38;5;45:*.tcc\u003d38;5;110:*.tcl\u003d38;5;64;1:*.tdy\u003d38;5;7:*.tex\u003d38;5;184:*.textile\u003d38;5;184:*.tf\u003d38;5;168:*.tfm\u003d38;5;7:*.tfnt\u003d38;5;7:*.tfstate\u003d38;5;168:*.tfvars\u003d38;5;168:*.tg\u003d38;5;7:*.theme\u003d38;5;116:*.tif\u003d38;5;97:*.tiff\u003d38;5;97:*.timer\u003d38;5;45:*.tmTheme\u003d1:*.tmp\u003d38;5;244:*.toast\u003d38;5;124:*.toml\u003d38;5;178:*.torrent\u003d38;5;116:*.ts\u003d38;5;115:*.tsv\u003d38;5;78:*.ttf\u003d38;5;66:*.twig\u003d38;5;81:*.txt\u003d38;5;253:*.typelib\u003d38;5;60:*.un~\u003d38;5;241:*.urlview\u003d38;5;116:*.user-ca-bundle\u003d1:*.v\u003d38;5;81:*.vala\u003d38;5;81:*.vapi\u003d38;5;81:*.vb\u003d38;5;81:*.vba\u003d38;5;81:*.vbs\u003d38;5;81:*.vcard\u003d38;5;7:*.vcd\u003d38;5;124:*.vcf\u003d38;5;7:*.vdf\u003d38;5;215:*.vdi\u003d38;5;124:*.vfd\u003d38;5;124:*.vhd\u003d38;5;124:*.vhdx\u003d38;5;124:*.vim\u003d38;5;172:*.viminfo\u003d1:*.vmdk\u003d38;5;124:*.vob\u003d38;5;115;1:*.vpk\u003d38;5;215:*.vtt\u003d38;5;117:*.war\u003d38;5;215:*.wav\u003d38;5;136;1:*.webloc\u003d38;5;116:*.webm\u003d38;5;115:*.webp\u003d38;5;97:*.wma\u003d38;5;137;1:*.wmv\u003d38;5;114:*.woff\u003d38;5;66:*.woff2\u003d38;5;66:*.wrl\u003d38;5;216:*.wv\u003d38;5;136;1:*.wvc\u003d38;5;136;1:*.xcconfig\u003d1:*.xcf\u003d38;5;7:*.xcsettings\u003d1:*.xcuserstate\u003d1:*.xcworkspacedata\u003d1:*.xib\u003d38;5;208:*.xla\u003d38;5;76:*.xln\u003d38;5;7:*.xls\u003d38;5;112:*.xlsx\u003d38;5;112:*.xlsxm\u003d38;5;112;4:*.xltm\u003d38;5;73;4:*.xltx\u003d38;5;73:*.xml\u003d38;5;178:*.xpi\u003d38;5;215:*.xpm\u003d38;5;97:*.xsd\u003d38;5;178:*.xsh\u003d38;5;41:*.yaml\u003d38;5;178:*.yml\u003d38;5;178:*.z[0-9]{0,2}\u003d38;5;239:*.zcompdump\u003d38;5;241:*.zig\u003d38;5;81:*.zlogin\u003d1:*.zlogout\u003d1:*.zprofile\u003d1:*.zsh\u003d38;5;197:*.zshenv\u003d1:*.zwc\u003d38;5;241:*.zx[0-9]{0,2}\u003d38;5;239:bd\u003d38;5;68:ca\u003d38;5;17:cd\u003d38;5;113;1:di\u003d38;5;172:do\u003d38;5;127:ex\u003d38;5;208;1:pi\u003d38;5;126:fi\u003d0:ln\u003dtarget:mh\u003d38;5;222;1:no\u003d0:or\u003d48;5;196;38;5;232;1:ow\u003d38;5;220;1:sg\u003d48;5;3;38;5;0:su\u003d38;5;220;1;3;100;1:so\u003d38;5;197:st\u003d38;5;86;48;5;234:tw\u003d48;5;235;38;5;139;3:","optionName":"client_env","optionValue":"LS_COLORS\u003d*.7z\u003d38;5;40:*.WARC\u003d38;5;40:*.a\u003d38;5;40:*.arj\u003d38;5;40:*.bz2\u003d38;5;40:*.cpio\u003d38;5;40:*.gz\u003d38;5;40:*.lrz\u003d38;5;40:*.lz\u003d38;5;40:*.lzma\u003d38;5;40:*.lzo\u003d38;5;40:*.rar\u003d38;5;40:*.s7z\u003d38;5;40:*.sz\u003d38;5;40:*.tar\u003d38;5;40:*.tbz\u003d38;5;40:*.tgz\u003d38;5;40:*.warc\u003d38;5;40:*.xz\u003d38;5;40:*.z\u003d38;5;40:*.zip\u003d38;5;40:*.zipx\u003d38;5;40:*.zoo\u003d38;5;40:*.zpaq\u003d38;5;40:*.zst\u003d38;5;40:*.zstd\u003d38;5;40:*.zz\u003d38;5;40:*@.service\u003d38;5;45:*AUTHORS\u003d38;5;220;1:*CHANGES\u003d38;5;220;1:*CONTRIBUTORS\u003d38;5;220;1:*COPYING\u003d38;5;220;1:*COPYRIGHT\u003d38;5;220;1:*CodeResources\u003d38;5;239:*Dockerfile\u003d38;5;155:*HISTORY\u003d38;5;220;1:*INSTALL\u003d38;5;220;1:*LICENSE\u003d38;5;220;1:*LS_COLORS\u003d48;5;89;38;5;197;1;3;4;7:*MANIFEST\u003d38;5;243:*Makefile\u003d38;5;155:*NOTICE\u003d38;5;220;1:*PATENTS\u003d38;5;220;1:*PkgInfo\u003d38;5;239:*README\u003d38;5;220;1:*README.md\u003d38;5;220;1:*README.rst\u003d38;5;220;1:*VERSION\u003d38;5;220;1:*authorized_keys\u003d1:*cfg\u003d1:*conf\u003d1:*config\u003d1:*core\u003d38;5;241:*id_dsa\u003d38;5;192;3:*id_ecdsa\u003d38;5;192;3:*id_ed25519\u003d38;5;192;3:*id_rsa\u003d38;5;192;3:*known_hosts\u003d1:*lock\u003d38;5;248:*lockfile\u003d38;5;248:*pm_to_blib\u003d38;5;240:*rc\u003d1:*.1p\u003d38;5;7:*.32x\u003d38;5;213:*.3g2\u003d38;5;115:*.3ga\u003d38;5;137;1:*.3gp\u003d38;5;115:*.3p\u003d38;5;7:*.82p\u003d38;5;121:*.83p\u003d38;5;121:*.8eu\u003d38;5;121:*.8xe\u003d38;5;121:*.8xp\u003d38;5;121:*.A64\u003d38;5;213:*.BAT\u003d38;5;172:*.BUP\u003d38;5;241:*.C\u003d38;5;81:*.CFUserTextEncoding\u003d38;5;239:*.DS_Store\u003d38;5;239:*.F\u003d38;5;81:*.F03\u003d38;5;81:*.F08\u003d38;5;81:*.F90\u003d38;5;81:*.F95\u003d38;5;81:*.H\u003d38;5;110:*.IFO\u003d38;5;114:*.JPG\u003d38;5;97:*.M\u003d38;5;110:*.MOV\u003d38;5;114:*.PDF\u003d38;5;141:*.PFA\u003d38;5;66:*.PL\u003d38;5;160:*.R\u003d38;5;49:*.RData\u003d38;5;178:*.Rproj\u003d38;5;11:*.S\u003d38;5;110:*.S3M\u003d38;5;137;1:*.SKIP\u003d38;5;244:*.TIFF\u003d38;5;97:*.VOB\u003d38;5;115;1:*.a00\u003d38;5;213:*.a52\u003d38;5;213:*.a64\u003d38;5;213:*.a78\u003d38;5;213:*.aac\u003d38;5;137;1:*.accdb\u003d38;5;60:*.accde\u003d38;5;60:*.accdr\u003d38;5;60:*.accdt\u003d38;5;60:*.adf\u003d38;5;213:*.adoc\u003d38;5;184:*.afm\u003d38;5;66:*.agda\u003d38;5;81:*.agdai\u003d38;5;110:*.ahk\u003d38;5;41:*.ai\u003d38;5;99:*.aiff\u003d38;5;136;1:*.alac\u003d38;5;136;1:*.allow\u003d38;5;112:*.am\u003d38;5;242:*.amr\u003d38;5;137;1:*.ape\u003d38;5;136;1:*.apk\u003d38;5;215:*.application\u003d38;5;116:*.aria2\u003d38;5;241:*.asc\u003d38;5;192;3:*.asciidoc\u003d38;5;184:*.asf\u003d38;5;115:*.asm\u003d38;5;81:*.ass\u003d38;5;117:*.atr\u003d38;5;213:*.au\u003d38;5;137;1:*.automount\u003d38;5;45:*.avi\u003d38;5;114:*.awk\u003d38;5;172:*.bak\u003d38;5;241:*.bash\u003d38;5;197:*.bash_login\u003d1:*.bash_logout\u003d1:*.bash_profile\u003d1:*.bat\u003d38;5;172:*.bfe\u003d38;5;192;3:*.bib\u003d38;5;178:*.bin\u003d38;5;124:*.bmp\u003d38;5;97:*.bsp\u003d38;5;215:*.c\u003d38;5;81:*.c++\u003d38;5;81:*.cab\u003d38;5;215:*.caf\u003d38;5;137;1:*.cap\u003d38;5;29:*.car\u003d38;5;57:*.cbr\u003d38;5;141:*.cbz\u003d38;5;141:*.cc\u003d38;5;81:*.cda\u003d38;5;136;1:*.cdi\u003d38;5;213:*.cdr\u003d38;5;97:*.chm\u003d38;5;141:*.cl\u003d38;5;81:*.clj\u003d38;5;41:*.cljc\u003d38;5;41:*.cljs\u003d38;5;41:*.cljw\u003d38;5;41:*.cnc\u003d38;5;7:*.coffee\u003d38;5;074;1:*.cp\u003d38;5;81:*.cpp\u003d38;5;81:*.cr\u003d38;5;81:*.crx\u003d38;5;215:*.cs\u003d38;5;81:*.css\u003d38;5;125;1:*.csv\u003d38;5;78:*.ctp\u003d38;5;81:*.cue\u003d38;5;116:*.cxx\u003d38;5;81:*.dart\u003d38;5;51:*.dat\u003d38;5;137;1:*.db\u003d38;5;60:*.deb\u003d38;5;215:*.def\u003d38;5;7:*.deny\u003d38;5;196:*.description\u003d38;5;116:*.device\u003d38;5;45:*.dhall\u003d38;5;178:*.dicom\u003d38;5;97:*.diff\u003d48;5;197;38;5;232:*.directory\u003d38;5;116:*.divx\u003d38;5;114:*.djvu\u003d38;5;141:*.dll\u003d38;5;241:*.dmg\u003d38;5;215:*.dmp\u003d38;5;29:*.doc\u003d38;5;111:*.dockerignore\u003d38;5;240:*.docm\u003d38;5;111;4:*.docx\u003d38;5;111:*.drw\u003d38;5;99:*.dtd\u003d38;5;178:*.dts\u003d38;5;137;1:*.dump\u003d38;5;241:*.dwg\u003d38;5;216:*.dylib\u003d38;5;241:*.ear\u003d38;5;215:*.el\u003d38;5;81:*.elc\u003d38;5;241:*.eln\u003d38;5;241:*.eml\u003d38;5;125;1:*.enc\u003d38;5;192;3:*.entitlements\u003d1:*.epf\u003d1:*.eps\u003d38;5;99:*.epsf\u003d38;5;99:*.epub\u003d38;5;141:*.err\u003d38;5;160;1:*.error\u003d38;5;160;1:*.etx\u003d38;5;184:*.ex\u003d38;5;7:*.example\u003d38;5;7:*.f\u003d38;5;81:*.f03\u003d38;5;81:*.f08\u003d38;5;81:*.f4v\u003d38;5;115:*.f90\u003d38;5;81:*.f95\u003d38;5;81:*.fcm\u003d38;5;137;1:*.feature\u003d38;5;7:*.flac\u003d38;5;136;1:*.flif\u003d38;5;97:*.flv\u003d38;5;115:*.fm2\u003d38;5;213:*.fmp12\u003d38;5;60:*.fnt\u003d38;5;66:*.fon\u003d38;5;66:*.for\u003d38;5;81:*.fp7\u003d38;5;60:*.ftn\u003d38;5;81:*.fvd\u003d38;5;124:*.fxml\u003d38;5;178:*.gb\u003d38;5;213:*.gba\u003d38;5;213:*.gbc\u003d38;5;213:*.gbr\u003d38;5;7:*.gel\u003d38;5;213:*.gemspec\u003d38;5;41:*.ger\u003d38;5;7:*.gg\u003d38;5;213:*.ggl\u003d38;5;213:*.gif\u003d38;5;97:*.git\u003d38;5;197:*.gitattributes\u003d38;5;240:*.gitignore\u003d38;5;240:*.gitmodules\u003d38;5;240:*.go\u003d38;5;81:*.google\u003d38;5;81:*.gp3\u003d38;5;115:*.gp4\u003d38;5;115:*.gpg\u003d38;5;192;3:*.gs\u003d38;5;81:*.h\u003d38;5;110:*.h++\u003d38;5;110:*.hi\u003d38;5;110:*.hidden-color-scheme\u003d1:*.hidden-tmTheme\u003d1:*.hin\u003d38;5;242:*.hpp\u003d38;5;110:*.hs\u003d38;5;81:*.htm\u003d38;5;125;1:*.html\u003d38;5;125;1:*.hxx\u003d38;5;110:*.icns\u003d38;5;97:*.ico\u003d38;5;97:*.ics\u003d38;5;7:*.ii\u003d38;5;110:*.img\u003d38;5;124:*.iml\u003d38;5;166:*.in\u003d38;5;242:*.info\u003d38;5;184:*.ini\u003d1:*.ipa\u003d38;5;215:*.ipk\u003d38;5;213:*.ipynb\u003d38;5;41:*.iso\u003d38;5;124:*.j64\u003d38;5;213:*.jad\u003d38;5;215:*.jar\u003d38;5;215:*.java\u003d38;5;074;1:*.jhtm\u003d38;5;125;1:*.jpeg\u003d38;5;97:*.jpg\u003d38;5;97:*.js\u003d38;5;074;1:*.jsm\u003d38;5;074;1:*.json\u003d38;5;178:*.jsonl\u003d38;5;178:*.jsonnet\u003d38;5;178:*.jsp\u003d38;5;074;1:*.kak\u003d38;5;172:*.key\u003d38;5;166:*.lagda\u003d38;5;81:*.lagda.md\u003d38;5;81:*.lagda.rst\u003d38;5;81:*.lagda.tex\u003d38;5;81:*.last-run\u003d1:*.less\u003d38;5;125;1:*.lhs\u003d38;5;81:*.libsonnet\u003d38;5;142:*.lisp\u003d38;5;81:*.lnk\u003d38;5;39:*.localized\u003d38;5;239:*.localstorage\u003d38;5;60:*.log\u003d38;5;190:*.lua\u003d38;5;81:*.m\u003d38;5;110:*.m2v\u003d38;5;114:*.m3u\u003d38;5;116:*.m3u8\u003d38;5;116:*.m4\u003d38;5;242:*.m4a\u003d38;5;137;1:*.m4v\u003d38;5;114:*.map\u003d38;5;7:*.markdown\u003d38;5;184:*.md\u003d38;5;184:*.md5\u003d38;5;116:*.mdb\u003d38;5;60:*.mde\u003d38;5;60:*.mdump\u003d38;5;241:*.merged-ca-bundle\u003d1:*.mf\u003d38;5;7:*.mfasl\u003d38;5;7:*.mht\u003d38;5;125;1:*.mi\u003d38;5;7:*.mid\u003d38;5;136;1:*.midi\u003d38;5;136;1:*.mjs\u003d38;5;074;1:*.mkd\u003d38;5;184:*.mkv\u003d38;5;114:*.mm\u003d38;5;7:*.mobi\u003d38;5;141:*.mod\u003d38;5;137;1:*.moon\u003d38;5;81:*.mount\u003d38;5;45:*.mov\u003d38;5;114:*.mp3\u003d38;5;137;1:*.mp4\u003d38;5;114:*.mp4a\u003d38;5;137;1:*.mpeg\u003d38;5;114:*.mpg\u003d38;5;114:*.msg\u003d38;5;178:*.msql\u003d38;5;222:*.mtx\u003d38;5;7:*.mustache\u003d38;5;125;1:*.mysql\u003d38;5;222:*.nc\u003d38;5;60:*.ndjson\u003d38;5;178:*.nds\u003d38;5;213:*.nes\u003d38;5;213:*.nfo\u003d38;5;184:*.nib\u003d38;5;57:*.nim\u003d38;5;81:*.nimble\u003d38;5;81:*.nix\u003d38;5;155:*.nrg\u003d38;5;124:*.nth\u003d38;5;97:*.numbers\u003d38;5;112:*.o\u003d38;5;241:*.odb\u003d38;5;111:*.odp\u003d38;5;166:*.ods\u003d38;5;112:*.odt\u003d38;5;111:*.oga\u003d38;5;137;1:*.ogg\u003d38;5;137;1:*.ogm\u003d38;5;114:*.ogv\u003d38;5;115:*.old\u003d38;5;242:*.opus\u003d38;5;137;1:*.org\u003d38;5;184:*.orig\u003d38;5;241:*.otf\u003d38;5;66:*.out\u003d38;5;242:*.p12\u003d38;5;192;3:*.p7s\u003d38;5;192;3:*.pacnew\u003d38;5;33:*.pages\u003d38;5;111:*.pak\u003d38;5;215:*.part\u003d38;5;239:*.patch\u003d48;5;197;38;5;232;1:*.path\u003d38;5;45:*.pbxproj\u003d1:*.pc\u003d38;5;7:*.pcap\u003d38;5;29:*.pcb\u003d38;5;7:*.pcf\u003d1:*.pcm\u003d38;5;136;1:*.pdf\u003d38;5;141:*.pem\u003d38;5;192;3:*.pfa\u003d38;5;66:*.pfb\u003d38;5;66:*.pfm\u003d38;5;66:*.pgn\u003d38;5;178:*.pgp\u003d38;5;192;3:*.pgsql\u003d38;5;222:*.php\u003d38;5;81:*.pi\u003d38;5;7:*.pid\u003d38;5;248:*.pk3\u003d38;5;215:*.pl\u003d38;5;208:*.plist\u003d1:*.plt\u003d38;5;7:*.ply\u003d38;5;216:*.pm\u003d38;5;203:*.png\u003d38;5;97:*.pod\u003d38;5;184:*.pot\u003d38;5;7:*.pps\u003d38;5;166:*.ppt\u003d38;5;166:*.ppts\u003d38;5;166:*.pptsm\u003d38;5;166;4:*.pptx\u003d38;5;166:*.pptxm\u003d38;5;166;4:*.profile\u003d1:*.properties\u003d38;5;116:*.ps\u003d38;5;99:*.psd\u003d38;5;97:*.psf\u003d1:*.pxd\u003d38;5;97:*.pxm\u003d38;5;97:*.py\u003d38;5;41:*.pyc\u003d38;5;240:*.qcow\u003d38;5;124:*.r\u003d38;5;49:*.r[0-9]{0,2}\u003d38;5;239:*.rake\u003d38;5;155:*.rb\u003d38;5;41:*.rdata\u003d38;5;178:*.rdf\u003d38;5;7:*.rkt\u003d38;5;81:*.rlib\u003d38;5;241:*.rmvb\u003d38;5;114:*.rnc\u003d38;5;178:*.rng\u003d38;5;178:*.rom\u003d38;5;213:*.rpm\u003d38;5;215:*.rs\u003d38;5;81:*.rss\u003d38;5;178:*.rst\u003d38;5;184:*.rstheme\u003d1:*.rtf\u003d38;5;111:*.ru\u003d38;5;7:*.s\u003d38;5;110:*.s3m\u003d38;5;137;1:*.sample\u003d38;5;114:*.sass\u003d38;5;125;1:*.sassc\u003d38;5;244:*.sav\u003d38;5;213:*.sc\u003d38;5;41:*.scala\u003d38;5;41:*.scan\u003d38;5;242:*.sch\u003d38;5;7:*.scm\u003d38;5;7:*.scpt\u003d38;5;219:*.scss\u003d38;5;125;1:*.sed\u003d38;5;172:*.service\u003d38;5;45:*.sfv\u003d38;5;116:*.sgml\u003d38;5;178:*.sh\u003d38;5;197:*.sid\u003d38;5;137;1:*.sig\u003d38;5;192;3:*.signature\u003d38;5;192;3:*.sis\u003d38;5;7:*.sms\u003d38;5;213:*.snapshot\u003d38;5;45:*.socket\u003d38;5;45:*.sparseimage\u003d38;5;124:*.spl\u003d38;5;7:*.sql\u003d38;5;222:*.sqlite\u003d38;5;60:*.srt\u003d38;5;117:*.ssa\u003d38;5;117:*.st\u003d38;5;213:*.stackdump\u003d38;5;241:*.state\u003d38;5;248:*.stderr\u003d38;5;160;1:*.stl\u003d38;5;216:*.storyboard\u003d38;5;196:*.strings\u003d1:*.sty\u003d38;5;7:*.sub\u003d38;5;117:*.sublime-build\u003d1:*.sublime-commands\u003d1:*.sublime-keymap\u003d1:*.sublime-project\u003d1:*.sublime-settings\u003d1:*.sublime-snippet\u003d1:*.sublime-workspace\u003d1:*.sug\u003d38;5;7:*.sup\u003d38;5;117:*.svg\u003d38;5;99:*.swap\u003d38;5;45:*.swift\u003d38;5;219:*.swo\u003d38;5;244:*.swp\u003d38;5;244:*.sx\u003d38;5;81:*.t\u003d38;5;114:*.target\u003d38;5;45:*.tcc\u003d38;5;110:*.tcl\u003d38;5;64;1:*.tdy\u003d38;5;7:*.tex\u003d38;5;184:*.textile\u003d38;5;184:*.tf\u003d38;5;168:*.tfm\u003d38;5;7:*.tfnt\u003d38;5;7:*.tfstate\u003d38;5;168:*.tfvars\u003d38;5;168:*.tg\u003d38;5;7:*.theme\u003d38;5;116:*.tif\u003d38;5;97:*.tiff\u003d38;5;97:*.timer\u003d38;5;45:*.tmTheme\u003d1:*.tmp\u003d38;5;244:*.toast\u003d38;5;124:*.toml\u003d38;5;178:*.torrent\u003d38;5;116:*.ts\u003d38;5;115:*.tsv\u003d38;5;78:*.ttf\u003d38;5;66:*.twig\u003d38;5;81:*.txt\u003d38;5;253:*.typelib\u003d38;5;60:*.un~\u003d38;5;241:*.urlview\u003d38;5;116:*.user-ca-bundle\u003d1:*.v\u003d38;5;81:*.vala\u003d38;5;81:*.vapi\u003d38;5;81:*.vb\u003d38;5;81:*.vba\u003d38;5;81:*.vbs\u003d38;5;81:*.vcard\u003d38;5;7:*.vcd\u003d38;5;124:*.vcf\u003d38;5;7:*.vdf\u003d38;5;215:*.vdi\u003d38;5;124:*.vfd\u003d38;5;124:*.vhd\u003d38;5;124:*.vhdx\u003d38;5;124:*.vim\u003d38;5;172:*.viminfo\u003d1:*.vmdk\u003d38;5;124:*.vob\u003d38;5;115;1:*.vpk\u003d38;5;215:*.vtt\u003d38;5;117:*.war\u003d38;5;215:*.wav\u003d38;5;136;1:*.webloc\u003d38;5;116:*.webm\u003d38;5;115:*.webp\u003d38;5;97:*.wma\u003d38;5;137;1:*.wmv\u003d38;5;114:*.woff\u003d38;5;66:*.woff2\u003d38;5;66:*.wrl\u003d38;5;216:*.wv\u003d38;5;136;1:*.wvc\u003d38;5;136;1:*.xcconfig\u003d1:*.xcf\u003d38;5;7:*.xcsettings\u003d1:*.xcuserstate\u003d1:*.xcworkspacedata\u003d1:*.xib\u003d38;5;208:*.xla\u003d38;5;76:*.xln\u003d38;5;7:*.xls\u003d38;5;112:*.xlsx\u003d38;5;112:*.xlsxm\u003d38;5;112;4:*.xltm\u003d38;5;73;4:*.xltx\u003d38;5;73:*.xml\u003d38;5;178:*.xpi\u003d38;5;215:*.xpm\u003d38;5;97:*.xsd\u003d38;5;178:*.xsh\u003d38;5;41:*.yaml\u003d38;5;178:*.yml\u003d38;5;178:*.z[0-9]{0,2}\u003d38;5;239:*.zcompdump\u003d38;5;241:*.zig\u003d38;5;81:*.zlogin\u003d1:*.zlogout\u003d1:*.zprofile\u003d1:*.zsh\u003d38;5;197:*.zshenv\u003d1:*.zwc\u003d38;5;241:*.zx[0-9]{0,2}\u003d38;5;239:bd\u003d38;5;68:ca\u003d38;5;17:cd\u003d38;5;113;1:di\u003d38;5;172:do\u003d38;5;127:ex\u003d38;5;208;1:pi\u003d38;5;126:fi\u003d0:ln\u003dtarget:mh\u003d38;5;222;1:no\u003d0:or\u003d48;5;196;38;5;232;1:ow\u003d38;5;220;1:sg\u003d48;5;3;38;5;0:su\u003d38;5;220;1;3;100;1:so\u003d38;5;197:st\u003d38;5;86;48;5;234:tw\u003d48;5;235;38;5;139;3:","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dMallocNanoZone\u003d0","optionName":"client_env","optionValue":"MallocNanoZone\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dOLDPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","optionName":"client_env","optionValue":"OLDPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dORIGINAL_XDG_CURRENT_DESKTOP\u003dundefined","optionName":"client_env","optionValue":"ORIGINAL_XDG_CURRENT_DESKTOP\u003dundefined","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dP9K_SSH\u003d0","optionName":"client_env","optionValue":"P9K_SSH\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dPAGER\u003dless","optionName":"client_env","optionValue":"PAGER\u003dless","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dPATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin","optionName":"client_env","optionValue":"PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dSHELL\u003d/bin/zsh","optionName":"client_env","optionValue":"SHELL\u003d/bin/zsh","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dSHLVL\u003d0","optionName":"client_env","optionValue":"SHLVL\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dSSH_AUTH_SOCK\u003d/private/tmp/com.apple.launchd.sOYLbmRVbB/Listeners","optionName":"client_env","optionValue":"SSH_AUTH_SOCK\u003d/private/tmp/com.apple.launchd.sOYLbmRVbB/Listeners","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dTMPDIR\u003d/var/folders/ph/xlyxx8513l72lj5r4vvy5s7h0000gn/T/","optionName":"client_env","optionValue":"TMPDIR\u003d/var/folders/ph/xlyxx8513l72lj5r4vvy5s7h0000gn/T/","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dUSER\u003dmpy","optionName":"client_env","optionValue":"USER\u003dmpy","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_AMD_ENTRYPOINT\u003dvs/workbench/api/node/extensionHostProcess","optionName":"client_env","optionValue":"VSCODE_AMD_ENTRYPOINT\u003dvs/workbench/api/node/extensionHostProcess","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_CODE_CACHE_PATH\u003d/Users/mpy/Library/Application Support/Windsurf/CachedData/b3241b91445f79878ccc91626dfe190f90563e53","optionName":"client_env","optionValue":"VSCODE_CODE_CACHE_PATH\u003d/Users/mpy/Library/Application Support/Windsurf/CachedData/b3241b91445f79878ccc91626dfe190f90563e53","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_CRASH_REPORTER_PROCESS_TYPE\u003dextensionHost","optionName":"client_env","optionValue":"VSCODE_CRASH_REPORTER_PROCESS_TYPE\u003dextensionHost","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_CWD\u003d/","optionName":"client_env","optionValue":"VSCODE_CWD\u003d/","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_HANDLES_UNCAUGHT_ERRORS\u003dtrue","optionName":"client_env","optionValue":"VSCODE_HANDLES_UNCAUGHT_ERRORS\u003dtrue","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_IPC_HOOK\u003d/Users/mpy/Library/Application Support/Windsurf/1.94-main.sock","optionName":"client_env","optionValue":"VSCODE_IPC_HOOK\u003d/Users/mpy/Library/Application Support/Windsurf/1.94-main.sock","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_NLS_CONFIG\u003d{\"userLocale\":\"en-gb\",\"osLocale\":\"en-gb\",\"resolvedLanguage\":\"en\",\"defaultMessagesFile\":\"/Applications/Windsurf.app/Contents/Resources/app/out/nls.messages.json\",\"locale\":\"en-gb\",\"availableLanguages\":{}}","optionName":"client_env","optionValue":"VSCODE_NLS_CONFIG\u003d{\"userLocale\":\"en-gb\",\"osLocale\":\"en-gb\",\"resolvedLanguage\":\"en\",\"defaultMessagesFile\":\"/Applications/Windsurf.app/Contents/Resources/app/out/nls.messages.json\",\"locale\":\"en-gb\",\"availableLanguages\":{}}","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_PID\u003d13823","optionName":"client_env","optionValue":"VSCODE_PID\u003d13823","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dXPC_FLAGS\u003d0x0","optionName":"client_env","optionValue":"XPC_FLAGS\u003d0x0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dXPC_SERVICE_NAME\u003dapplication.com.exafunction.windsurf.93286061.93286067","optionName":"client_env","optionValue":"XPC_SERVICE_NAME\u003dapplication.com.exafunction.windsurf.93286061.93286067","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dZSH\u003d/Users/mpy/.oh-my-zsh","optionName":"client_env","optionValue":"ZSH\u003d/Users/mpy/.oh-my-zsh","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003d__CFBundleIdentifier\u003dcom.exafunction.windsurf","optionName":"client_env","optionValue":"__CFBundleIdentifier\u003dcom.exafunction.windsurf","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003d__CF_USER_TEXT_ENCODING\u003d0x1F5:0:2","optionName":"client_env","optionValue":"__CF_USER_TEXT_ENCODING\u003d0x1F5:0:2","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dELECTRON_RUN_AS_NODE\u003d1","optionName":"client_env","optionValue":"ELECTRON_RUN_AS_NODE\u003d1","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCODEIUM_EDITOR_APP_ROOT\u003d/Applications/Windsurf.app/Contents/Resources/app","optionName":"client_env","optionValue":"CODEIUM_EDITOR_APP_ROOT\u003d/Applications/Windsurf.app/Contents/Resources/app","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","optionName":"client_env","optionValue":"PWD\u003d/Users/mpy/CascadeProjects/UmbraCore","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003d_\u003d/opt/homebrew/bin/bazelisk","optionName":"client_env","optionValue":"_\u003d/opt/homebrew/bin/bazelisk","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dBAZELISK_SKIP_WRAPPER\u003dtrue","optionName":"client_env","optionValue":"BAZELISK_SKIP_WRAPPER\u003dtrue","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_cwd\u003d/Users/mpy/CascadeProjects/UmbraCore","optionName":"client_cwd","optionValue":"/Users/mpy/CascadeProjects/UmbraCore","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"-k","optionName":"keep_going","optionValue":"1","effectTags":["EAGERNESS_TO_EXIT"]},{"combinedForm":"--verbose_failures","optionName":"verbose_failures","optionValue":"1","effectTags":["TERMINAL_OUTPUT"]},{"combinedForm":"--build_event_json_file\u003dbuild_output.json","optionName":"build_event_json_file","optionValue":"build_output.json","effectTags":["AFFECTS_OUTPUTS"]}]}},{"sectionLabel":"residual","chunkList":{"chunk":["//Sources/..."]}}]}}
{"id":{"structuredCommandLine":{"commandLineLabel":"canonical"}},"structuredCommandLine":{"commandLineLabel":"canonical","sections":[{"sectionLabel":"executable","chunkList":{"chunk":["bazel"]}},{"sectionLabel":"startup options","optionList":{"option":[{"combinedForm":"--max_idle_secs\u003d10800","optionName":"max_idle_secs","optionValue":"10800","effectTags":["EAGERNESS_TO_EXIT","LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--noshutdown_on_low_sys_mem","optionName":"shutdown_on_low_sys_mem","optionValue":"0","effectTags":["EAGERNESS_TO_EXIT","LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--connect_timeout_secs\u003d30","optionName":"connect_timeout_secs","optionValue":"30","effectTags":["BAZEL_INTERNAL_CONFIGURATION"]},{"combinedForm":"--output_user_root\u003d/var/tmp/_bazel_mpy","optionName":"output_user_root","optionValue":"/var/tmp/_bazel_mpy","effectTags":["AFFECTS_OUTPUTS","LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--install_base\u003d/var/tmp/_bazel_mpy/install/c291a4fcfb3420b5aba8da73aa5fa10e","optionName":"install_base","optionValue":"/var/tmp/_bazel_mpy/install/c291a4fcfb3420b5aba8da73aa5fa10e","effectTags":["CHANGES_INPUTS","LOSES_INCREMENTAL_STATE"],"metadataTags":["HIDDEN"]},{"combinedForm":"--install_md5\u003dc291a4fcfb3420b5aba8da73aa5fa10e","optionName":"install_md5","optionValue":"c291a4fcfb3420b5aba8da73aa5fa10e","effectTags":["LOSES_INCREMENTAL_STATE","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--lock_install_base","optionName":"lock_install_base","optionValue":"1","effectTags":["BAZEL_INTERNAL_CONFIGURATION"],"metadataTags":["HIDDEN"]},{"combinedForm":"--output_base\u003d/Users/mpy/.bazel","optionName":"output_base","optionValue":"/Users/mpy/.bazel","effectTags":["AFFECTS_OUTPUTS","LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--workspace_directory\u003d/Users/mpy/CascadeProjects/UmbraCore","optionName":"workspace_directory","optionValue":"/Users/mpy/CascadeProjects/UmbraCore","effectTags":["CHANGES_INPUTS","LOSES_INCREMENTAL_STATE"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_system_javabase\u003d/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home","optionName":"default_system_javabase","optionValue":"/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home","effectTags":["CHANGES_INPUTS","LOSES_INCREMENTAL_STATE"],"metadataTags":["HIDDEN"]},{"combinedForm":"--failure_detail_out\u003d/Users/mpy/.bazel/failure_detail.rawproto","optionName":"failure_detail_out","optionValue":"/Users/mpy/.bazel/failure_detail.rawproto","effectTags":["AFFECTS_OUTPUTS","LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--idle_server_tasks","optionName":"idle_server_tasks","optionValue":"1","effectTags":["LOSES_INCREMENTAL_STATE","HOST_MACHINE_RESOURCE_OPTIMIZATIONS"]},{"combinedForm":"--write_command_log","optionName":"write_command_log","optionValue":"1","effectTags":["AFFECTS_OUTPUTS","LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--nowatchfs","optionName":"watchfs","optionValue":"0","effectTags":["UNKNOWN"],"metadataTags":["DEPRECATED"]},{"combinedForm":"--nofatal_event_bus_exceptions","optionName":"fatal_event_bus_exceptions","optionValue":"0","effectTags":["EAGERNESS_TO_EXIT","LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--nowindows_enable_symlinks","optionName":"windows_enable_symlinks","optionValue":"0","effectTags":["BAZEL_INTERNAL_CONFIGURATION"]},{"combinedForm":"--client_debug\u003dfalse","optionName":"client_debug","optionValue":"false","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"]},{"combinedForm":"--host_jvm_args\u003d-Xmx4g","optionName":"host_jvm_args","optionValue":"-Xmx4g","effectTags":["UNKNOWN"]},{"combinedForm":"--product_name\u003dBazel","optionName":"product_name","optionValue":"Bazel","effectTags":["LOSES_INCREMENTAL_STATE","AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--option_sources\u003dhost_Ujvm_Uargs:/Users/mpy/CascadeProjects/UmbraCore/.bazelrc:output_Ubase:/Users/mpy/.bazelrc","optionName":"option_sources","optionValue":"host_Ujvm_Uargs:/Users/mpy/CascadeProjects/UmbraCore/.bazelrc:output_Ubase:/Users/mpy/.bazelrc","effectTags":["AFFECTS_OUTPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--ignore_all_rc_files","optionName":"ignore_all_rc_files","optionValue":"1","effectTags":["CHANGES_INPUTS"]}]}},{"sectionLabel":"command","chunkList":{"chunk":["build"]}},{"sectionLabel":"command options","optionList":{"option":[{"combinedForm":"--isatty\u003d0","optionName":"isatty","optionValue":"0","effectTags":["UNKNOWN"],"metadataTags":["HIDDEN"]},{"combinedForm":"--terminal_columns\u003d80","optionName":"terminal_columns","optionValue":"80","effectTags":["UNKNOWN"],"metadataTags":["HIDDEN"]},{"combinedForm":"--apple_platform_type\u003dmacos","optionName":"apple_platform_type","optionValue":"macos","effectTags":["BAZEL_INTERNAL_CONFIGURATION"]},{"combinedForm":"--macos_minimum_os\u003d14.7.4","optionName":"macos_minimum_os","optionValue":"14.7.4","effectTags":["LOSES_INCREMENTAL_STATE"]},{"combinedForm":"--cpu\u003ddarwin_arm64","optionName":"cpu","optionValue":"darwin_arm64","effectTags":["CHANGES_INPUTS","AFFECTS_OUTPUTS"]},{"combinedForm":"--host_cpu\u003ddarwin_arm64","optionName":"host_cpu","optionValue":"darwin_arm64","effectTags":["CHANGES_INPUTS","AFFECTS_OUTPUTS"]},{"combinedForm":"--platforms\u003d//:macos_arm64","optionName":"platforms","optionValue":"//:macos_arm64","effectTags":["AFFECTS_OUTPUTS","CHANGES_INPUTS","LOADING_AND_ANALYSIS"]},{"combinedForm":"--apple_crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"apple_crosstool_top","optionValue":"@local_config_apple_cc//:toolchain","effectTags":["LOSES_INCREMENTAL_STATE","CHANGES_INPUTS"]},{"combinedForm":"--crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"crosstool_top","optionValue":"@local_config_apple_cc//:toolchain","effectTags":["NO_OP"]},{"combinedForm":"--host_crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"host_crosstool_top","optionValue":"@local_config_apple_cc//:toolchain","effectTags":["NO_OP"]},{"combinedForm":"--features\u003dswift.use_global_module_cache","optionName":"features","optionValue":"swift.use_global_module_cache","effectTags":["CHANGES_INPUTS","AFFECTS_OUTPUTS"]},{"combinedForm":"--features\u003dswift.enable_batch_mode","optionName":"features","optionValue":"swift.enable_batch_mode","effectTags":["CHANGES_INPUTS","AFFECTS_OUTPUTS"]},{"combinedForm":"--features\u003dswift.enable_concurrency_checking","optionName":"features","optionValue":"swift.enable_concurrency_checking","effectTags":["CHANGES_INPUTS","AFFECTS_OUTPUTS"]},{"combinedForm":"--features\u003dswift.use_global_index_store","optionName":"features","optionValue":"swift.use_global_index_store","effectTags":["CHANGES_INPUTS","AFFECTS_OUTPUTS"]},{"combinedForm":"--strategy\u003dSwiftCompile\u003dworker","optionName":"strategy","optionValue":"SwiftCompile\u003dworker","effectTags":["EXECUTION"]},{"combinedForm":"--worker_max_instances\u003d4","optionName":"worker_max_instances","optionValue":"4","effectTags":["EXECUTION","HOST_MACHINE_RESOURCE_OPTIMIZATIONS"]},{"combinedForm":"--cxxopt\u003d-std\u003dc++14","optionName":"cxxopt","optionValue":"-std\u003dc++14","effectTags":["ACTION_COMMAND_LINES","AFFECTS_OUTPUTS"]},{"combinedForm":"--action_env\u003dPATH","optionName":"action_env","optionValue":"PATH","effectTags":["ACTION_COMMAND_LINES"]},{"combinedForm":"--action_env\u003dCC\u003dclang","optionName":"action_env","optionValue":"CC\u003dclang","effectTags":["ACTION_COMMAND_LINES"]},{"combinedForm":"--repository_cache\u003d~/.cache/bazel-repo","optionName":"repository_cache","optionValue":"~/.cache/bazel-repo","effectTags":["BAZEL_INTERNAL_CONFIGURATION"]},{"combinedForm":"--experimental_repository_cache_hardlinks","optionName":"experimental_repository_cache_hardlinks","optionValue":"1","effectTags":["BAZEL_INTERNAL_CONFIGURATION"]},{"combinedForm":"--noexperimental_check_output_files","optionName":"experimental_check_output_files","optionValue":"0","effectTags":["UNKNOWN"]},{"combinedForm":"--experimental_remote_merkle_tree_cache","optionName":"experimental_remote_merkle_tree_cache","optionValue":"1","effectTags":["UNKNOWN"]},{"combinedForm":"--experimental_reuse_sandbox_directories","optionName":"reuse_sandbox_directories","optionValue":"1","effectTags":["HOST_MACHINE_RESOURCE_OPTIMIZATIONS","EXECUTION"]},{"combinedForm":"--experimental_merged_skyframe_analysis_execution","optionName":"experimental_merged_skyframe_analysis_execution","optionValue":"1","effectTags":["LOADING_AND_ANALYSIS","EXECUTION"],"metadataTags":["EXPERIMENTAL"]},{"combinedForm":"--incompatible_strict_action_env","optionName":"incompatible_strict_action_env","optionValue":"1","effectTags":["LOADING_AND_ANALYSIS"],"metadataTags":["INCOMPATIBLE_CHANGE"]},{"combinedForm":"--remote_local_fallback","optionName":"remote_local_fallback","optionValue":"1","effectTags":["UNKNOWN"]},{"combinedForm":"--spawn_strategy\u003dlocal,sandboxed","optionName":"spawn_strategy","optionValue":"local,sandboxed","effectTags":["EXECUTION"]},{"combinedForm":"--noincompatible_disallow_empty_glob","optionName":"incompatible_disallow_empty_glob","optionValue":"0","effectTags":["BUILD_FILE_SEMANTICS"],"metadataTags":["INCOMPATIBLE_CHANGE"]},{"combinedForm":"--deleted_packages\u003d.build/checkouts/swift-syntax","optionName":"deleted_packages","optionValue":".build/checkouts/swift-syntax","effectTags":["UNKNOWN"]},{"combinedForm":"--define\u003dbuild_environment\u003dnonlocal","optionName":"define","optionValue":"build_environment\u003dnonlocal","effectTags":["CHANGES_INPUTS","AFFECTS_OUTPUTS"]},{"combinedForm":"--macos_cpus\u003darm64","optionName":"macos_cpus","optionValue":"arm64","effectTags":["LOSES_INCREMENTAL_STATE","LOADING_AND_ANALYSIS"]},{"combinedForm":"--disk_cache\u003d/Users/mpy/.bazel-cache","optionName":"disk_cache","optionValue":"/Users/mpy/.bazel-cache","effectTags":["UNKNOWN"]},{"combinedForm":"--rc_source\u003dclient","optionName":"rc_source","optionValue":"client","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d0:common\u003d--isatty\u003d0","optionName":"default_override","optionValue":"0:common\u003d--isatty\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d0:common\u003d--terminal_columns\u003d80","optionName":"default_override","optionValue":"0:common\u003d--terminal_columns\u003d80","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--rc_source\u003d/Users/mpy/CascadeProjects/UmbraCore/.bazelrc","optionName":"rc_source","optionValue":"/Users/mpy/CascadeProjects/UmbraCore/.bazelrc","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--rc_source\u003d/Users/mpy/.bazelrc","optionName":"rc_source","optionValue":"/Users/mpy/.bazelrc","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--instrument_test_targets","optionName":"default_override","optionValue":"1:coverage\u003d--instrument_test_targets","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--combined_report\u003dlcov","optionName":"default_override","optionValue":"1:coverage\u003d--combined_report\u003dlcov","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--coverage_report_generator\u003d@bazel_tools//tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator:Main","optionName":"default_override","optionValue":"1:coverage\u003d--coverage_report_generator\u003d@bazel_tools//tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator:Main","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:coverage\u003d--instrumentation_filter\u003d^//Sources","optionName":"default_override","optionValue":"1:coverage\u003d--instrumentation_filter\u003d^//Sources","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_output\u003derrors","optionName":"default_override","optionValue":"1:test\u003d--test_output\u003derrors","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dDYLD_LIBRARY_PATH","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dDYLD_LIBRARY_PATH","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dDYLD_FRAMEWORK_PATH","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dDYLD_FRAMEWORK_PATH","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dDEVELOPER_DIR","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dDEVELOPER_DIR","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dSWIFT_DETERMINISTIC_HASHING\u003d1","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dSWIFT_DETERMINISTIC_HASHING\u003d1","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dSDKROOT","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dSDKROOT","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dMACOS_SDK_VERSION\u003d15.4","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dMACOS_SDK_VERSION\u003d15.4","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dXCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dXCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_env\u003dPLATFORM_NAME\u003dmacosx","optionName":"default_override","optionValue":"1:test\u003d--test_env\u003dPLATFORM_NAME\u003dmacosx","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_verbose_timeout_warnings","optionName":"default_override","optionValue":"1:test\u003d--test_verbose_timeout_warnings","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_summary\u003ddetailed","optionName":"default_override","optionValue":"1:test\u003d--test_summary\u003ddetailed","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--build_tests_only","optionName":"default_override","optionValue":"1:test\u003d--build_tests_only","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:test\u003d--test_strategy\u003dexclusive","optionName":"default_override","optionValue":"1:test\u003d--test_strategy\u003dexclusive","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:local_build\u003d--define\u003dbuild_environment\u003dlocal","optionName":"default_override","optionValue":"1:build:local_build\u003d--define\u003dbuild_environment\u003dlocal","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prodonly\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:prodonly\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prodonly\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:prodonly\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prodonly\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:prodonly\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--apple_platform_type\u003dmacos","optionName":"default_override","optionValue":"1:build\u003d--apple_platform_type\u003dmacos","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--macos_minimum_os\u003d14.7.4","optionName":"default_override","optionValue":"1:build\u003d--macos_minimum_os\u003d14.7.4","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--cpu\u003ddarwin_arm64","optionName":"default_override","optionValue":"1:build\u003d--cpu\u003ddarwin_arm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--host_cpu\u003ddarwin_arm64","optionName":"default_override","optionValue":"1:build\u003d--host_cpu\u003ddarwin_arm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--platforms\u003d//:macos_arm64","optionName":"default_override","optionValue":"1:build\u003d--platforms\u003d//:macos_arm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--apple_crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"default_override","optionValue":"1:build\u003d--apple_crosstool_top\u003d@local_config_apple_cc//:toolchain","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"default_override","optionValue":"1:build\u003d--crosstool_top\u003d@local_config_apple_cc//:toolchain","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--host_crosstool_top\u003d@local_config_apple_cc//:toolchain","optionName":"default_override","optionValue":"1:build\u003d--host_crosstool_top\u003d@local_config_apple_cc//:toolchain","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.use_global_module_cache","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.use_global_module_cache","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.enable_batch_mode","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.enable_batch_mode","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.enable_concurrency_checking","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.enable_concurrency_checking","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--features\u003dswift.use_global_index_store","optionName":"default_override","optionValue":"1:build\u003d--features\u003dswift.use_global_index_store","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--strategy\u003dSwiftCompile\u003dworker","optionName":"default_override","optionValue":"1:build\u003d--strategy\u003dSwiftCompile\u003dworker","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--worker_max_instances\u003d4","optionName":"default_override","optionValue":"1:build\u003d--worker_max_instances\u003d4","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--cxxopt\u003d-std\u003dc++14","optionName":"default_override","optionValue":"1:build\u003d--cxxopt\u003d-std\u003dc++14","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--action_env\u003dPATH","optionName":"default_override","optionValue":"1:build\u003d--action_env\u003dPATH","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--action_env\u003dCC\u003dclang","optionName":"default_override","optionValue":"1:build\u003d--action_env\u003dCC\u003dclang","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--disk_cache\u003d~/.cache/bazel-disk","optionName":"default_override","optionValue":"1:build\u003d--disk_cache\u003d~/.cache/bazel-disk","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--repository_cache\u003d~/.cache/bazel-repo","optionName":"default_override","optionValue":"1:build\u003d--repository_cache\u003d~/.cache/bazel-repo","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_repository_cache_hardlinks","optionName":"default_override","optionValue":"1:build\u003d--experimental_repository_cache_hardlinks","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--noexperimental_check_output_files","optionName":"default_override","optionValue":"1:build\u003d--noexperimental_check_output_files","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_remote_merkle_tree_cache","optionName":"default_override","optionValue":"1:build\u003d--experimental_remote_merkle_tree_cache","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_reuse_sandbox_directories","optionName":"default_override","optionValue":"1:build\u003d--experimental_reuse_sandbox_directories","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--experimental_merged_skyframe_analysis_execution","optionName":"default_override","optionValue":"1:build\u003d--experimental_merged_skyframe_analysis_execution","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--incompatible_strict_action_env","optionName":"default_override","optionValue":"1:build\u003d--incompatible_strict_action_env","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--remote_local_fallback","optionName":"default_override","optionValue":"1:build\u003d--remote_local_fallback","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--spawn_strategy\u003dlocal,sandboxed","optionName":"default_override","optionValue":"1:build\u003d--spawn_strategy\u003dlocal,sandboxed","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--noincompatible_disallow_empty_glob","optionName":"default_override","optionValue":"1:build\u003d--noincompatible_disallow_empty_glob","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--deleted_packages\u003d.build/checkouts/swift-syntax","optionName":"default_override","optionValue":"1:build\u003d--deleted_packages\u003d.build/checkouts/swift-syntax","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build\u003d--define\u003dbuild_environment\u003dnonlocal","optionName":"default_override","optionValue":"1:build\u003d--define\u003dbuild_environment\u003dnonlocal","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d-c","optionName":"default_override","optionValue":"1:build:debug\u003d-c","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003ddbg","optionName":"default_override","optionValue":"1:build:debug\u003ddbg","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-g","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-g","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-Onone","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-Onone","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-enable-testing","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-enable-testing","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:debug\u003d--swiftcopt\u003d-DDEBUG","optionName":"default_override","optionValue":"1:build:debug\u003d--swiftcopt\u003d-DDEBUG","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--compilation_mode\u003ddbg","optionName":"default_override","optionValue":"1:build:withtests\u003d--compilation_mode\u003ddbg","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--build_tests_only\u003dtrue","optionName":"default_override","optionValue":"1:build:withtests\u003d--build_tests_only\u003dtrue","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--test_output\u003derrors","optionName":"default_override","optionValue":"1:build:withtests\u003d--test_output\u003derrors","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--flaky_test_attempts\u003d3","optionName":"default_override","optionValue":"1:build:withtests\u003d--flaky_test_attempts\u003d3","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:withtests\u003d--keep_going","optionName":"default_override","optionValue":"1:build:withtests\u003d--keep_going","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:ci_tests\u003d--config\u003dwithtests","optionName":"default_override","optionValue":"1:build:ci_tests\u003d--config\u003dwithtests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:ci_tests\u003d--test_tag_filters\u003d-problematic","optionName":"default_override","optionValue":"1:build:ci_tests\u003d--test_tag_filters\u003d-problematic","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:ci_tests\u003d--test_env\u003dBAZEL_TEST_TIMEOUT\u003d300","optionName":"default_override","optionValue":"1:build:ci_tests\u003d--test_env\u003dBAZEL_TEST_TIMEOUT\u003d300","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:docc\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:docc\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:docc\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--define\u003dbuild_environment\u003dci","optionName":"default_override","optionValue":"1:build:docc\u003d--define\u003dbuild_environment\u003dci","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:docc\u003d--output_groups\u003d+docc","optionName":"default_override","optionValue":"1:build:docc\u003d--output_groups\u003d+docc","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:release\u003d-c","optionName":"default_override","optionValue":"1:build:release\u003d-c","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:release\u003dopt","optionName":"default_override","optionValue":"1:build:release\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:release\u003d--workspace_status_command\u003dtools/workspace_status.sh","optionName":"default_override","optionValue":"1:build:release\u003d--workspace_status_command\u003dtools/workspace_status.sh","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:prod\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--target_pattern_file\u003dproduction_targets.txt","optionName":"default_override","optionValue":"1:build:prod\u003d--target_pattern_file\u003dproduction_targets.txt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--compilation_mode\u003dopt","optionName":"default_override","optionValue":"1:build:prod\u003d--compilation_mode\u003dopt","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tests_only\u003dfalse","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tests_only\u003dfalse","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d1:build:prod\u003d--build_tag_filters\u003d-test,-tests","optionName":"default_override","optionValue":"1:build:prod\u003d--build_tag_filters\u003d-test,-tests","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d2:build\u003d--macos_cpus\u003darm64","optionName":"default_override","optionValue":"2:build\u003d--macos_cpus\u003darm64","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--default_override\u003d2:build\u003d--disk_cache\u003d/Users/mpy/.bazel-cache","optionName":"default_override","optionValue":"2:build\u003d--disk_cache\u003d/Users/mpy/.bazel-cache","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--startup_time\u003d699","optionName":"startup_time","optionValue":"699","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--command_wait_time\u003d0","optionName":"command_wait_time","optionValue":"0","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--restart_reason\u003dno_daemon","optionName":"restart_reason","optionValue":"no_daemon","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--binary_path\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin/bazel","optionName":"binary_path","optionValue":"/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin/bazel","effectTags":["AFFECTS_OUTPUTS","BAZEL_MONITORING"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCOMMAND_MODE\u003dunix2003","optionName":"client_env","optionValue":"COMMAND_MODE\u003dunix2003","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_DEFAULT_ENV\u003dbase","optionName":"client_env","optionValue":"CONDA_DEFAULT_ENV\u003dbase","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_EXE\u003d/opt/anaconda3/bin/conda","optionName":"client_env","optionValue":"CONDA_EXE\u003d/opt/anaconda3/bin/conda","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_PREFIX\u003d/opt/anaconda3","optionName":"client_env","optionValue":"CONDA_PREFIX\u003d/opt/anaconda3","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_PROMPT_MODIFIER\u003d(base) ","optionName":"client_env","optionValue":"CONDA_PROMPT_MODIFIER\u003d(base) ","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_PYTHON_EXE\u003d/opt/anaconda3/bin/python","optionName":"client_env","optionValue":"CONDA_PYTHON_EXE\u003d/opt/anaconda3/bin/python","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCONDA_SHLVL\u003d1","optionName":"client_env","optionValue":"CONDA_SHLVL\u003d1","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dEDITOR\u003dnano","optionName":"client_env","optionValue":"EDITOR\u003dnano","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dGSETTINGS_SCHEMA_DIR\u003d/opt/anaconda3/share/glib-2.0/schemas","optionName":"client_env","optionValue":"GSETTINGS_SCHEMA_DIR\u003d/opt/anaconda3/share/glib-2.0/schemas","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOME\u003d/Users/mpy","optionName":"client_env","optionValue":"HOME\u003d/Users/mpy","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOMEBREW_CELLAR\u003d/opt/homebrew/Cellar","optionName":"client_env","optionValue":"HOMEBREW_CELLAR\u003d/opt/homebrew/Cellar","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOMEBREW_PREFIX\u003d/opt/homebrew","optionName":"client_env","optionValue":"HOMEBREW_PREFIX\u003d/opt/homebrew","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dHOMEBREW_REPOSITORY\u003d/opt/homebrew","optionName":"client_env","optionValue":"HOMEBREW_REPOSITORY\u003d/opt/homebrew","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dINFOPATH\u003d/opt/homebrew/share/info:","optionName":"client_env","optionValue":"INFOPATH\u003d/opt/homebrew/share/info:","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLESS\u003d-R","optionName":"client_env","optionValue":"LESS\u003d-R","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLOGNAME\u003dmpy","optionName":"client_env","optionValue":"LOGNAME\u003dmpy","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLSCOLORS\u003dGxfxcxdxbxegedabagacad","optionName":"client_env","optionValue":"LSCOLORS\u003dGxfxcxdxbxegedabagacad","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dLS_COLORS\u003d*.7z\u003d38;5;40:*.WARC\u003d38;5;40:*.a\u003d38;5;40:*.arj\u003d38;5;40:*.bz2\u003d38;5;40:*.cpio\u003d38;5;40:*.gz\u003d38;5;40:*.lrz\u003d38;5;40:*.lz\u003d38;5;40:*.lzma\u003d38;5;40:*.lzo\u003d38;5;40:*.rar\u003d38;5;40:*.s7z\u003d38;5;40:*.sz\u003d38;5;40:*.tar\u003d38;5;40:*.tbz\u003d38;5;40:*.tgz\u003d38;5;40:*.warc\u003d38;5;40:*.xz\u003d38;5;40:*.z\u003d38;5;40:*.zip\u003d38;5;40:*.zipx\u003d38;5;40:*.zoo\u003d38;5;40:*.zpaq\u003d38;5;40:*.zst\u003d38;5;40:*.zstd\u003d38;5;40:*.zz\u003d38;5;40:*@.service\u003d38;5;45:*AUTHORS\u003d38;5;220;1:*CHANGES\u003d38;5;220;1:*CONTRIBUTORS\u003d38;5;220;1:*COPYING\u003d38;5;220;1:*COPYRIGHT\u003d38;5;220;1:*CodeResources\u003d38;5;239:*Dockerfile\u003d38;5;155:*HISTORY\u003d38;5;220;1:*INSTALL\u003d38;5;220;1:*LICENSE\u003d38;5;220;1:*LS_COLORS\u003d48;5;89;38;5;197;1;3;4;7:*MANIFEST\u003d38;5;243:*Makefile\u003d38;5;155:*NOTICE\u003d38;5;220;1:*PATENTS\u003d38;5;220;1:*PkgInfo\u003d38;5;239:*README\u003d38;5;220;1:*README.md\u003d38;5;220;1:*README.rst\u003d38;5;220;1:*VERSION\u003d38;5;220;1:*authorized_keys\u003d1:*cfg\u003d1:*conf\u003d1:*config\u003d1:*core\u003d38;5;241:*id_dsa\u003d38;5;192;3:*id_ecdsa\u003d38;5;192;3:*id_ed25519\u003d38;5;192;3:*id_rsa\u003d38;5;192;3:*known_hosts\u003d1:*lock\u003d38;5;248:*lockfile\u003d38;5;248:*pm_to_blib\u003d38;5;240:*rc\u003d1:*.1p\u003d38;5;7:*.32x\u003d38;5;213:*.3g2\u003d38;5;115:*.3ga\u003d38;5;137;1:*.3gp\u003d38;5;115:*.3p\u003d38;5;7:*.82p\u003d38;5;121:*.83p\u003d38;5;121:*.8eu\u003d38;5;121:*.8xe\u003d38;5;121:*.8xp\u003d38;5;121:*.A64\u003d38;5;213:*.BAT\u003d38;5;172:*.BUP\u003d38;5;241:*.C\u003d38;5;81:*.CFUserTextEncoding\u003d38;5;239:*.DS_Store\u003d38;5;239:*.F\u003d38;5;81:*.F03\u003d38;5;81:*.F08\u003d38;5;81:*.F90\u003d38;5;81:*.F95\u003d38;5;81:*.H\u003d38;5;110:*.IFO\u003d38;5;114:*.JPG\u003d38;5;97:*.M\u003d38;5;110:*.MOV\u003d38;5;114:*.PDF\u003d38;5;141:*.PFA\u003d38;5;66:*.PL\u003d38;5;160:*.R\u003d38;5;49:*.RData\u003d38;5;178:*.Rproj\u003d38;5;11:*.S\u003d38;5;110:*.S3M\u003d38;5;137;1:*.SKIP\u003d38;5;244:*.TIFF\u003d38;5;97:*.VOB\u003d38;5;115;1:*.a00\u003d38;5;213:*.a52\u003d38;5;213:*.a64\u003d38;5;213:*.a78\u003d38;5;213:*.aac\u003d38;5;137;1:*.accdb\u003d38;5;60:*.accde\u003d38;5;60:*.accdr\u003d38;5;60:*.accdt\u003d38;5;60:*.adf\u003d38;5;213:*.adoc\u003d38;5;184:*.afm\u003d38;5;66:*.agda\u003d38;5;81:*.agdai\u003d38;5;110:*.ahk\u003d38;5;41:*.ai\u003d38;5;99:*.aiff\u003d38;5;136;1:*.alac\u003d38;5;136;1:*.allow\u003d38;5;112:*.am\u003d38;5;242:*.amr\u003d38;5;137;1:*.ape\u003d38;5;136;1:*.apk\u003d38;5;215:*.application\u003d38;5;116:*.aria2\u003d38;5;241:*.asc\u003d38;5;192;3:*.asciidoc\u003d38;5;184:*.asf\u003d38;5;115:*.asm\u003d38;5;81:*.ass\u003d38;5;117:*.atr\u003d38;5;213:*.au\u003d38;5;137;1:*.automount\u003d38;5;45:*.avi\u003d38;5;114:*.awk\u003d38;5;172:*.bak\u003d38;5;241:*.bash\u003d38;5;197:*.bash_login\u003d1:*.bash_logout\u003d1:*.bash_profile\u003d1:*.bat\u003d38;5;172:*.bfe\u003d38;5;192;3:*.bib\u003d38;5;178:*.bin\u003d38;5;124:*.bmp\u003d38;5;97:*.bsp\u003d38;5;215:*.c\u003d38;5;81:*.c++\u003d38;5;81:*.cab\u003d38;5;215:*.caf\u003d38;5;137;1:*.cap\u003d38;5;29:*.car\u003d38;5;57:*.cbr\u003d38;5;141:*.cbz\u003d38;5;141:*.cc\u003d38;5;81:*.cda\u003d38;5;136;1:*.cdi\u003d38;5;213:*.cdr\u003d38;5;97:*.chm\u003d38;5;141:*.cl\u003d38;5;81:*.clj\u003d38;5;41:*.cljc\u003d38;5;41:*.cljs\u003d38;5;41:*.cljw\u003d38;5;41:*.cnc\u003d38;5;7:*.coffee\u003d38;5;074;1:*.cp\u003d38;5;81:*.cpp\u003d38;5;81:*.cr\u003d38;5;81:*.crx\u003d38;5;215:*.cs\u003d38;5;81:*.css\u003d38;5;125;1:*.csv\u003d38;5;78:*.ctp\u003d38;5;81:*.cue\u003d38;5;116:*.cxx\u003d38;5;81:*.dart\u003d38;5;51:*.dat\u003d38;5;137;1:*.db\u003d38;5;60:*.deb\u003d38;5;215:*.def\u003d38;5;7:*.deny\u003d38;5;196:*.description\u003d38;5;116:*.device\u003d38;5;45:*.dhall\u003d38;5;178:*.dicom\u003d38;5;97:*.diff\u003d48;5;197;38;5;232:*.directory\u003d38;5;116:*.divx\u003d38;5;114:*.djvu\u003d38;5;141:*.dll\u003d38;5;241:*.dmg\u003d38;5;215:*.dmp\u003d38;5;29:*.doc\u003d38;5;111:*.dockerignore\u003d38;5;240:*.docm\u003d38;5;111;4:*.docx\u003d38;5;111:*.drw\u003d38;5;99:*.dtd\u003d38;5;178:*.dts\u003d38;5;137;1:*.dump\u003d38;5;241:*.dwg\u003d38;5;216:*.dylib\u003d38;5;241:*.ear\u003d38;5;215:*.el\u003d38;5;81:*.elc\u003d38;5;241:*.eln\u003d38;5;241:*.eml\u003d38;5;125;1:*.enc\u003d38;5;192;3:*.entitlements\u003d1:*.epf\u003d1:*.eps\u003d38;5;99:*.epsf\u003d38;5;99:*.epub\u003d38;5;141:*.err\u003d38;5;160;1:*.error\u003d38;5;160;1:*.etx\u003d38;5;184:*.ex\u003d38;5;7:*.example\u003d38;5;7:*.f\u003d38;5;81:*.f03\u003d38;5;81:*.f08\u003d38;5;81:*.f4v\u003d38;5;115:*.f90\u003d38;5;81:*.f95\u003d38;5;81:*.fcm\u003d38;5;137;1:*.feature\u003d38;5;7:*.flac\u003d38;5;136;1:*.flif\u003d38;5;97:*.flv\u003d38;5;115:*.fm2\u003d38;5;213:*.fmp12\u003d38;5;60:*.fnt\u003d38;5;66:*.fon\u003d38;5;66:*.for\u003d38;5;81:*.fp7\u003d38;5;60:*.ftn\u003d38;5;81:*.fvd\u003d38;5;124:*.fxml\u003d38;5;178:*.gb\u003d38;5;213:*.gba\u003d38;5;213:*.gbc\u003d38;5;213:*.gbr\u003d38;5;7:*.gel\u003d38;5;213:*.gemspec\u003d38;5;41:*.ger\u003d38;5;7:*.gg\u003d38;5;213:*.ggl\u003d38;5;213:*.gif\u003d38;5;97:*.git\u003d38;5;197:*.gitattributes\u003d38;5;240:*.gitignore\u003d38;5;240:*.gitmodules\u003d38;5;240:*.go\u003d38;5;81:*.google\u003d38;5;81:*.gp3\u003d38;5;115:*.gp4\u003d38;5;115:*.gpg\u003d38;5;192;3:*.gs\u003d38;5;81:*.h\u003d38;5;110:*.h++\u003d38;5;110:*.hi\u003d38;5;110:*.hidden-color-scheme\u003d1:*.hidden-tmTheme\u003d1:*.hin\u003d38;5;242:*.hpp\u003d38;5;110:*.hs\u003d38;5;81:*.htm\u003d38;5;125;1:*.html\u003d38;5;125;1:*.hxx\u003d38;5;110:*.icns\u003d38;5;97:*.ico\u003d38;5;97:*.ics\u003d38;5;7:*.ii\u003d38;5;110:*.img\u003d38;5;124:*.iml\u003d38;5;166:*.in\u003d38;5;242:*.info\u003d38;5;184:*.ini\u003d1:*.ipa\u003d38;5;215:*.ipk\u003d38;5;213:*.ipynb\u003d38;5;41:*.iso\u003d38;5;124:*.j64\u003d38;5;213:*.jad\u003d38;5;215:*.jar\u003d38;5;215:*.java\u003d38;5;074;1:*.jhtm\u003d38;5;125;1:*.jpeg\u003d38;5;97:*.jpg\u003d38;5;97:*.js\u003d38;5;074;1:*.jsm\u003d38;5;074;1:*.json\u003d38;5;178:*.jsonl\u003d38;5;178:*.jsonnet\u003d38;5;178:*.jsp\u003d38;5;074;1:*.kak\u003d38;5;172:*.key\u003d38;5;166:*.lagda\u003d38;5;81:*.lagda.md\u003d38;5;81:*.lagda.rst\u003d38;5;81:*.lagda.tex\u003d38;5;81:*.last-run\u003d1:*.less\u003d38;5;125;1:*.lhs\u003d38;5;81:*.libsonnet\u003d38;5;142:*.lisp\u003d38;5;81:*.lnk\u003d38;5;39:*.localized\u003d38;5;239:*.localstorage\u003d38;5;60:*.log\u003d38;5;190:*.lua\u003d38;5;81:*.m\u003d38;5;110:*.m2v\u003d38;5;114:*.m3u\u003d38;5;116:*.m3u8\u003d38;5;116:*.m4\u003d38;5;242:*.m4a\u003d38;5;137;1:*.m4v\u003d38;5;114:*.map\u003d38;5;7:*.markdown\u003d38;5;184:*.md\u003d38;5;184:*.md5\u003d38;5;116:*.mdb\u003d38;5;60:*.mde\u003d38;5;60:*.mdump\u003d38;5;241:*.merged-ca-bundle\u003d1:*.mf\u003d38;5;7:*.mfasl\u003d38;5;7:*.mht\u003d38;5;125;1:*.mi\u003d38;5;7:*.mid\u003d38;5;136;1:*.midi\u003d38;5;136;1:*.mjs\u003d38;5;074;1:*.mkd\u003d38;5;184:*.mkv\u003d38;5;114:*.mm\u003d38;5;7:*.mobi\u003d38;5;141:*.mod\u003d38;5;137;1:*.moon\u003d38;5;81:*.mount\u003d38;5;45:*.mov\u003d38;5;114:*.mp3\u003d38;5;137;1:*.mp4\u003d38;5;114:*.mp4a\u003d38;5;137;1:*.mpeg\u003d38;5;114:*.mpg\u003d38;5;114:*.msg\u003d38;5;178:*.msql\u003d38;5;222:*.mtx\u003d38;5;7:*.mustache\u003d38;5;125;1:*.mysql\u003d38;5;222:*.nc\u003d38;5;60:*.ndjson\u003d38;5;178:*.nds\u003d38;5;213:*.nes\u003d38;5;213:*.nfo\u003d38;5;184:*.nib\u003d38;5;57:*.nim\u003d38;5;81:*.nimble\u003d38;5;81:*.nix\u003d38;5;155:*.nrg\u003d38;5;124:*.nth\u003d38;5;97:*.numbers\u003d38;5;112:*.o\u003d38;5;241:*.odb\u003d38;5;111:*.odp\u003d38;5;166:*.ods\u003d38;5;112:*.odt\u003d38;5;111:*.oga\u003d38;5;137;1:*.ogg\u003d38;5;137;1:*.ogm\u003d38;5;114:*.ogv\u003d38;5;115:*.old\u003d38;5;242:*.opus\u003d38;5;137;1:*.org\u003d38;5;184:*.orig\u003d38;5;241:*.otf\u003d38;5;66:*.out\u003d38;5;242:*.p12\u003d38;5;192;3:*.p7s\u003d38;5;192;3:*.pacnew\u003d38;5;33:*.pages\u003d38;5;111:*.pak\u003d38;5;215:*.part\u003d38;5;239:*.patch\u003d48;5;197;38;5;232;1:*.path\u003d38;5;45:*.pbxproj\u003d1:*.pc\u003d38;5;7:*.pcap\u003d38;5;29:*.pcb\u003d38;5;7:*.pcf\u003d1:*.pcm\u003d38;5;136;1:*.pdf\u003d38;5;141:*.pem\u003d38;5;192;3:*.pfa\u003d38;5;66:*.pfb\u003d38;5;66:*.pfm\u003d38;5;66:*.pgn\u003d38;5;178:*.pgp\u003d38;5;192;3:*.pgsql\u003d38;5;222:*.php\u003d38;5;81:*.pi\u003d38;5;7:*.pid\u003d38;5;248:*.pk3\u003d38;5;215:*.pl\u003d38;5;208:*.plist\u003d1:*.plt\u003d38;5;7:*.ply\u003d38;5;216:*.pm\u003d38;5;203:*.png\u003d38;5;97:*.pod\u003d38;5;184:*.pot\u003d38;5;7:*.pps\u003d38;5;166:*.ppt\u003d38;5;166:*.ppts\u003d38;5;166:*.pptsm\u003d38;5;166;4:*.pptx\u003d38;5;166:*.pptxm\u003d38;5;166;4:*.profile\u003d1:*.properties\u003d38;5;116:*.ps\u003d38;5;99:*.psd\u003d38;5;97:*.psf\u003d1:*.pxd\u003d38;5;97:*.pxm\u003d38;5;97:*.py\u003d38;5;41:*.pyc\u003d38;5;240:*.qcow\u003d38;5;124:*.r\u003d38;5;49:*.r[0-9]{0,2}\u003d38;5;239:*.rake\u003d38;5;155:*.rb\u003d38;5;41:*.rdata\u003d38;5;178:*.rdf\u003d38;5;7:*.rkt\u003d38;5;81:*.rlib\u003d38;5;241:*.rmvb\u003d38;5;114:*.rnc\u003d38;5;178:*.rng\u003d38;5;178:*.rom\u003d38;5;213:*.rpm\u003d38;5;215:*.rs\u003d38;5;81:*.rss\u003d38;5;178:*.rst\u003d38;5;184:*.rstheme\u003d1:*.rtf\u003d38;5;111:*.ru\u003d38;5;7:*.s\u003d38;5;110:*.s3m\u003d38;5;137;1:*.sample\u003d38;5;114:*.sass\u003d38;5;125;1:*.sassc\u003d38;5;244:*.sav\u003d38;5;213:*.sc\u003d38;5;41:*.scala\u003d38;5;41:*.scan\u003d38;5;242:*.sch\u003d38;5;7:*.scm\u003d38;5;7:*.scpt\u003d38;5;219:*.scss\u003d38;5;125;1:*.sed\u003d38;5;172:*.service\u003d38;5;45:*.sfv\u003d38;5;116:*.sgml\u003d38;5;178:*.sh\u003d38;5;197:*.sid\u003d38;5;137;1:*.sig\u003d38;5;192;3:*.signature\u003d38;5;192;3:*.sis\u003d38;5;7:*.sms\u003d38;5;213:*.snapshot\u003d38;5;45:*.socket\u003d38;5;45:*.sparseimage\u003d38;5;124:*.spl\u003d38;5;7:*.sql\u003d38;5;222:*.sqlite\u003d38;5;60:*.srt\u003d38;5;117:*.ssa\u003d38;5;117:*.st\u003d38;5;213:*.stackdump\u003d38;5;241:*.state\u003d38;5;248:*.stderr\u003d38;5;160;1:*.stl\u003d38;5;216:*.storyboard\u003d38;5;196:*.strings\u003d1:*.sty\u003d38;5;7:*.sub\u003d38;5;117:*.sublime-build\u003d1:*.sublime-commands\u003d1:*.sublime-keymap\u003d1:*.sublime-project\u003d1:*.sublime-settings\u003d1:*.sublime-snippet\u003d1:*.sublime-workspace\u003d1:*.sug\u003d38;5;7:*.sup\u003d38;5;117:*.svg\u003d38;5;99:*.swap\u003d38;5;45:*.swift\u003d38;5;219:*.swo\u003d38;5;244:*.swp\u003d38;5;244:*.sx\u003d38;5;81:*.t\u003d38;5;114:*.target\u003d38;5;45:*.tcc\u003d38;5;110:*.tcl\u003d38;5;64;1:*.tdy\u003d38;5;7:*.tex\u003d38;5;184:*.textile\u003d38;5;184:*.tf\u003d38;5;168:*.tfm\u003d38;5;7:*.tfnt\u003d38;5;7:*.tfstate\u003d38;5;168:*.tfvars\u003d38;5;168:*.tg\u003d38;5;7:*.theme\u003d38;5;116:*.tif\u003d38;5;97:*.tiff\u003d38;5;97:*.timer\u003d38;5;45:*.tmTheme\u003d1:*.tmp\u003d38;5;244:*.toast\u003d38;5;124:*.toml\u003d38;5;178:*.torrent\u003d38;5;116:*.ts\u003d38;5;115:*.tsv\u003d38;5;78:*.ttf\u003d38;5;66:*.twig\u003d38;5;81:*.txt\u003d38;5;253:*.typelib\u003d38;5;60:*.un~\u003d38;5;241:*.urlview\u003d38;5;116:*.user-ca-bundle\u003d1:*.v\u003d38;5;81:*.vala\u003d38;5;81:*.vapi\u003d38;5;81:*.vb\u003d38;5;81:*.vba\u003d38;5;81:*.vbs\u003d38;5;81:*.vcard\u003d38;5;7:*.vcd\u003d38;5;124:*.vcf\u003d38;5;7:*.vdf\u003d38;5;215:*.vdi\u003d38;5;124:*.vfd\u003d38;5;124:*.vhd\u003d38;5;124:*.vhdx\u003d38;5;124:*.vim\u003d38;5;172:*.viminfo\u003d1:*.vmdk\u003d38;5;124:*.vob\u003d38;5;115;1:*.vpk\u003d38;5;215:*.vtt\u003d38;5;117:*.war\u003d38;5;215:*.wav\u003d38;5;136;1:*.webloc\u003d38;5;116:*.webm\u003d38;5;115:*.webp\u003d38;5;97:*.wma\u003d38;5;137;1:*.wmv\u003d38;5;114:*.woff\u003d38;5;66:*.woff2\u003d38;5;66:*.wrl\u003d38;5;216:*.wv\u003d38;5;136;1:*.wvc\u003d38;5;136;1:*.xcconfig\u003d1:*.xcf\u003d38;5;7:*.xcsettings\u003d1:*.xcuserstate\u003d1:*.xcworkspacedata\u003d1:*.xib\u003d38;5;208:*.xla\u003d38;5;76:*.xln\u003d38;5;7:*.xls\u003d38;5;112:*.xlsx\u003d38;5;112:*.xlsxm\u003d38;5;112;4:*.xltm\u003d38;5;73;4:*.xltx\u003d38;5;73:*.xml\u003d38;5;178:*.xpi\u003d38;5;215:*.xpm\u003d38;5;97:*.xsd\u003d38;5;178:*.xsh\u003d38;5;41:*.yaml\u003d38;5;178:*.yml\u003d38;5;178:*.z[0-9]{0,2}\u003d38;5;239:*.zcompdump\u003d38;5;241:*.zig\u003d38;5;81:*.zlogin\u003d1:*.zlogout\u003d1:*.zprofile\u003d1:*.zsh\u003d38;5;197:*.zshenv\u003d1:*.zwc\u003d38;5;241:*.zx[0-9]{0,2}\u003d38;5;239:bd\u003d38;5;68:ca\u003d38;5;17:cd\u003d38;5;113;1:di\u003d38;5;172:do\u003d38;5;127:ex\u003d38;5;208;1:pi\u003d38;5;126:fi\u003d0:ln\u003dtarget:mh\u003d38;5;222;1:no\u003d0:or\u003d48;5;196;38;5;232;1:ow\u003d38;5;220;1:sg\u003d48;5;3;38;5;0:su\u003d38;5;220;1;3;100;1:so\u003d38;5;197:st\u003d38;5;86;48;5;234:tw\u003d48;5;235;38;5;139;3:","optionName":"client_env","optionValue":"LS_COLORS\u003d*.7z\u003d38;5;40:*.WARC\u003d38;5;40:*.a\u003d38;5;40:*.arj\u003d38;5;40:*.bz2\u003d38;5;40:*.cpio\u003d38;5;40:*.gz\u003d38;5;40:*.lrz\u003d38;5;40:*.lz\u003d38;5;40:*.lzma\u003d38;5;40:*.lzo\u003d38;5;40:*.rar\u003d38;5;40:*.s7z\u003d38;5;40:*.sz\u003d38;5;40:*.tar\u003d38;5;40:*.tbz\u003d38;5;40:*.tgz\u003d38;5;40:*.warc\u003d38;5;40:*.xz\u003d38;5;40:*.z\u003d38;5;40:*.zip\u003d38;5;40:*.zipx\u003d38;5;40:*.zoo\u003d38;5;40:*.zpaq\u003d38;5;40:*.zst\u003d38;5;40:*.zstd\u003d38;5;40:*.zz\u003d38;5;40:*@.service\u003d38;5;45:*AUTHORS\u003d38;5;220;1:*CHANGES\u003d38;5;220;1:*CONTRIBUTORS\u003d38;5;220;1:*COPYING\u003d38;5;220;1:*COPYRIGHT\u003d38;5;220;1:*CodeResources\u003d38;5;239:*Dockerfile\u003d38;5;155:*HISTORY\u003d38;5;220;1:*INSTALL\u003d38;5;220;1:*LICENSE\u003d38;5;220;1:*LS_COLORS\u003d48;5;89;38;5;197;1;3;4;7:*MANIFEST\u003d38;5;243:*Makefile\u003d38;5;155:*NOTICE\u003d38;5;220;1:*PATENTS\u003d38;5;220;1:*PkgInfo\u003d38;5;239:*README\u003d38;5;220;1:*README.md\u003d38;5;220;1:*README.rst\u003d38;5;220;1:*VERSION\u003d38;5;220;1:*authorized_keys\u003d1:*cfg\u003d1:*conf\u003d1:*config\u003d1:*core\u003d38;5;241:*id_dsa\u003d38;5;192;3:*id_ecdsa\u003d38;5;192;3:*id_ed25519\u003d38;5;192;3:*id_rsa\u003d38;5;192;3:*known_hosts\u003d1:*lock\u003d38;5;248:*lockfile\u003d38;5;248:*pm_to_blib\u003d38;5;240:*rc\u003d1:*.1p\u003d38;5;7:*.32x\u003d38;5;213:*.3g2\u003d38;5;115:*.3ga\u003d38;5;137;1:*.3gp\u003d38;5;115:*.3p\u003d38;5;7:*.82p\u003d38;5;121:*.83p\u003d38;5;121:*.8eu\u003d38;5;121:*.8xe\u003d38;5;121:*.8xp\u003d38;5;121:*.A64\u003d38;5;213:*.BAT\u003d38;5;172:*.BUP\u003d38;5;241:*.C\u003d38;5;81:*.CFUserTextEncoding\u003d38;5;239:*.DS_Store\u003d38;5;239:*.F\u003d38;5;81:*.F03\u003d38;5;81:*.F08\u003d38;5;81:*.F90\u003d38;5;81:*.F95\u003d38;5;81:*.H\u003d38;5;110:*.IFO\u003d38;5;114:*.JPG\u003d38;5;97:*.M\u003d38;5;110:*.MOV\u003d38;5;114:*.PDF\u003d38;5;141:*.PFA\u003d38;5;66:*.PL\u003d38;5;160:*.R\u003d38;5;49:*.RData\u003d38;5;178:*.Rproj\u003d38;5;11:*.S\u003d38;5;110:*.S3M\u003d38;5;137;1:*.SKIP\u003d38;5;244:*.TIFF\u003d38;5;97:*.VOB\u003d38;5;115;1:*.a00\u003d38;5;213:*.a52\u003d38;5;213:*.a64\u003d38;5;213:*.a78\u003d38;5;213:*.aac\u003d38;5;137;1:*.accdb\u003d38;5;60:*.accde\u003d38;5;60:*.accdr\u003d38;5;60:*.accdt\u003d38;5;60:*.adf\u003d38;5;213:*.adoc\u003d38;5;184:*.afm\u003d38;5;66:*.agda\u003d38;5;81:*.agdai\u003d38;5;110:*.ahk\u003d38;5;41:*.ai\u003d38;5;99:*.aiff\u003d38;5;136;1:*.alac\u003d38;5;136;1:*.allow\u003d38;5;112:*.am\u003d38;5;242:*.amr\u003d38;5;137;1:*.ape\u003d38;5;136;1:*.apk\u003d38;5;215:*.application\u003d38;5;116:*.aria2\u003d38;5;241:*.asc\u003d38;5;192;3:*.asciidoc\u003d38;5;184:*.asf\u003d38;5;115:*.asm\u003d38;5;81:*.ass\u003d38;5;117:*.atr\u003d38;5;213:*.au\u003d38;5;137;1:*.automount\u003d38;5;45:*.avi\u003d38;5;114:*.awk\u003d38;5;172:*.bak\u003d38;5;241:*.bash\u003d38;5;197:*.bash_login\u003d1:*.bash_logout\u003d1:*.bash_profile\u003d1:*.bat\u003d38;5;172:*.bfe\u003d38;5;192;3:*.bib\u003d38;5;178:*.bin\u003d38;5;124:*.bmp\u003d38;5;97:*.bsp\u003d38;5;215:*.c\u003d38;5;81:*.c++\u003d38;5;81:*.cab\u003d38;5;215:*.caf\u003d38;5;137;1:*.cap\u003d38;5;29:*.car\u003d38;5;57:*.cbr\u003d38;5;141:*.cbz\u003d38;5;141:*.cc\u003d38;5;81:*.cda\u003d38;5;136;1:*.cdi\u003d38;5;213:*.cdr\u003d38;5;97:*.chm\u003d38;5;141:*.cl\u003d38;5;81:*.clj\u003d38;5;41:*.cljc\u003d38;5;41:*.cljs\u003d38;5;41:*.cljw\u003d38;5;41:*.cnc\u003d38;5;7:*.coffee\u003d38;5;074;1:*.cp\u003d38;5;81:*.cpp\u003d38;5;81:*.cr\u003d38;5;81:*.crx\u003d38;5;215:*.cs\u003d38;5;81:*.css\u003d38;5;125;1:*.csv\u003d38;5;78:*.ctp\u003d38;5;81:*.cue\u003d38;5;116:*.cxx\u003d38;5;81:*.dart\u003d38;5;51:*.dat\u003d38;5;137;1:*.db\u003d38;5;60:*.deb\u003d38;5;215:*.def\u003d38;5;7:*.deny\u003d38;5;196:*.description\u003d38;5;116:*.device\u003d38;5;45:*.dhall\u003d38;5;178:*.dicom\u003d38;5;97:*.diff\u003d48;5;197;38;5;232:*.directory\u003d38;5;116:*.divx\u003d38;5;114:*.djvu\u003d38;5;141:*.dll\u003d38;5;241:*.dmg\u003d38;5;215:*.dmp\u003d38;5;29:*.doc\u003d38;5;111:*.dockerignore\u003d38;5;240:*.docm\u003d38;5;111;4:*.docx\u003d38;5;111:*.drw\u003d38;5;99:*.dtd\u003d38;5;178:*.dts\u003d38;5;137;1:*.dump\u003d38;5;241:*.dwg\u003d38;5;216:*.dylib\u003d38;5;241:*.ear\u003d38;5;215:*.el\u003d38;5;81:*.elc\u003d38;5;241:*.eln\u003d38;5;241:*.eml\u003d38;5;125;1:*.enc\u003d38;5;192;3:*.entitlements\u003d1:*.epf\u003d1:*.eps\u003d38;5;99:*.epsf\u003d38;5;99:*.epub\u003d38;5;141:*.err\u003d38;5;160;1:*.error\u003d38;5;160;1:*.etx\u003d38;5;184:*.ex\u003d38;5;7:*.example\u003d38;5;7:*.f\u003d38;5;81:*.f03\u003d38;5;81:*.f08\u003d38;5;81:*.f4v\u003d38;5;115:*.f90\u003d38;5;81:*.f95\u003d38;5;81:*.fcm\u003d38;5;137;1:*.feature\u003d38;5;7:*.flac\u003d38;5;136;1:*.flif\u003d38;5;97:*.flv\u003d38;5;115:*.fm2\u003d38;5;213:*.fmp12\u003d38;5;60:*.fnt\u003d38;5;66:*.fon\u003d38;5;66:*.for\u003d38;5;81:*.fp7\u003d38;5;60:*.ftn\u003d38;5;81:*.fvd\u003d38;5;124:*.fxml\u003d38;5;178:*.gb\u003d38;5;213:*.gba\u003d38;5;213:*.gbc\u003d38;5;213:*.gbr\u003d38;5;7:*.gel\u003d38;5;213:*.gemspec\u003d38;5;41:*.ger\u003d38;5;7:*.gg\u003d38;5;213:*.ggl\u003d38;5;213:*.gif\u003d38;5;97:*.git\u003d38;5;197:*.gitattributes\u003d38;5;240:*.gitignore\u003d38;5;240:*.gitmodules\u003d38;5;240:*.go\u003d38;5;81:*.google\u003d38;5;81:*.gp3\u003d38;5;115:*.gp4\u003d38;5;115:*.gpg\u003d38;5;192;3:*.gs\u003d38;5;81:*.h\u003d38;5;110:*.h++\u003d38;5;110:*.hi\u003d38;5;110:*.hidden-color-scheme\u003d1:*.hidden-tmTheme\u003d1:*.hin\u003d38;5;242:*.hpp\u003d38;5;110:*.hs\u003d38;5;81:*.htm\u003d38;5;125;1:*.html\u003d38;5;125;1:*.hxx\u003d38;5;110:*.icns\u003d38;5;97:*.ico\u003d38;5;97:*.ics\u003d38;5;7:*.ii\u003d38;5;110:*.img\u003d38;5;124:*.iml\u003d38;5;166:*.in\u003d38;5;242:*.info\u003d38;5;184:*.ini\u003d1:*.ipa\u003d38;5;215:*.ipk\u003d38;5;213:*.ipynb\u003d38;5;41:*.iso\u003d38;5;124:*.j64\u003d38;5;213:*.jad\u003d38;5;215:*.jar\u003d38;5;215:*.java\u003d38;5;074;1:*.jhtm\u003d38;5;125;1:*.jpeg\u003d38;5;97:*.jpg\u003d38;5;97:*.js\u003d38;5;074;1:*.jsm\u003d38;5;074;1:*.json\u003d38;5;178:*.jsonl\u003d38;5;178:*.jsonnet\u003d38;5;178:*.jsp\u003d38;5;074;1:*.kak\u003d38;5;172:*.key\u003d38;5;166:*.lagda\u003d38;5;81:*.lagda.md\u003d38;5;81:*.lagda.rst\u003d38;5;81:*.lagda.tex\u003d38;5;81:*.last-run\u003d1:*.less\u003d38;5;125;1:*.lhs\u003d38;5;81:*.libsonnet\u003d38;5;142:*.lisp\u003d38;5;81:*.lnk\u003d38;5;39:*.localized\u003d38;5;239:*.localstorage\u003d38;5;60:*.log\u003d38;5;190:*.lua\u003d38;5;81:*.m\u003d38;5;110:*.m2v\u003d38;5;114:*.m3u\u003d38;5;116:*.m3u8\u003d38;5;116:*.m4\u003d38;5;242:*.m4a\u003d38;5;137;1:*.m4v\u003d38;5;114:*.map\u003d38;5;7:*.markdown\u003d38;5;184:*.md\u003d38;5;184:*.md5\u003d38;5;116:*.mdb\u003d38;5;60:*.mde\u003d38;5;60:*.mdump\u003d38;5;241:*.merged-ca-bundle\u003d1:*.mf\u003d38;5;7:*.mfasl\u003d38;5;7:*.mht\u003d38;5;125;1:*.mi\u003d38;5;7:*.mid\u003d38;5;136;1:*.midi\u003d38;5;136;1:*.mjs\u003d38;5;074;1:*.mkd\u003d38;5;184:*.mkv\u003d38;5;114:*.mm\u003d38;5;7:*.mobi\u003d38;5;141:*.mod\u003d38;5;137;1:*.moon\u003d38;5;81:*.mount\u003d38;5;45:*.mov\u003d38;5;114:*.mp3\u003d38;5;137;1:*.mp4\u003d38;5;114:*.mp4a\u003d38;5;137;1:*.mpeg\u003d38;5;114:*.mpg\u003d38;5;114:*.msg\u003d38;5;178:*.msql\u003d38;5;222:*.mtx\u003d38;5;7:*.mustache\u003d38;5;125;1:*.mysql\u003d38;5;222:*.nc\u003d38;5;60:*.ndjson\u003d38;5;178:*.nds\u003d38;5;213:*.nes\u003d38;5;213:*.nfo\u003d38;5;184:*.nib\u003d38;5;57:*.nim\u003d38;5;81:*.nimble\u003d38;5;81:*.nix\u003d38;5;155:*.nrg\u003d38;5;124:*.nth\u003d38;5;97:*.numbers\u003d38;5;112:*.o\u003d38;5;241:*.odb\u003d38;5;111:*.odp\u003d38;5;166:*.ods\u003d38;5;112:*.odt\u003d38;5;111:*.oga\u003d38;5;137;1:*.ogg\u003d38;5;137;1:*.ogm\u003d38;5;114:*.ogv\u003d38;5;115:*.old\u003d38;5;242:*.opus\u003d38;5;137;1:*.org\u003d38;5;184:*.orig\u003d38;5;241:*.otf\u003d38;5;66:*.out\u003d38;5;242:*.p12\u003d38;5;192;3:*.p7s\u003d38;5;192;3:*.pacnew\u003d38;5;33:*.pages\u003d38;5;111:*.pak\u003d38;5;215:*.part\u003d38;5;239:*.patch\u003d48;5;197;38;5;232;1:*.path\u003d38;5;45:*.pbxproj\u003d1:*.pc\u003d38;5;7:*.pcap\u003d38;5;29:*.pcb\u003d38;5;7:*.pcf\u003d1:*.pcm\u003d38;5;136;1:*.pdf\u003d38;5;141:*.pem\u003d38;5;192;3:*.pfa\u003d38;5;66:*.pfb\u003d38;5;66:*.pfm\u003d38;5;66:*.pgn\u003d38;5;178:*.pgp\u003d38;5;192;3:*.pgsql\u003d38;5;222:*.php\u003d38;5;81:*.pi\u003d38;5;7:*.pid\u003d38;5;248:*.pk3\u003d38;5;215:*.pl\u003d38;5;208:*.plist\u003d1:*.plt\u003d38;5;7:*.ply\u003d38;5;216:*.pm\u003d38;5;203:*.png\u003d38;5;97:*.pod\u003d38;5;184:*.pot\u003d38;5;7:*.pps\u003d38;5;166:*.ppt\u003d38;5;166:*.ppts\u003d38;5;166:*.pptsm\u003d38;5;166;4:*.pptx\u003d38;5;166:*.pptxm\u003d38;5;166;4:*.profile\u003d1:*.properties\u003d38;5;116:*.ps\u003d38;5;99:*.psd\u003d38;5;97:*.psf\u003d1:*.pxd\u003d38;5;97:*.pxm\u003d38;5;97:*.py\u003d38;5;41:*.pyc\u003d38;5;240:*.qcow\u003d38;5;124:*.r\u003d38;5;49:*.r[0-9]{0,2}\u003d38;5;239:*.rake\u003d38;5;155:*.rb\u003d38;5;41:*.rdata\u003d38;5;178:*.rdf\u003d38;5;7:*.rkt\u003d38;5;81:*.rlib\u003d38;5;241:*.rmvb\u003d38;5;114:*.rnc\u003d38;5;178:*.rng\u003d38;5;178:*.rom\u003d38;5;213:*.rpm\u003d38;5;215:*.rs\u003d38;5;81:*.rss\u003d38;5;178:*.rst\u003d38;5;184:*.rstheme\u003d1:*.rtf\u003d38;5;111:*.ru\u003d38;5;7:*.s\u003d38;5;110:*.s3m\u003d38;5;137;1:*.sample\u003d38;5;114:*.sass\u003d38;5;125;1:*.sassc\u003d38;5;244:*.sav\u003d38;5;213:*.sc\u003d38;5;41:*.scala\u003d38;5;41:*.scan\u003d38;5;242:*.sch\u003d38;5;7:*.scm\u003d38;5;7:*.scpt\u003d38;5;219:*.scss\u003d38;5;125;1:*.sed\u003d38;5;172:*.service\u003d38;5;45:*.sfv\u003d38;5;116:*.sgml\u003d38;5;178:*.sh\u003d38;5;197:*.sid\u003d38;5;137;1:*.sig\u003d38;5;192;3:*.signature\u003d38;5;192;3:*.sis\u003d38;5;7:*.sms\u003d38;5;213:*.snapshot\u003d38;5;45:*.socket\u003d38;5;45:*.sparseimage\u003d38;5;124:*.spl\u003d38;5;7:*.sql\u003d38;5;222:*.sqlite\u003d38;5;60:*.srt\u003d38;5;117:*.ssa\u003d38;5;117:*.st\u003d38;5;213:*.stackdump\u003d38;5;241:*.state\u003d38;5;248:*.stderr\u003d38;5;160;1:*.stl\u003d38;5;216:*.storyboard\u003d38;5;196:*.strings\u003d1:*.sty\u003d38;5;7:*.sub\u003d38;5;117:*.sublime-build\u003d1:*.sublime-commands\u003d1:*.sublime-keymap\u003d1:*.sublime-project\u003d1:*.sublime-settings\u003d1:*.sublime-snippet\u003d1:*.sublime-workspace\u003d1:*.sug\u003d38;5;7:*.sup\u003d38;5;117:*.svg\u003d38;5;99:*.swap\u003d38;5;45:*.swift\u003d38;5;219:*.swo\u003d38;5;244:*.swp\u003d38;5;244:*.sx\u003d38;5;81:*.t\u003d38;5;114:*.target\u003d38;5;45:*.tcc\u003d38;5;110:*.tcl\u003d38;5;64;1:*.tdy\u003d38;5;7:*.tex\u003d38;5;184:*.textile\u003d38;5;184:*.tf\u003d38;5;168:*.tfm\u003d38;5;7:*.tfnt\u003d38;5;7:*.tfstate\u003d38;5;168:*.tfvars\u003d38;5;168:*.tg\u003d38;5;7:*.theme\u003d38;5;116:*.tif\u003d38;5;97:*.tiff\u003d38;5;97:*.timer\u003d38;5;45:*.tmTheme\u003d1:*.tmp\u003d38;5;244:*.toast\u003d38;5;124:*.toml\u003d38;5;178:*.torrent\u003d38;5;116:*.ts\u003d38;5;115:*.tsv\u003d38;5;78:*.ttf\u003d38;5;66:*.twig\u003d38;5;81:*.txt\u003d38;5;253:*.typelib\u003d38;5;60:*.un~\u003d38;5;241:*.urlview\u003d38;5;116:*.user-ca-bundle\u003d1:*.v\u003d38;5;81:*.vala\u003d38;5;81:*.vapi\u003d38;5;81:*.vb\u003d38;5;81:*.vba\u003d38;5;81:*.vbs\u003d38;5;81:*.vcard\u003d38;5;7:*.vcd\u003d38;5;124:*.vcf\u003d38;5;7:*.vdf\u003d38;5;215:*.vdi\u003d38;5;124:*.vfd\u003d38;5;124:*.vhd\u003d38;5;124:*.vhdx\u003d38;5;124:*.vim\u003d38;5;172:*.viminfo\u003d1:*.vmdk\u003d38;5;124:*.vob\u003d38;5;115;1:*.vpk\u003d38;5;215:*.vtt\u003d38;5;117:*.war\u003d38;5;215:*.wav\u003d38;5;136;1:*.webloc\u003d38;5;116:*.webm\u003d38;5;115:*.webp\u003d38;5;97:*.wma\u003d38;5;137;1:*.wmv\u003d38;5;114:*.woff\u003d38;5;66:*.woff2\u003d38;5;66:*.wrl\u003d38;5;216:*.wv\u003d38;5;136;1:*.wvc\u003d38;5;136;1:*.xcconfig\u003d1:*.xcf\u003d38;5;7:*.xcsettings\u003d1:*.xcuserstate\u003d1:*.xcworkspacedata\u003d1:*.xib\u003d38;5;208:*.xla\u003d38;5;76:*.xln\u003d38;5;7:*.xls\u003d38;5;112:*.xlsx\u003d38;5;112:*.xlsxm\u003d38;5;112;4:*.xltm\u003d38;5;73;4:*.xltx\u003d38;5;73:*.xml\u003d38;5;178:*.xpi\u003d38;5;215:*.xpm\u003d38;5;97:*.xsd\u003d38;5;178:*.xsh\u003d38;5;41:*.yaml\u003d38;5;178:*.yml\u003d38;5;178:*.z[0-9]{0,2}\u003d38;5;239:*.zcompdump\u003d38;5;241:*.zig\u003d38;5;81:*.zlogin\u003d1:*.zlogout\u003d1:*.zprofile\u003d1:*.zsh\u003d38;5;197:*.zshenv\u003d1:*.zwc\u003d38;5;241:*.zx[0-9]{0,2}\u003d38;5;239:bd\u003d38;5;68:ca\u003d38;5;17:cd\u003d38;5;113;1:di\u003d38;5;172:do\u003d38;5;127:ex\u003d38;5;208;1:pi\u003d38;5;126:fi\u003d0:ln\u003dtarget:mh\u003d38;5;222;1:no\u003d0:or\u003d48;5;196;38;5;232;1:ow\u003d38;5;220;1:sg\u003d48;5;3;38;5;0:su\u003d38;5;220;1;3;100;1:so\u003d38;5;197:st\u003d38;5;86;48;5;234:tw\u003d48;5;235;38;5;139;3:","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dMallocNanoZone\u003d0","optionName":"client_env","optionValue":"MallocNanoZone\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dOLDPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","optionName":"client_env","optionValue":"OLDPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dORIGINAL_XDG_CURRENT_DESKTOP\u003dundefined","optionName":"client_env","optionValue":"ORIGINAL_XDG_CURRENT_DESKTOP\u003dundefined","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dP9K_SSH\u003d0","optionName":"client_env","optionValue":"P9K_SSH\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dPAGER\u003dless","optionName":"client_env","optionValue":"PAGER\u003dless","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dPATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin","optionName":"client_env","optionValue":"PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dSHELL\u003d/bin/zsh","optionName":"client_env","optionValue":"SHELL\u003d/bin/zsh","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dSHLVL\u003d0","optionName":"client_env","optionValue":"SHLVL\u003d0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dSSH_AUTH_SOCK\u003d/private/tmp/com.apple.launchd.sOYLbmRVbB/Listeners","optionName":"client_env","optionValue":"SSH_AUTH_SOCK\u003d/private/tmp/com.apple.launchd.sOYLbmRVbB/Listeners","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dTMPDIR\u003d/var/folders/ph/xlyxx8513l72lj5r4vvy5s7h0000gn/T/","optionName":"client_env","optionValue":"TMPDIR\u003d/var/folders/ph/xlyxx8513l72lj5r4vvy5s7h0000gn/T/","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dUSER\u003dmpy","optionName":"client_env","optionValue":"USER\u003dmpy","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_AMD_ENTRYPOINT\u003dvs/workbench/api/node/extensionHostProcess","optionName":"client_env","optionValue":"VSCODE_AMD_ENTRYPOINT\u003dvs/workbench/api/node/extensionHostProcess","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_CODE_CACHE_PATH\u003d/Users/mpy/Library/Application Support/Windsurf/CachedData/b3241b91445f79878ccc91626dfe190f90563e53","optionName":"client_env","optionValue":"VSCODE_CODE_CACHE_PATH\u003d/Users/mpy/Library/Application Support/Windsurf/CachedData/b3241b91445f79878ccc91626dfe190f90563e53","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_CRASH_REPORTER_PROCESS_TYPE\u003dextensionHost","optionName":"client_env","optionValue":"VSCODE_CRASH_REPORTER_PROCESS_TYPE\u003dextensionHost","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_CWD\u003d/","optionName":"client_env","optionValue":"VSCODE_CWD\u003d/","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_HANDLES_UNCAUGHT_ERRORS\u003dtrue","optionName":"client_env","optionValue":"VSCODE_HANDLES_UNCAUGHT_ERRORS\u003dtrue","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_IPC_HOOK\u003d/Users/mpy/Library/Application Support/Windsurf/1.94-main.sock","optionName":"client_env","optionValue":"VSCODE_IPC_HOOK\u003d/Users/mpy/Library/Application Support/Windsurf/1.94-main.sock","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_NLS_CONFIG\u003d{\"userLocale\":\"en-gb\",\"osLocale\":\"en-gb\",\"resolvedLanguage\":\"en\",\"defaultMessagesFile\":\"/Applications/Windsurf.app/Contents/Resources/app/out/nls.messages.json\",\"locale\":\"en-gb\",\"availableLanguages\":{}}","optionName":"client_env","optionValue":"VSCODE_NLS_CONFIG\u003d{\"userLocale\":\"en-gb\",\"osLocale\":\"en-gb\",\"resolvedLanguage\":\"en\",\"defaultMessagesFile\":\"/Applications/Windsurf.app/Contents/Resources/app/out/nls.messages.json\",\"locale\":\"en-gb\",\"availableLanguages\":{}}","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dVSCODE_PID\u003d13823","optionName":"client_env","optionValue":"VSCODE_PID\u003d13823","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dXPC_FLAGS\u003d0x0","optionName":"client_env","optionValue":"XPC_FLAGS\u003d0x0","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dXPC_SERVICE_NAME\u003dapplication.com.exafunction.windsurf.93286061.93286067","optionName":"client_env","optionValue":"XPC_SERVICE_NAME\u003dapplication.com.exafunction.windsurf.93286061.93286067","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dZSH\u003d/Users/mpy/.oh-my-zsh","optionName":"client_env","optionValue":"ZSH\u003d/Users/mpy/.oh-my-zsh","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003d__CFBundleIdentifier\u003dcom.exafunction.windsurf","optionName":"client_env","optionValue":"__CFBundleIdentifier\u003dcom.exafunction.windsurf","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003d__CF_USER_TEXT_ENCODING\u003d0x1F5:0:2","optionName":"client_env","optionValue":"__CF_USER_TEXT_ENCODING\u003d0x1F5:0:2","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dELECTRON_RUN_AS_NODE\u003d1","optionName":"client_env","optionValue":"ELECTRON_RUN_AS_NODE\u003d1","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dCODEIUM_EDITOR_APP_ROOT\u003d/Applications/Windsurf.app/Contents/Resources/app","optionName":"client_env","optionValue":"CODEIUM_EDITOR_APP_ROOT\u003d/Applications/Windsurf.app/Contents/Resources/app","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dPWD\u003d/Users/mpy/CascadeProjects/UmbraCore","optionName":"client_env","optionValue":"PWD\u003d/Users/mpy/CascadeProjects/UmbraCore","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003d_\u003d/opt/homebrew/bin/bazelisk","optionName":"client_env","optionValue":"_\u003d/opt/homebrew/bin/bazelisk","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_env\u003dBAZELISK_SKIP_WRAPPER\u003dtrue","optionName":"client_env","optionValue":"BAZELISK_SKIP_WRAPPER\u003dtrue","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"--client_cwd\u003d/Users/mpy/CascadeProjects/UmbraCore","optionName":"client_cwd","optionValue":"/Users/mpy/CascadeProjects/UmbraCore","effectTags":["CHANGES_INPUTS"],"metadataTags":["HIDDEN"]},{"combinedForm":"-k","optionName":"keep_going","optionValue":"1","effectTags":["EAGERNESS_TO_EXIT"]},{"combinedForm":"--verbose_failures","optionName":"verbose_failures","optionValue":"1","effectTags":["TERMINAL_OUTPUT"]},{"combinedForm":"--build_event_json_file\u003dbuild_output.json","optionName":"build_event_json_file","optionValue":"build_output.json","effectTags":["AFFECTS_OUTPUTS"]}]}},{"sectionLabel":"residual","chunkList":{"chunk":["//Sources/..."]}}]}}
{"id":{"structuredCommandLine":{"commandLineLabel":"tool"}},"structuredCommandLine":{}}
{"id":{"pattern":{"pattern":["//Sources/..."]}},"children":[{"targetConfigured":{"label":"//Sources/API:API"}},{"targetConfigured":{"label":"//Sources/Autocomplete/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Autocomplete:Autocomplete"}},{"targetConfigured":{"label":"//Sources/BackupCoordinator:BackupCoordinator"}},{"targetConfigured":{"label":"//Sources/Config/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Config:Config"}},{"targetConfigured":{"label":"//Sources/Configuration:Configuration"}},{"targetConfigured":{"label":"//Sources/Core/Extensions:Extensions"}},{"targetConfigured":{"label":"//Sources/Core/Services/Types:CoreServicesTypes"}},{"targetConfigured":{"label":"//Sources/Core/Services/Types:CoreServicesTypesNoFoundation"}},{"targetConfigured":{"label":"//Sources/Core/Services/Types:Types"}},{"targetConfigured":{"label":"//Sources/Core/Services:Services"}},{"targetConfigured":{"label":"//Sources/Core/UmbraCore:UmbraCore"}},{"targetConfigured":{"label":"//Sources/Core:Core"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Documentation.docc:CoreDTOsDocumentation"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Configuration:Configuration"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Converters:Converters"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/DateTime:DateTime"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/FileSystem:FileSystem"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Network:Network"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Notification:Notification"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Operations:Operations"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Progress:Progress"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/RepositoryManagement:RepositoryManagement"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Scheduling:Scheduling"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Security:Security"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/UserDefaults:UserDefaults"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources:CoreDTOs"}},{"targetConfigured":{"label":"//Sources/CoreDTOs/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/CoreDTOs:CoreDTOs"}},{"targetConfigured":{"label":"//Sources/CoreErrors/Tests:CoreErrorsTests"}},{"targetConfigured":{"label":"//Sources/CoreErrors:CoreErrors"}},{"targetConfigured":{"label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation"}},{"targetConfigured":{"label":"//Sources/CoreTypesImplementation/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/CoreTypesInterfaces/Sources:CoreTypesInterfacesSources"}},{"targetConfigured":{"label":"//Sources/CoreTypesInterfaces/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/CoreTypesInterfaces:CoreTypesInterfaces"}},{"targetConfigured":{"label":"//Sources/CryptoServiceProtocol:CryptoServiceProtocol"}},{"targetConfigured":{"label":"//Sources/CryptoSwiftFoundationIndependent:CryptoSwiftFoundationIndependent"}},{"targetConfigured":{"label":"//Sources/CryptoTypes/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/CryptoTypes/Services:Services"}},{"targetConfigured":{"label":"//Sources/CryptoTypes/Types:Types"}},{"targetConfigured":{"label":"//Sources/CryptoTypes:CryptoTypes"}},{"targetConfigured":{"label":"//Sources/CryptoTypes:CryptoTypesInterfaces"}},{"targetConfigured":{"label":"//Sources/DateTimeService/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Common:Common"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Core:Core"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Domains:Domains"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Examples:Examples"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Extensions:Extensions"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Interfaces:Interfaces"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Logging:Logging"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Mapping:Mapping"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Models:Models"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/ModuleInfo:ModuleInfo"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Notification:Notification"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Recovery:Recovery"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Types:Types"}},{"targetConfigured":{"label":"//Sources/ErrorHandling/Utilities:Utilities"}},{"targetConfigured":{"label":"//Sources/ErrorHandling:ErrorHandling"}},{"targetConfigured":{"label":"//Sources/ErrorHandlingCommon:ErrorHandlingCommon"}},{"targetConfigured":{"label":"//Sources/ErrorHandlingDomains:ErrorHandlingDomains"}},{"targetConfigured":{"label":"//Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces"}},{"targetConfigured":{"label":"//Sources/ErrorHandlingModels:ErrorHandlingModels"}},{"targetConfigured":{"label":"//Sources/ErrorTypes:ErrorTypes"}},{"targetConfigured":{"label":"//Sources/Features/Crypto/Models:Models"}},{"targetConfigured":{"label":"//Sources/Features/Crypto/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Features/Logging/Errors:Errors"}},{"targetConfigured":{"label":"//Sources/Features/Logging/Models:Models"}},{"targetConfigured":{"label":"//Sources/Features/Logging/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Features/Logging/Services:Services"}},{"targetConfigured":{"label":"//Sources/Features/Logging:Logging"}},{"targetConfigured":{"label":"//Sources/Features:Features"}},{"targetConfigured":{"label":"//Sources/FileSystemService/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes"}},{"targetConfigured":{"label":"//Sources/KeyManagementTypes/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/KeyManagementTypes:KeyManagementTypes"}},{"targetConfigured":{"label":"//Sources/KeyManagementTypes:KeyManagementTypesTests"}},{"targetConfigured":{"label":"//Sources/LoggingWrapper:LoggingWrapper"}},{"targetConfigured":{"label":"//Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces"}},{"targetConfigured":{"label":"//Sources/NetworkService/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/NotificationService/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/ObjCBridgingTypes:ObjCBridgingTypes"}},{"targetConfigured":{"label":"//Sources/ObjCBridgingTypesFoundation:ObjCBridgingTypesFoundation"}},{"targetConfigured":{"label":"//Sources/Repositories/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Repositories/Types:Types"}},{"targetConfigured":{"label":"//Sources/Repositories:Repositories"}},{"targetConfigured":{"label":"//Sources/RepositoryManager:RepositoryManager"}},{"targetConfigured":{"label":"//Sources/Resources/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Resources/Types:Types"}},{"targetConfigured":{"label":"//Sources/Resources:Resources"}},{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Commands:Commands"}},{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples"}},{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Models:Models"}},{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Types:Types"}},{"targetConfigured":{"label":"//Sources/ResticCLIHelper:ResticCLIHelper"}},{"targetConfigured":{"label":"//Sources/ResticTypes:ResticTypes"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/Base:Adapters"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/DTO:DTOAdapters"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/Foundation:FoundationBridge"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/Protocol:ProtocolAdapters"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/XPC:XPCBridge"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Base"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Core"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:DTO"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Foundation"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Protocol"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:SecurityBridge"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:XPC"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Core/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Core/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Core:Adapters"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Core:Core"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Core:Protocols"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Foundation:Foundation"}},{"targetConfigured":{"label":"//Sources/Security/Adapters/Protocol:Protocol"}},{"targetConfigured":{"label":"//Sources/Security/Core/Errors:Errors"}},{"targetConfigured":{"label":"//Sources/Security/Core/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Security/Core/Types/Bridge:Bridge"}},{"targetConfigured":{"label":"//Sources/Security/Core/Types:Types"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/Crypto:Crypto"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Core:Core"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices:CryptoServices"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/KeyManagement:KeyManagement"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/Provider:Provider"}},{"targetConfigured":{"label":"//Sources/Security/Implementation/Utils:Utils"}},{"targetConfigured":{"label":"//Sources/Security/Implementation:Implementation"}},{"targetConfigured":{"label":"//Sources/Security/Utils:Utils"}},{"targetConfigured":{"label":"//Sources/Security:Security"}},{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/SecurityInterfaces/DTOs:DTOs"}},{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc"}},{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Implementations:Implementations"}},{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Models:Models"}},{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Refactoring:Refactoring"}},{"targetConfigured":{"label":"//Sources/SecurityInterfaces:SecurityInterfaces"}},{"targetConfigured":{"label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase"}},{"targetConfigured":{"label":"//Sources/SecurityInterfacesFoundation:SecurityInterfacesFoundation"}},{"targetConfigured":{"label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols"}},{"targetConfigured":{"label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC"}},{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc"}},{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs"}},{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources/Types:Types"}},{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources:SecurityProtocolsCore"}},{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore:SecurityProtocolsCore"}},{"targetConfigured":{"label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters"}},{"targetConfigured":{"label":"//Sources/SecurityTypes/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/SecurityTypes/Types:Types"}},{"targetConfigured":{"label":"//Sources/SecurityTypes:SecurityTypes"}},{"targetConfigured":{"label":"//Sources/SecurityUtils/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/SecurityUtils:SecurityUtils"}},{"targetConfigured":{"label":"//Sources/ServiceTypes:ServiceTypes"}},{"targetConfigured":{"label":"//Sources/Services/CredentialManager:CredentialManager"}},{"targetConfigured":{"label":"//Sources/Services/CryptoService:CryptoService"}},{"targetConfigured":{"label":"//Sources/Services/SecurityUtils/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Services/SecurityUtils/Services:Services"}},{"targetConfigured":{"label":"//Sources/Services/SecurityUtils:SecurityUtils"}},{"targetConfigured":{"label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter"}},{"targetConfigured":{"label":"//Sources/Services:Services"}},{"targetConfigured":{"label":"//Sources/Snapshots/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/Snapshots:Snapshots"}},{"targetConfigured":{"label":"//Sources/TestUtils:TestUtils"}},{"targetConfigured":{"label":"//Sources/Testing:Testing"}},{"targetConfigured":{"label":"//Sources/TestingMacros:TestingMacros"}},{"targetConfigured":{"label":"//Sources/UmbraBookmarkService:UmbraBookmarkService"}},{"targetConfigured":{"label":"//Sources/UmbraCore/UmbraCore.docc:UmbraCoreDocc"}},{"targetConfigured":{"label":"//Sources/UmbraCore:UmbraCore"}},{"targetConfigured":{"label":"//Sources/UmbraCoreTests:UmbraCoreTests"}},{"targetConfigured":{"label":"//Sources/UmbraCoreTypes/Sources:UmbraCoreTypes"}},{"targetConfigured":{"label":"//Sources/UmbraCoreTypes/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/UmbraCoreTypes:UmbraCoreTypes"}},{"targetConfigured":{"label":"//Sources/UmbraCrypto:UmbraCrypto"}},{"targetConfigured":{"label":"//Sources/UmbraCryptoService/Resources:Resources"}},{"targetConfigured":{"label":"//Sources/UmbraCryptoService:UmbraCryptoService"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/Core:UmbraErrorsCore"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/DTOs:DTOs"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/DTOs:UmbraErrorsDTOs"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/Domains:Domains"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/Domains:UmbraErrorsDomains"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/Mapping:Mapping"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/UmbraErrors/Utilities:Utilities"}},{"targetConfigured":{"label":"//Sources/UmbraErrors:UmbraErrors"}},{"targetConfigured":{"label":"//Sources/UmbraKeychainService:UmbraKeychainService"}},{"targetConfigured":{"label":"//Sources/UmbraLogging:UmbraLogging"}},{"targetConfigured":{"label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters"}},{"targetConfigured":{"label":"//Sources/UmbraMocks:UmbraMocks"}},{"targetConfigured":{"label":"//Sources/UmbraSecurity/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/UmbraSecurity/Extensions:Extensions"}},{"targetConfigured":{"label":"//Sources/UmbraSecurity/Services:Services"}},{"targetConfigured":{"label":"//Sources/UmbraSecurity:UmbraSecurity"}},{"targetConfigured":{"label":"//Sources/UmbraSecurityBridge/Sources:UmbraSecurityBridge"}},{"targetConfigured":{"label":"//Sources/UmbraSecurityBridge:UmbraSecurityBridge"}},{"targetConfigured":{"label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations"}},{"targetConfigured":{"label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore"}},{"targetConfigured":{"label":"//Sources/UmbraSecurityCore/Tests:Tests"}},{"targetConfigured":{"label":"//Sources/UserDefaultsService/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Documentation:Documentation"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources/Adapters:Adapters"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources/Modern:Modern"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources/Protocols:Protocols"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources:XPCProtocolsCoreSources"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Tests:TestsLib"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Tests:XPCProtocolsCoreTests"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCore"}},{"targetConfigured":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCoreTests"}}],"expanded":{}}
{"id":{"progress":{}},"children":[{"progress":{"opaqueCount":1}},{"workspace":{}}],"progress":{"stderr":"INFO: Invocation ID: 8180378b-fa89-42c9-a155-3395a034f08e\nComputing main repo mapping: \nLoading: \nLoading: 0 packages loaded\nAnalyzing: 215 targets (199 packages loaded)\n"}}
{"id":{"workspace":{}},"workspaceInfo":{"localExecRoot":"/Users/mpy/.bazel/execroot/_main"}}
{"id":{"progress":{"opaqueCount":1}},"children":[{"progress":{"opaqueCount":2}},{"configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}],"progress":{}}
{"id":{"configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}},"configuration":{"mnemonic":"darwin_arm64-fastbuild","platformName":"darwin_arm64","cpu":"darwin_arm64","makeVariable":{"COMPILATION_MODE":"fastbuild","TARGET_CPU":"darwin_arm64","GENDIR":"bazel-out/darwin_arm64-fastbuild/bin","BINDIR":"bazel-out/darwin_arm64-fastbuild/bin","build_environment":"nonlocal"}}}
{"id":{"workspaceStatus":{}},"workspaceStatus":{"item":[{"key":"BUILD_EMBED_LABEL"},{"key":"BUILD_HOST","value":"mpy-dev-m2mbp.local"},{"key":"BUILD_TIMESTAMP","value":"1742942840"},{"key":"BUILD_USER","value":"mpy"},{"key":"FORMATTED_DATE","value":"2025 Mar 25 22 47 20 Tue"}]}}
{"id":{"progress":{"opaqueCount":2}},"children":[{"progress":{"opaqueCount":3}},{"configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}],"progress":{"stderr":"Analyzing: 215 targets (202 packages loaded, 7 targets configured)\nAnalyzing: 215 targets (202 packages loaded, 7 targets configured)\n\n"}}
{"id":{"configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}},"configuration":{"mnemonic":"darwin_arm64-fastbuild","platformName":"darwin_arm64","cpu":"darwin_arm64","makeVariable":{"COMPILATION_MODE":"fastbuild","TARGET_CPU":"darwin_arm64","GENDIR":"bazel-out/darwin_arm64-fastbuild/bin","BINDIR":"bazel-out/darwin_arm64-fastbuild/bin","build_environment":"nonlocal"}}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Core:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Core:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/Crypto:Crypto"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/Crypto:Crypto","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCoreTests"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCoreTests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Protocol"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Base"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Base","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Foundation:Foundation"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Foundation:Foundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/Utilities:Utilities"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/Utilities:Utilities","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Core:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Core:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:XPC"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:XPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Foundation"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Foundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:DTO"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:DTO","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"filegroup rule"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Core:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/Utilities:Utilities","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Core:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Foundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Base","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Foundation:Foundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:XPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCoreTests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/Crypto:Crypto","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:DTO","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true}}
{"id":{"targetConfigured":{"label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes"}},"children":[{"targetCompleted":{"label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features/Crypto/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Features/Crypto/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandlingDomains:ErrorHandlingDomains"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandlingDomains:ErrorHandlingDomains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features/Logging/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Features/Logging/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features:Features"}},"children":[{"targetCompleted":{"label":"//Sources/Features:Features","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/KeyManagementTypes:KeyManagementTypes"}},"children":[{"targetCompleted":{"label":"//Sources/KeyManagementTypes:KeyManagementTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCrypto:UmbraCrypto"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCrypto:UmbraCrypto","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Autocomplete/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Autocomplete/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/ModuleInfo:ModuleInfo"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/ModuleInfo:ModuleInfo","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Autocomplete:Autocomplete"}},"children":[{"targetCompleted":{"label":"//Sources/Autocomplete:Autocomplete","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ObjCBridgingTypes:ObjCBridgingTypes"}},"children":[{"targetCompleted":{"label":"//Sources/ObjCBridgingTypes:ObjCBridgingTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/BackupCoordinator:BackupCoordinator"}},"children":[{"targetCompleted":{"label":"//Sources/BackupCoordinator:BackupCoordinator","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Config:Config"}},"children":[{"targetCompleted":{"label":"//Sources/Config:Config","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Services:Services"}},"children":[{"targetCompleted":{"label":"//Sources/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Repositories/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Repositories/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityTypes/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityTypes/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Resources:Resources"}},"children":[{"targetCompleted":{"label":"//Sources/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Config/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Config/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/RepositoryManager:RepositoryManager"}},"children":[{"targetCompleted":{"label":"//Sources/RepositoryManager:RepositoryManager","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features/Crypto/Models:Models"}},"children":[{"targetCompleted":{"label":"//Sources/Features/Crypto/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityUtils/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfaces/DTOs:DTOs"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfaces/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Testing:Testing"}},"children":[{"targetCompleted":{"label":"//Sources/Testing:Testing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Models:Models"}},"children":[{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCore:UmbraCore"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/NotificationService/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/NotificationService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Core/Extensions:Extensions"}},"children":[{"targetCompleted":{"label":"//Sources/Core/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCryptoService/Resources:Resources"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCryptoService/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Repositories:Repositories"}},"children":[{"targetCompleted":{"label":"//Sources/Repositories:Repositories","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Services/CredentialManager:CredentialManager"}},"children":[{"targetCompleted":{"label":"//Sources/Services/CredentialManager:CredentialManager","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCoreTests:UmbraCoreTests"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCoreTests:UmbraCoreTests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Configuration:Configuration"}},"children":[{"targetCompleted":{"label":"//Sources/Configuration:Configuration","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Services/SecurityUtils:SecurityUtils"}},"children":[{"targetCompleted":{"label":"//Sources/Services/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfacesFoundation:SecurityInterfacesFoundation"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfacesFoundation:SecurityInterfacesFoundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/KeyManagementTypes/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/KeyManagementTypes/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features/Logging/Models:Models"}},"children":[{"targetCompleted":{"label":"//Sources/Features/Logging/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/TestUtils:TestUtils"}},"children":[{"targetCompleted":{"label":"//Sources/TestUtils:TestUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Extensions:Extensions"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/TestingMacros:TestingMacros"}},"children":[{"targetCompleted":{"label":"//Sources/TestingMacros:TestingMacros","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Resources/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/Resources/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ResticCLIHelper:ResticCLIHelper"}},"children":[{"targetCompleted":{"label":"//Sources/ResticCLIHelper:ResticCLIHelper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ResticTypes:ResticTypes"}},"children":[{"targetCompleted":{"label":"//Sources/ResticTypes:ResticTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Core/Services/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/Core/Services/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreTypesInterfaces:CoreTypesInterfaces"}},"children":[{"targetCompleted":{"label":"//Sources/CoreTypesInterfaces:CoreTypesInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityTypes:SecurityTypes"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityTypes:SecurityTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreTypesInterfaces/Sources:CoreTypesInterfacesSources"}},"children":[{"targetCompleted":{"label":"//Sources/CoreTypesInterfaces/Sources:CoreTypesInterfacesSources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/KeyManagementTypes:KeyManagementTypesTests"}},"children":[{"targetCompleted":{"label":"//Sources/KeyManagementTypes:KeyManagementTypesTests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCryptoService:UmbraCryptoService"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCryptoService:UmbraCryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCore/UmbraCore.docc:UmbraCoreDocc"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCore/UmbraCore.docc:UmbraCoreDocc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Snapshots/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Snapshots/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CryptoSwiftFoundationIndependent:CryptoSwiftFoundationIndependent"}},"children":[{"targetCompleted":{"label":"//Sources/CryptoSwiftFoundationIndependent:CryptoSwiftFoundationIndependent","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples"}},"children":[{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Models:Models"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features/Logging/Errors:Errors"}},"children":[{"targetCompleted":{"label":"//Sources/Features/Logging/Errors:Errors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CryptoTypes:CryptoTypesInterfaces"}},"children":[{"targetCompleted":{"label":"//Sources/CryptoTypes:CryptoTypesInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Services/CryptoService:CryptoService"}},"children":[{"targetCompleted":{"label":"//Sources/Services/CryptoService:CryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Snapshots:Snapshots"}},"children":[{"targetCompleted":{"label":"//Sources/Snapshots:Snapshots","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features/Logging:Logging"}},"children":[{"targetCompleted":{"label":"//Sources/Features/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Refactoring:Refactoring"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Refactoring:Refactoring","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Core/Services/Types:CoreServicesTypes"}},"children":[{"targetCompleted":{"label":"//Sources/Core/Services/Types:CoreServicesTypes","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"alias rule"}}
{"id":{"targetConfigured":{"label":"//Sources/LoggingWrapper:LoggingWrapper"}},"children":[{"targetCompleted":{"label":"//Sources/LoggingWrapper:LoggingWrapper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces"}},"children":[{"targetCompleted":{"label":"//Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CryptoTypes:CryptoTypes"}},"children":[{"targetCompleted":{"label":"//Sources/CryptoTypes:CryptoTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorTypes:ErrorTypes"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorTypes:ErrorTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandlingModels:ErrorHandlingModels"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandlingModels:ErrorHandlingModels","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CryptoTypes/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/CryptoTypes/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Utilities:Utilities"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Utilities:Utilities","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityTypes/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraBookmarkService:UmbraBookmarkService"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraBookmarkService:UmbraBookmarkService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Resources/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Resources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/Mapping:Mapping"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCoreTypes/Sources:UmbraCoreTypes"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCoreTypes/Sources:UmbraCoreTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:Core"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources/Modern:Modern"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources/Modern:Modern","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Logging:Logging"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCoreTypes:UmbraCoreTypes"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCoreTypes:UmbraCoreTypes","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"alias rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandlingCommon:ErrorHandlingCommon"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandlingCommon:ErrorHandlingCommon","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/UserDefaults:UserDefaults"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/UserDefaults:UserDefaults","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Examples:Examples"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CryptoServiceProtocol:CryptoServiceProtocol"}},"children":[{"targetCompleted":{"label":"//Sources/CryptoServiceProtocol:CryptoServiceProtocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Progress:Progress"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Progress:Progress","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UserDefaultsService/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/UserDefaultsService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Services/SecurityUtils/Services:Services"}},"children":[{"targetCompleted":{"label":"//Sources/Services/SecurityUtils/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/DateTimeService/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/DateTimeService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Features/Logging/Services:Services"}},"children":[{"targetCompleted":{"label":"//Sources/Features/Logging/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurity/Extensions:Extensions"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurity/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Services/SecurityUtils/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Services/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/FileSystemService/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/FileSystemService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Documentation.docc:CoreDTOsDocumentation"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Documentation.docc:CoreDTOsDocumentation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ServiceTypes:ServiceTypes"}},"children":[{"targetCompleted":{"label":"//Sources/ServiceTypes:ServiceTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore:SecurityProtocolsCore"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore:SecurityProtocolsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/NetworkService/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/NetworkService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/DTOs:DTOs"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraLogging:UmbraLogging"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraLogging:UmbraLogging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Core:Core"}},"children":[{"targetCompleted":{"label":"//Sources/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Recovery:Recovery"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurity:UmbraSecurity"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurity:UmbraSecurity","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Notification:Notification"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Notification:Notification","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors:UmbraErrors"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors:UmbraErrors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Notification:Notification"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Notification:Notification","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Scheduling:Scheduling"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Scheduling:Scheduling","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling:ErrorHandling"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling:ErrorHandling","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/DTOs:UmbraErrorsDTOs"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/DTOs:UmbraErrorsDTOs","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"alias rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"swift_test rule","testSize":"MEDIUM"}}
{"id":{"targetConfigured":{"label":"//Sources/ResticCLIHelper/Commands:Commands"}},"children":[{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Commands:Commands","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurityBridge:UmbraSecurityBridge"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurityBridge:UmbraSecurityBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfaces:SecurityInterfaces"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfaces:SecurityInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Utils:Utils"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Utils:Utils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreTypesInterfaces/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/CoreTypesInterfaces/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraMocks:UmbraMocks"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraMocks:UmbraMocks","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Core/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Core/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Repositories/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/Repositories/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurity/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurity/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ObjCBridgingTypesFoundation:ObjCBridgingTypesFoundation"}},"children":[{"targetCompleted":{"label":"//Sources/ObjCBridgingTypesFoundation:ObjCBridgingTypesFoundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources:SecurityProtocolsCore"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources:SecurityProtocolsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/Provider:Provider"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/Provider:Provider","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Core/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Core/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Common:Common"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Common:Common","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Tests:TestsLib"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Tests:TestsLib","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/Core:UmbraErrorsCore"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/Core:UmbraErrorsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices:CryptoServices"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices:CryptoServices","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/Base:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/Base:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Core/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Core/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Interfaces:Interfaces"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Interfaces:Interfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/Utils:Utils"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/Utils:Utils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CryptoTypes/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/CryptoTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter"}},"children":[{"targetCompleted":{"label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Core:Core"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs:CoreDTOs"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs:CoreDTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Security:Security"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Security:Security","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityUtils:SecurityUtils"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Implementations:Implementations"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurityCore/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurityCore/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurity/Services:Services"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurity/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/Foundation:FoundationBridge"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/Foundation:FoundationBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security:Security"}},"children":[{"targetCompleted":{"label":"//Sources/Security:Security","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfaces/Adapters:Adapters"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/Protocol:ProtocolAdapters"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/Protocol:ProtocolAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Types:Types"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/Domains:Domains"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/DateTime:DateTime"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/DateTime:DateTime","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/Domains:UmbraErrorsDomains"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/Domains:UmbraErrorsDomains","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"alias rule"}}
{"id":{"targetConfigured":{"label":"//Sources/API:API"}},"children":[{"targetCompleted":{"label":"//Sources/API:API","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Domains:Domains"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Core/Errors:Errors"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Core/Errors:Errors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraKeychainService:UmbraKeychainService"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraKeychainService:UmbraKeychainService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Mapping:Mapping"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Converters:Converters"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Converters:Converters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources:CoreDTOs"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources:CoreDTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraSecurityBridge/Sources:UmbraSecurityBridge"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraSecurityBridge/Sources:UmbraSecurityBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/RepositoryManagement:RepositoryManagement"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/RepositoryManagement:RepositoryManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Core:Core"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCore"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CryptoTypes/Services:Services"}},"children":[{"targetCompleted":{"label":"//Sources/CryptoTypes/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Core/Services/Types:CoreServicesTypesNoFoundation"}},"children":[{"targetCompleted":{"label":"//Sources/Core/Services/Types:CoreServicesTypesNoFoundation","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"alias rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Core/Services:Services"}},"children":[{"targetCompleted":{"label":"//Sources/Core/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Documentation:Documentation"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Documentation:Documentation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/ErrorHandling/Models:Models"}},"children":[{"targetCompleted":{"label":"//Sources/ErrorHandling/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreErrors:CoreErrors"}},"children":[{"targetCompleted":{"label":"//Sources/CoreErrors:CoreErrors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation:Implementation"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation:Implementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/FileSystem:FileSystem"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/FileSystem:FileSystem","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Configuration:Configuration"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Configuration:Configuration","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/XPC:XPCBridge"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/XPC:XPCBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraErrors/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraErrors/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Core/Types/Bridge:Bridge"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Core/Types/Bridge:Bridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Network:Network"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Network:Network","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge:SecurityBridge"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:SecurityBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Bridge/DTO:DTOAdapters"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/DTO:DTOAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreDTOs/Sources/Operations:Operations"}},"children":[{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Operations:Operations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreTypesImplementation/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/CoreTypesImplementation/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Core/Protocols:Protocols"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Core/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Sources:XPCProtocolsCoreSources"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources:XPCProtocolsCoreSources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation"}},"children":[{"targetCompleted":{"label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Core:Core"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Core/UmbraCore:UmbraCore"}},"children":[{"targetCompleted":{"label":"//Sources/Core/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/UmbraCoreTypes/Tests:Tests"}},"children":[{"targetCompleted":{"label":"//Sources/UmbraCoreTypes/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"swift_test rule","testSize":"MEDIUM"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Adapters/Protocol:Protocol"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Adapters/Protocol:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/Security/Implementation/KeyManagement:KeyManagement"}},"children":[{"targetCompleted":{"label":"//Sources/Security/Implementation/KeyManagement:KeyManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/CoreErrors/Tests:CoreErrorsTests"}},"children":[{"targetCompleted":{"label":"//Sources/CoreErrors/Tests:CoreErrorsTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"swift_test rule","testSize":"MEDIUM"}}
{"id":{"targetConfigured":{"label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols"}},"children":[{"targetCompleted":{"label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"configured":{"targetKind":"swift_library rule"}}
{"id":{"targetConfigured":{"label":"//Sources/XPCProtocolsCore/Tests:XPCProtocolsCoreTests"}},"children":[{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Tests:XPCProtocolsCoreTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"configured":{"targetKind":"swift_test rule","testSize":"MEDIUM"}}
{"id":{"progress":{"opaqueCount":3}},"children":[{"progress":{"opaqueCount":4}},{"namedSet":{"id":"0"}}],"progress":{"stderr":"Analyzing: 215 targets (286 packages loaded, 3276 targets configured)\n[1 / 1] no actions running\nAnalyzing: 215 targets (287 packages loaded, 3282 targets configured)\n[1 / 1] no actions running\nAnalyzing: 215 targets (290 packages loaded, 3575 targets configured)\n[1 / 1] no actions running\nAnalyzing: 215 targets (298 packages loaded, 3927 targets configured)\n[17 / 69] Writing file Sources/ErrorHandlingDomains/ErrorHandlingDomains.output_file_map.json; 0s local ... (2 actions, 1 running)\nINFO: Analyzed 215 targets (298 packages loaded, 3928 targets configured).\n"}}
{"id":{"progress":{"opaqueCount":4}},"children":[{"progress":{"opaqueCount":5}},{"namedSet":{"id":"5"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":5}},"children":[{"progress":{"opaqueCount":6}},{"namedSet":{"id":"1"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":7}},"children":[{"progress":{"opaqueCount":8}},{"namedSet":{"id":"4"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":9}},"children":[{"progress":{"opaqueCount":10}},{"namedSet":{"id":"3"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":8}},"children":[{"progress":{"opaqueCount":9}},{"namedSet":{"id":"6"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":6}},"children":[{"progress":{"opaqueCount":7}},{"namedSet":{"id":"2"}}],"progress":{}}
{"id":{"namedSet":{"id":"6"}},"namedSetOfFiles":{"files":[{"name":"Sources/Features/Crypto/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9aef5893b453681fbe974ec03dcc88ede41b6b7327e4617a3a697cb96317a277","length":"1820"},{"name":"Sources/Features/Crypto/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2ae5620cdb538980e0925f150f3aa53cae63d7bf9ad6161ca29891a0ae56a7e6","length":"18380"},{"name":"Sources/Features/Crypto/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"41c3d3de15a6b175f5d67425d03711a7a0a965bc011b2df976607ef1bee7b8f1","length":"2104"},{"name":"Sources/Features/Crypto/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cdbe977189ff8cd8307f2a70f7808eb828d1bf10ddc5ff7aeba45b15a7b11605","length":"8880"}]}}
{"id":{"namedSet":{"id":"0"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraCrypto/UmbraCrypto.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCrypto/UmbraCrypto.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"baca665e4e2a9ff673586b75b37d56dafce80a3559edeeaf070fad0aabff1a5d","length":"416"},{"name":"Sources/UmbraCrypto/UmbraCrypto.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCrypto/UmbraCrypto.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"827884f52431517da77568d2c9d16e7148ef9ec7d00c9163c34b639d028f3d87","length":"17376"},{"name":"Sources/UmbraCrypto/UmbraCrypto.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCrypto/UmbraCrypto.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1d9b98c7f30419c815948407d1b3f42ee7e7431f892b5a5bd9c877bd01e539ea","length":"936"},{"name":"Sources/UmbraCrypto/libUmbraCrypto.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCrypto/libUmbraCrypto.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"bf8d749ab75962e2c3f4d3264e4a43062a56b74b9f1a04f2e53b9213c1ed18bd","length":"5528"}]}}
{"id":{"namedSet":{"id":"2"}},"namedSetOfFiles":{"files":[{"name":"Sources/BackupCoordinator/BackupCoordinator.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/BackupCoordinator/BackupCoordinator.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"55cc2960cf1978c89b5b36e69906a5a45ea493ead591942eda15cb4129d79f27","length":"1052"},{"name":"Sources/BackupCoordinator/BackupCoordinator.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/BackupCoordinator/BackupCoordinator.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9afb2b42e467254613ba875a9824028448ef33f48d311ad39c06f603bde0eac5","length":"18120"},{"name":"Sources/BackupCoordinator/BackupCoordinator.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/BackupCoordinator/BackupCoordinator.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7a25996b5eeaeb039968c50369dbd691138b5d4734f94a8c05815c8a0b7a63d4","length":"1288"},{"name":"Sources/BackupCoordinator/libBackupCoordinator.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/BackupCoordinator/libBackupCoordinator.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3a72f56bec9cf2b1eb9062484c8a6d7647d5fbd33a8b890533a16b5d38e46fef","length":"13728"}]}}
{"id":{"namedSet":{"id":"4"}},"namedSetOfFiles":{"files":[{"name":"Sources/Features/Features.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Features.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e9ac7089207de55227baaf628c63740bb82cb142fbb587fec6389c204fcd0023","length":"3208"},{"name":"Sources/Features/Features.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Features.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e345017054147d95a30ee1395db1a4f937681506e8160a775efa9dc47dc606fb","length":"17960"},{"name":"Sources/Features/Features.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Features.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cc32010fa7317271d4095c3e55f758605ace462950b015b97a66fab422e7e0dc","length":"4044"},{"name":"Sources/Features/libFeatures.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/libFeatures.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6fd765b8912c378ac34504c9923885099f2ca0db8ad44ecbe95188d3450c1837","length":"6792"}]}}
{"id":{"namedSet":{"id":"3"}},"namedSetOfFiles":{"files":[{"name":"Sources/Config/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"20625208086cc3293be9b8f88adb9606e3cc4d885d33039dbb7503fe2e750e1e","length":"676"},{"name":"Sources/Config/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"61f4fc0af161cda64b03ba1b12103ebe5afe91ecd1e2194ede45254b10cf2c9e","length":"17300"},{"name":"Sources/Config/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a49f48bdf37a1cf64186953c0248aee9f3bdc7243e7e52080f442b94a931b61f","length":"904"},{"name":"Sources/Config/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"68d749ede3758941fccc0d1e5927e83127553662ed4919e91045f91ed21c5d8f","length":"4368"}]}}
{"id":{"namedSet":{"id":"1"}},"namedSetOfFiles":{"files":[{"name":"Sources/Autocomplete/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"457e1b0c2cc12bffe13c0ae86ab733bed90e3690298e1897c5827773ad87746e","length":"672"},{"name":"Sources/Autocomplete/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cac8af440056535e2dcbc8cb6805d9c08e1bf5e7dcc6aa9f45088b5172f6a71a","length":"17288"},{"name":"Sources/Autocomplete/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"873029bb83968f96e87f6725e52d3c25498f7204c81d29f33499090def9b6c49","length":"908"},{"name":"Sources/Autocomplete/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2ec058cf75ca22331076aa9b749f57762383799be794f161ec9f0560fb652177","length":"4376"}]}}
{"id":{"namedSet":{"id":"5"}},"namedSetOfFiles":{"files":[{"name":"Sources/Autocomplete/Autocomplete.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/Autocomplete.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"911bf70b884ed8623d945d9e440300f5be17ace3ae13c407fa40cde073c41d09","length":"668"},{"name":"Sources/Autocomplete/Autocomplete.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/Autocomplete.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8bc1a55d9b8acccbb6babedf20bd2550d7e042a62cbb9ad9e51fffa89ae77a87","length":"17280"},{"name":"Sources/Autocomplete/Autocomplete.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/Autocomplete.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8f43ba54b628dd715e19693213c7515e8fb659e63d314f026449b99e6151c938","length":"892"},{"name":"Sources/Autocomplete/libAutocomplete.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Autocomplete/libAutocomplete.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"33f4f9e1a5e609974a7660f8fa9b062cc29d3c56e3e692b717d4aa84d626cb58","length":"4304"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Autocomplete/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"1"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/BackupCoordinator:BackupCoordinator","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"2"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCrypto:UmbraCrypto","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"0"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Config/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"3"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Features:Features","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"4"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Features/Crypto/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"6"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Autocomplete:Autocomplete","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"5"}]}]}}
{"id":{"progress":{"opaqueCount":10}},"children":[{"progress":{"opaqueCount":11}},{"namedSet":{"id":"7"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":11}},"children":[{"progress":{"opaqueCount":12}},{"namedSet":{"id":"8"}}],"progress":{}}
{"id":{"namedSet":{"id":"7"}},"namedSetOfFiles":{"files":[{"name":"Sources/ObjCBridgingTypes/ObjCBridgingTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ObjCBridgingTypes/ObjCBridgingTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"926037c0fcc4a781699ca439b8afc0f6c61dab4ee962b40376bc4ec2c9605780","length":"424"},{"name":"Sources/ObjCBridgingTypes/ObjCBridgingTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ObjCBridgingTypes/ObjCBridgingTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3192806234514a124b2e0e59d40a8596800947935d951eb97c70f3bce53f4400","length":"21212"},{"name":"Sources/ObjCBridgingTypes/ObjCBridgingTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ObjCBridgingTypes/ObjCBridgingTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"56ab6e51f996739f1e5076aa8d1bdc6afbe2a39b1cf3842024be7da63814a800","length":"996"},{"name":"Sources/ObjCBridgingTypes/libObjCBridgingTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ObjCBridgingTypes/libObjCBridgingTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"18a1c14807d046570f1c6b8ce0fd3eb3ac426b731372c1087b25fe083f456faa","length":"18688"}]}}
{"id":{"namedSet":{"id":"8"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandlingDomains/ErrorHandlingDomains.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains/ErrorHandlingDomains.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4decc5c0da0d264d4fb3978f78c754defe595344bba410e58b1d5a63d1ad3b2b","length":"972"},{"name":"Sources/ErrorHandlingDomains/ErrorHandlingDomains.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains/ErrorHandlingDomains.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c7917325990bea253e3aa692dfed4c768dc4381b553e1b1598d8f3f32c9bbcd3","length":"19104"},{"name":"Sources/ErrorHandlingDomains/ErrorHandlingDomains.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains/ErrorHandlingDomains.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ada74b285d8936332dd0d6dd55a38754711d082c75aea5b0824e8ccfd23155d5","length":"1460"},{"name":"Sources/ErrorHandlingDomains/libErrorHandlingDomains.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains/libErrorHandlingDomains.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c628e1decca90fcbced25e1af460a1efb666fce93275589ce82d3311113c3d85","length":"14504"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ObjCBridgingTypes:ObjCBridgingTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"7"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandlingDomains:ErrorHandlingDomains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"8"}]}]}}
{"id":{"progress":{"opaqueCount":12}},"children":[{"progress":{"opaqueCount":13}},{"namedSet":{"id":"9"}}],"progress":{}}
{"id":{"namedSet":{"id":"9"}},"namedSetOfFiles":{"files":[{"name":"Sources/KeyManagementTypes/KeyManagementTypesTests.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"579aba7b6fbb295efd5422d01622235e311191c0d2e5d55fed756b690c3ca795","length":"23404"},{"name":"Sources/KeyManagementTypes/KeyManagementTypesTests.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"323f56d1c6ae81ddff1da0dec2d1d2c2ce1a42e5ebfa112bbd187e8d9c5521ed","length":"152048"},{"name":"Sources/KeyManagementTypes/KeyManagementTypesTests.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/KeyManagementTypesTests.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5d29380947c09c6e4bdb32a15854c82a57635b77dcb7fa4078c1286fdf74be2a","length":"33652"},{"name":"Sources/KeyManagementTypes/libKeyManagementTypesTests.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/libKeyManagementTypesTests.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e7fe3d67aaed0f92d20262011e8a4f4fbb202e14446bf2abf4383304d5ea9fdc","length":"635000"}]}}
{"id":{"targetCompleted":{"label":"//Sources/KeyManagementTypes:KeyManagementTypesTests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"9"}]}]}}
{"id":{"progress":{"opaqueCount":13}},"children":[{"progress":{"opaqueCount":14}},{"namedSet":{"id":"10"}}],"progress":{}}
{"id":{"namedSet":{"id":"10"}},"namedSetOfFiles":{"files":[{"name":"Sources/KeyManagementTypes/KeyManagementTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/KeyManagementTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"20ffe02fc1cd786880f91accd3ee7d86966627e01cd0e724f2cdbfc589620aac","length":"22980"},{"name":"Sources/KeyManagementTypes/KeyManagementTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/KeyManagementTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cba4cca99f228b32a64796d333e70e7b4ea29c62dd2b292b35e055c49fcf7a36","length":"150704"},{"name":"Sources/KeyManagementTypes/KeyManagementTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/KeyManagementTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"13cb5f8f2c48d21e669f51fa156362230f232776f74e9471e0e5ebd68296d9b2","length":"32976"},{"name":"Sources/KeyManagementTypes/libKeyManagementTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/libKeyManagementTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1b6816b333f7b5f5105886a83211e896a3d2645a17b672ff29e54275abbaf373","length":"621824"}]}}
{"id":{"progress":{"opaqueCount":14}},"children":[{"progress":{"opaqueCount":15}},{"namedSet":{"id":"11"}}],"progress":{}}
{"id":{"targetCompleted":{"label":"//Sources/KeyManagementTypes:KeyManagementTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"10"}]}]}}
{"id":{"namedSet":{"id":"11"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/ModuleInfo/ModuleInfo.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/ModuleInfo/ModuleInfo.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5db07263826b911b46bdf79e8f08062020419f629924f297b025a8501d70ca25","length":"7312"},{"name":"Sources/ErrorHandling/ModuleInfo/ModuleInfo.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/ModuleInfo/ModuleInfo.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6e1dbc2a3c19793c2adaeb2b0002be60923e454a00f1724304b7944fc4bcbf93","length":"36076"},{"name":"Sources/ErrorHandling/ModuleInfo/ModuleInfo.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/ModuleInfo/ModuleInfo.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0c6b6010f2e04681edec0d68a54e25d52404431287565a1c4c7afffe94d68bc5","length":"8776"},{"name":"Sources/ErrorHandling/ModuleInfo/libModuleInfo.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/ModuleInfo/libModuleInfo.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"bec9e774abf1449b490dab05762a17e9205e777dbd33dbf06d129d4b7e071d04","length":"79936"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/ModuleInfo:ModuleInfo","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"11"}]}]}}
{"id":{"progress":{"opaqueCount":15}},"children":[{"progress":{"opaqueCount":16}},{"namedSet":{"id":"12"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":16}},"children":[{"progress":{"opaqueCount":17}},{"namedSet":{"id":"13"}}],"progress":{}}
{"id":{"namedSet":{"id":"12"}},"namedSetOfFiles":{"files":[{"name":"Sources/RepositoryManager/RepositoryManager.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/RepositoryManager/RepositoryManager.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1df462a8eefc668933707f3af452468f779a3c6d6689f6f30450d277521e8505","length":"972"},{"name":"Sources/RepositoryManager/RepositoryManager.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/RepositoryManager/RepositoryManager.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"dc092f7d71763de76d641b4ead59362b8b06e6acc68198723617ad54384bea6d","length":"18120"},{"name":"Sources/RepositoryManager/RepositoryManager.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/RepositoryManager/RepositoryManager.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4c6aae1043c14906419f5a74a215a4523352908f1b6a4c558679156d87b5a9ef","length":"1288"},{"name":"Sources/RepositoryManager/libRepositoryManager.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/RepositoryManager/libRepositoryManager.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"64bf5c12845e8af220d68a2ee06c5a3621d8b83097b924710e5f4a89a05763d6","length":"13728"}]}}
{"id":{"namedSet":{"id":"13"}},"namedSetOfFiles":{"files":[{"name":"Sources/Features/Crypto/Models/Models.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Models/Models.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"db6e85cbad9ecb3c5291f202778a72c7443a7cf91b2163cd4b7bbf7280d0c91e","length":"2264"},{"name":"Sources/Features/Crypto/Models/Models.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Models/Models.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"333bb0e7a7e55b5a651c544b771ee3db7106d6b7875224ad5fec1ca68b5f6e27","length":"27188"},{"name":"Sources/Features/Crypto/Models/Models.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Models/Models.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"61909de4b131acdf42e7641f8472b765c143904f40831d0f358187ced87a6e52","length":"2564"},{"name":"Sources/Features/Crypto/Models/libModels.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Crypto/Models/libModels.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d7a5fa2f86e99b10cf2da9cd206afdf3073ca3973f4015216628f417cda55b6d","length":"61472"}]}}
{"id":{"targetCompleted":{"label":"//Sources/RepositoryManager:RepositoryManager","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"12"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Features/Crypto/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"13"}]}]}}
{"id":{"progress":{"opaqueCount":17}},"children":[{"progress":{"opaqueCount":18}},{"namedSet":{"id":"14"}}],"progress":{}}
{"id":{"namedSet":{"id":"14"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityTypes/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3312a868c7224ee8f9c5b1d8f6214883516452ca474c680b4d4eea67baf460ce","length":"4352"},{"name":"Sources/SecurityTypes/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"40224d1cd6e433427e20364193073a1ef7ceb5efb92a856cdf16ce8329ab5d44","length":"20736"},{"name":"Sources/SecurityTypes/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d4d754d987e8fb7c0425cbde91dc251f91ebea816709052e7d109a52a3d4b960","length":"4564"},{"name":"Sources/SecurityTypes/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"07245a2de7e0934687b645e2670a08183deaf1894a765525eddb466756317bea","length":"17024"}]}}
{"id":{"progress":{"opaqueCount":18}},"children":[{"progress":{"opaqueCount":19}},{"namedSet":{"id":"15"}}],"progress":{}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityTypes/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"14"}]}]}}
{"id":{"namedSet":{"id":"15"}},"namedSetOfFiles":{"files":[{"name":"Sources/Repositories/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2fb9811c617b1070841f61f2e6cf925c8da126516c6a999f6ec990373814df68","length":"660"},{"name":"Sources/Repositories/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c330297a718664adf201d28f744750f9c08dcbd88857dbc70fb5c67baa0d1968","length":"17284"},{"name":"Sources/Repositories/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ae85c070b5a0e0cb66486c6d4db39a4100d86bc561693ba2d4935388fb6aa408","length":"904"},{"name":"Sources/Repositories/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0a727393510f6d81b08563be66f5b635457d4c1feb07d570e46d5aca882d94a0","length":"4352"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Repositories/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"15"}]}]}}
{"id":{"progress":{"opaqueCount":19}},"children":[{"progress":{"opaqueCount":20}},{"namedSet":{"id":"16"}}],"progress":{}}
{"id":{"progress":{"opaqueCount":20}},"children":[{"progress":{"opaqueCount":21}},{"namedSet":{"id":"17"}}],"progress":{}}
{"id":{"namedSet":{"id":"16"}},"namedSetOfFiles":{"files":[{"name":"Sources/Config/Config.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/Config.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6e17f9ad7dabed0b772988debe77ade70081dd42bc1eef1bb0790512af3c0381","length":"3192"},{"name":"Sources/Config/Config.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/Config.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"006126fde786e3c3018a685a855e5b2808d0af15d1fa0b5c6cb3a626e3eeb76a","length":"17956"},{"name":"Sources/Config/Config.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/Config.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"82706c09c5380d42e064845212d3094706c26440b8919d8d43f79ca569474c1b","length":"3840"},{"name":"Sources/Config/libConfig.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Config/libConfig.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ed0ce954e26360127ff514251467a8083ee5beea2d94f1fc335428866404bbee","length":"6720"}]}}
{"id":{"namedSet":{"id":"17"}},"namedSetOfFiles":{"files":[{"name":"Sources/Services/Services.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/Services.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1a163067e644ffb6f7b0f50998058d6ebe95cabfeacda6516780b7d0aac5726f","length":"3392"},{"name":"Sources/Services/Services.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/Services.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"adc38d2165dbd67d6710d34883295aea99442dead9a210b630f1519435f8864d","length":"17960"},{"name":"Sources/Services/Services.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/Services.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4893e316e52ba72d9073447e6f4fd97123e1cbb7561fc318881a765f9187b408","length":"4232"},{"name":"Sources/Services/libServices.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/libServices.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6ea66b8a692766e4263698456991dc803b3691a3acccccfb514c1589d96ae90a","length":"9928"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Config:Config","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"16"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"17"}]}]}}
{"id":{"progress":{"opaqueCount":21}},"children":[{"progress":{"opaqueCount":22}},{"namedSet":{"id":"18"}}],"progress":{}}
{"id":{"namedSet":{"id":"18"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraCoreTests/UmbraCoreTests.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTests/UmbraCoreTests.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2750ad48a424e460c479db28871b47be3c216b4dd02857d1d7e386822c6209ff","length":"956"},{"name":"Sources/UmbraCoreTests/UmbraCoreTests.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTests/UmbraCoreTests.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"279fd1d8be9361e435de69b823bf9af5fb2b498a7cb54041816821d9c68faa88","length":"18104"},{"name":"Sources/UmbraCoreTests/UmbraCoreTests.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTests/UmbraCoreTests.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6a23b3541d2edace4ce4f21254e9ca3a170ba6411701eefefa84084f22206547","length":"1272"},{"name":"Sources/UmbraCoreTests/libUmbraCoreTests.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTests/libUmbraCoreTests.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c149a7a3880cf013809958be013aeb602754ccb3e1565b68472c353a199e68b7","length":"13536"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCoreTests:UmbraCoreTests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"18"}]}]}}
{"id":{"progress":{"opaqueCount":22}},"children":[{"progress":{"opaqueCount":23}},{"namedSet":{"id":"19"}}],"progress":{}}
{"id":{"namedSet":{"id":"19"}},"namedSetOfFiles":{"files":[{"name":"Sources/Services/CredentialManager/CredentialManager.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CredentialManager/CredentialManager.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"78a910caaff3dcd22eb5ee2233f0ffa6dff63f9914c1f2af71eea34270d4979e","length":"2644"},{"name":"Sources/Services/CredentialManager/CredentialManager.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CredentialManager/CredentialManager.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a4ee10184298cdf27e89d29637801787ab30ab17412f1392620e19172db7e27a","length":"27588"},{"name":"Sources/Services/CredentialManager/CredentialManager.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CredentialManager/CredentialManager.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1ff18fc8ac84a912f5bd344322fcfbff3590256bb3d1e8b982cf9e7117f40ab1","length":"3444"},{"name":"Sources/Services/CredentialManager/libCredentialManager.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CredentialManager/libCredentialManager.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"864b262063916495f12a7c1acb0c12ebc1d34069d989c46b0de61e742fe209af","length":"41280"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Services/CredentialManager:CredentialManager","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"19"}]}]}}
{"id":{"progress":{"opaqueCount":23}},"children":[{"progress":{"opaqueCount":24}},{"namedSet":{"id":"20"}}],"progress":{}}
{"id":{"namedSet":{"id":"20"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraCryptoService/Resources/Resources.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/Resources/Resources.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"090b65cf41e2d87950e2a0275dd1d6ee037841dd76eca63fd608b31d386dec05","length":"1012"},{"name":"Sources/UmbraCryptoService/Resources/Resources.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/Resources/Resources.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"22b7d62e348e30ea8f41311565933a0bd2bc223f32d338c516513a6bbde1282f","length":"18168"},{"name":"Sources/UmbraCryptoService/Resources/Resources.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/Resources/Resources.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"40801029b5c406f14128d38602cd42dd2fcfbf687be44d23c90983847a8b2e2d","length":"1328"},{"name":"Sources/UmbraCryptoService/Resources/libResources.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/Resources/libResources.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1a1e353a766f6e2316373df0eb17860cdab0a458fdc1e4ffca51ceadaef22952","length":"13816"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCryptoService/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"20"}]}]}}
{"id":{"progress":{"opaqueCount":24}},"children":[{"progress":{"opaqueCount":25}},{"namedSet":{"id":"21"}}],"progress":{}}
{"id":{"namedSet":{"id":"21"}},"namedSetOfFiles":{"files":[{"name":"Sources/Core/Extensions/Extensions.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Extensions/Extensions.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"527d1098d6f33f4ff538750cfee2a0472b0a5982558f7ab658339c2048dba29f","length":"1192"},{"name":"Sources/Core/Extensions/Extensions.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Extensions/Extensions.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f36cac51de91af701547a22b5e2a3b82156e218f166edc40af429b2d6187090c","length":"17816"},{"name":"Sources/Core/Extensions/Extensions.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Extensions/Extensions.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e7eea042284f4140f6cb2691f4657f9395704b308daf2edce79e50b69df9f70f","length":"1568"},{"name":"Sources/Core/Extensions/libExtensions.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Extensions/libExtensions.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"32541c66789820a16d195c6247fea453f470665383c9afbcdba8e3803a30a092","length":"8704"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Core/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"21"}]}]}}
{"id":{"progress":{"opaqueCount":25}},"children":[{"progress":{"opaqueCount":26}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc.swiftmodule","label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc.swiftmodule","label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-290"},"label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc_objs/SecurityInterfacesDocumentationPackage.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Documentation.docc","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfaces/Documentation.docc/SecurityInterfacesDocumentationPackage.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.494260Z","endTime":"2025-03-25T22:47:24.494260Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc.swiftmodule","label":"//Sources/SecurityInterfaces/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":26}},"children":[{"progress":{"opaqueCount":27}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes.swiftmodule","label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfaces/Documentation.docc/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfaces/Documentation.docc:Documentation.docc failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfaces/Documentation.docc:Documentation.docc) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Documentation.docc/Documentation.docc.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: module name \"Documentation.docc\" is not a valid identifier\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes.swiftmodule","label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-271"},"label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/FoundationBridgeTypes:FoundationBridgeTypes","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes_objs/DataBridge.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","FoundationBridgeTypes","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/FoundationBridgeTypes/DataBridge.swift","Sources/FoundationBridgeTypes/URLBridge.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.469486Z","endTime":"2025-03-25T22:47:24.469486Z"}}
{"id":{"targetCompleted":{"label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes.swiftmodule","label":"//Sources/FoundationBridgeTypes:FoundationBridgeTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":27}},"children":[{"progress":{"opaqueCount":28}},{"namedSet":{"id":"22"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/FoundationBridgeTypes/BUILD.bazel:3:20: Compiling Swift module //Sources/FoundationBridgeTypes:FoundationBridgeTypes failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/FoundationBridgeTypes:FoundationBridgeTypes) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/FoundationBridgeTypes/FoundationBridgeTypes.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/FoundationBridgeTypes/DataBridge.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n 1 | import CoreTypesInterfaces\n   |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n 2 | \n 3 | /// Protocol that defines the minimal interface needed for Foundation.Data operations\nSources/FoundationBridgeTypes/DataBridge.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n 1 | import CoreTypesInterfaces\n   |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n 2 | \n 3 | /// Protocol that defines the minimal interface needed for Foundation.Data operations\n"}}
{"id":{"namedSet":{"id":"22"}},"namedSetOfFiles":{"files":[{"name":"Sources/Testing/Testing.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Testing/Testing.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5fc994fba4bd65eed2b0dbec064cbdbe28542762f243acc4747a55d6b4bed8a5","length":"1832"},{"name":"Sources/Testing/Testing.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Testing/Testing.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6168a2d0fdd29ddb2db8ac99f0866d64cca682ae4c9a6018885c39fe2f871b44","length":"25220"},{"name":"Sources/Testing/Testing.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Testing/Testing.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a144362de0d54f952b2d810a6065972d0bc0b1815c71f239076b45146a7a852f","length":"3372"},{"name":"Sources/Testing/libTesting.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Testing/libTesting.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5ddf42617c29dfe85725aaccdba0643e39b7bd2d370cdee0f60f9a7f3e5fa464","length":"21496"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Testing:Testing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"22"}]}]}}
{"id":{"progress":{"opaqueCount":28}},"children":[{"progress":{"opaqueCount":29}}],"progress":{"stderr":"INFO: From Compiling Swift module @@rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax//:SwiftSyntax.rspm:\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntax/SyntaxText.swift:15:22: warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftSyntax\u0027 may lead to instability during execution\n 13 | #if !SWIFT_SYNTAX_ALWAYS_SINGLE_THREADED\n 14 | #if canImport(Darwin)\n 15 | @_implementationOnly import Darwin\n    |                      `- warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftSyntax\u0027 may lead to instability during execution\n 16 | #elseif canImport(Glibc)\n 17 | @_implementationOnly import Glibc\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntax/SyntaxText.swift:15:22: warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftSyntax\u0027 may lead to instability during execution\n 13 | #if !SWIFT_SYNTAX_ALWAYS_SINGLE_THREADED\n 14 | #if canImport(Darwin)\n 15 | @_implementationOnly import Darwin\n    |                      `- warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftSyntax\u0027 may lead to instability during execution\n 16 | #elseif canImport(Glibc)\n 17 | @_implementationOnly import Glibc\nINFO: From Compiling Swift module @@rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax//:SwiftSyntaxBuilder.rspm:\n"}}
{"id":{"progress":{"opaqueCount":29}},"children":[{"progress":{"opaqueCount":30}}],"progress":{"stderr":"external/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/ConvenienceInitializers.swift:71:1: warning: extension declares a conformance of imported type \u0027BooleanLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByBooleanLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n 69 | // MARK: - BooleanLiteralExpr\n 70 | \n 71 | extension BooleanLiteralExprSyntax: ExpressibleByBooleanLiteral {\n    | |- warning: extension declares a conformance of imported type \u0027BooleanLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByBooleanLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n 72 |   public init(_ value: Bool) {\n 73 |     self.init(literal: value ? .keyword(.true) : .keyword(.false))\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/ConvenienceInitializers.swift:156:1: warning: extension declares a conformance of imported type \u0027FloatLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByFloatLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n154 | // MARK: - FloatLiteralExprSyntax\n155 | \n156 | extension FloatLiteralExprSyntax: ExpressibleByFloatLiteral {\n    | |- warning: extension declares a conformance of imported type \u0027FloatLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByFloatLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n157 |   public init(_ value: Float) {\n158 |     self.init(literal: .floatLiteral(String(value)))\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/ConvenienceInitializers.swift:193:1: warning: extension declares a conformance of imported type \u0027IntegerLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByIntegerLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n191 | // MARK: - IntegerLiteralExpr\n192 | \n193 | extension IntegerLiteralExprSyntax: ExpressibleByIntegerLiteral {\n    | |- warning: extension declares a conformance of imported type \u0027IntegerLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByIntegerLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n194 |   public init(_ value: Int) {\n195 |     self.init(literal: .integerLiteral(String(value)))\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/Syntax+StringInterpolation.swift:418:1: warning: extension declares a conformance of imported type \u0027TokenSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n416 | }\n417 | \n418 | extension TokenSyntax: SyntaxExpressibleByStringInterpolation {\n    | |- warning: extension declares a conformance of imported type \u0027TokenSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n419 |   public init(stringInterpolation: SyntaxStringInterpolation) {\n420 |     let string \u003d stringInterpolation.sourceText.withUnsafeBufferPointer { buf in\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/Syntax+StringInterpolation.swift:449:1: warning: extension declares a conformance of imported type \u0027Trivia\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n447 | }\n448 | \n449 | extension Trivia: ExpressibleByStringInterpolation {\n    | |- warning: extension declares a conformance of imported type \u0027Trivia\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n450 |   public init(stringInterpolation: String.StringInterpolation) {\n451 |     var text \u003d String(stringInterpolation: stringInterpolation)\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:17:1: warning: extension declares a conformance of imported type \u0027AccessorBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n15 | import SwiftSyntax\n16 | \n17 | extension AccessorBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AccessorBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n18 | \n19 | extension AccessorDeclSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:19:1: warning: extension declares a conformance of imported type \u0027AccessorDeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n17 | extension AccessorBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n18 | \n19 | extension AccessorDeclSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AccessorDeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n20 | \n21 | extension AttributeSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:21:1: warning: extension declares a conformance of imported type \u0027AttributeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n19 | extension AccessorDeclSyntax: SyntaxExpressibleByStringInterpolation {}\n20 | \n21 | extension AttributeSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AttributeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n22 | \n23 | extension CatchClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:23:1: warning: extension declares a conformance of imported type \u0027CatchClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n21 | extension AttributeSyntax: SyntaxExpressibleByStringInterpolation {}\n22 | \n23 | extension CatchClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027CatchClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n24 | \n25 | extension ClosureParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:25:1: warning: extension declares a conformance of imported type \u0027ClosureParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n23 | extension CatchClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n24 | \n25 | extension ClosureParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027ClosureParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n26 | \n27 | extension CodeBlockItemSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:27:1: warning: extension declares a conformance of imported type \u0027CodeBlockItemSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n25 | extension ClosureParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n26 | \n27 | extension CodeBlockItemSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027CodeBlockItemSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n28 | \n29 | extension DeclSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:29:1: warning: extension declares a conformance of imported type \u0027DeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n27 | extension CodeBlockItemSyntax: SyntaxExpressibleByStringInterpolation {}\n28 | \n29 | extension DeclSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027DeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n30 | \n31 | extension EnumCaseParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:31:1: warning: extension declares a conformance of imported type \u0027EnumCaseParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n29 | extension DeclSyntax: SyntaxExpressibleByStringInterpolation {}\n30 | \n31 | extension EnumCaseParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027EnumCaseParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n32 | \n33 | extension ExprSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:33:1: warning: extension declares a conformance of imported type \u0027ExprSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n31 | extension EnumCaseParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n32 | \n33 | extension ExprSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027ExprSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n34 | \n35 | extension FunctionParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:35:1: warning: extension declares a conformance of imported type \u0027FunctionParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n33 | extension ExprSyntax: SyntaxExpressibleByStringInterpolation {}\n34 | \n35 | extension FunctionParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027FunctionParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n36 | \n37 | extension GenericParameterClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:37:1: warning: extension declares a conformance of imported type \u0027GenericParameterClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n35 | extension FunctionParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n36 | \n37 | extension GenericParameterClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027GenericParameterClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n38 | \n39 | extension MemberBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:39:1: warning: extension declares a conformance of imported type \u0027MemberBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n37 | extension GenericParameterClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n38 | \n39 | extension MemberBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027MemberBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n40 | \n41 | extension PatternSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:41:1: warning: extension declares a conformance of imported type \u0027PatternSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n39 | extension MemberBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n40 | \n41 | extension PatternSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027PatternSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n42 | \n43 | extension SourceFileSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:43:1: warning: extension declares a conformance of imported type \u0027SourceFileSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n41 | extension PatternSyntax: SyntaxExpressibleByStringInterpolation {}\n42 | \n43 | extension SourceFileSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027SourceFileSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n44 | \n45 | extension StmtSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:45:1: warning: extension declares a conformance of imported type \u0027StmtSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n43 | extension SourceFileSyntax: SyntaxExpressibleByStringInterpolation {}\n44 | \n45 | extension StmtSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027StmtSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n46 | \n47 | extension SwitchCaseSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:47:1: warning: extension declares a conformance of imported type \u0027SwitchCaseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n45 | extension StmtSyntax: SyntaxExpressibleByStringInterpolation {}\n46 | \n47 | extension SwitchCaseSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027SwitchCaseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n48 | \n49 | extension TypeSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:49:1: warning: extension declares a conformance of imported type \u0027TypeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n47 | extension SwitchCaseSyntax: SyntaxExpressibleByStringInterpolation {}\n48 | \n49 | extension TypeSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027TypeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n50 | \n51 | extension AccessorDeclListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:51:1: warning: extension declares a conformance of imported type \u0027AccessorDeclListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n49 | extension TypeSyntax: SyntaxExpressibleByStringInterpolation {}\n50 | \n51 | extension AccessorDeclListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AccessorDeclListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n52 | \n53 | extension AttributeListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:53:1: warning: extension declares a conformance of imported type \u0027AttributeListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n51 | extension AccessorDeclListSyntax: SyntaxExpressibleByStringInterpolation {}\n52 | \n53 | extension AttributeListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AttributeListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n54 | \n55 | extension CodeBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:55:1: warning: extension declares a conformance of imported type \u0027CodeBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n53 | extension AttributeListSyntax: SyntaxExpressibleByStringInterpolation {}\n54 | \n55 | extension CodeBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027CodeBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n56 | \n57 | extension MemberBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:57:1: warning: extension declares a conformance of imported type \u0027MemberBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n55 | extension CodeBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n56 | \n57 | extension MemberBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027MemberBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n58 | \nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/ConvenienceInitializers.swift:71:1: warning: extension declares a conformance of imported type \u0027BooleanLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByBooleanLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n 69 | // MARK: - BooleanLiteralExpr\n 70 | \n 71 | extension BooleanLiteralExprSyntax: ExpressibleByBooleanLiteral {\n    | |- warning: extension declares a conformance of imported type \u0027BooleanLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByBooleanLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n 72 |   public init(_ value: Bool) {\n 73 |     self.init(literal: value ? .keyword(.true) : .keyword(.false))\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/ConvenienceInitializers.swift:156:1: warning: extension declares a conformance of imported type \u0027FloatLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByFloatLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n154 | // MARK: - FloatLiteralExprSyntax\n155 | \n156 | extension FloatLiteralExprSyntax: ExpressibleByFloatLiteral {\n    | |- warning: extension declares a conformance of imported type \u0027FloatLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByFloatLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n157 |   public init(_ value: Float) {\n158 |     self.init(literal: .floatLiteral(String(value)))\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/ConvenienceInitializers.swift:193:1: warning: extension declares a conformance of imported type \u0027IntegerLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByIntegerLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n191 | // MARK: - IntegerLiteralExpr\n192 | \n193 | extension IntegerLiteralExprSyntax: ExpressibleByIntegerLiteral {\n    | |- warning: extension declares a conformance of imported type \u0027IntegerLiteralExprSyntax\u0027 to imported protocol \u0027ExpressibleByIntegerLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n194 |   public init(_ value: Int) {\n195 |     self.init(literal: .integerLiteral(String(value)))\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/Syntax+StringInterpolation.swift:418:1: warning: extension declares a conformance of imported type \u0027TokenSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n416 | }\n417 | \n418 | extension TokenSyntax: SyntaxExpressibleByStringInterpolation {\n    | |- warning: extension declares a conformance of imported type \u0027TokenSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n419 |   public init(stringInterpolation: SyntaxStringInterpolation) {\n420 |     let string \u003d stringInterpolation.sourceText.withUnsafeBufferPointer { buf in\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/Syntax+StringInterpolation.swift:449:1: warning: extension declares a conformance of imported type \u0027Trivia\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n447 | }\n448 | \n449 | extension Trivia: ExpressibleByStringInterpolation {\n    | |- warning: extension declares a conformance of imported type \u0027Trivia\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n    | `- note: add \u0027@retroactive\u0027 to silence this warning\n450 |   public init(stringInterpolation: String.StringInterpolation) {\n451 |     var text \u003d String(stringInterpolation: stringInterpolation)\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:17:1: warning: extension declares a conformance of imported type \u0027AccessorBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n15 | import SwiftSyntax\n16 | \n17 | extension AccessorBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AccessorBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n18 | \n19 | extension AccessorDeclSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:19:1: warning: extension declares a conformance of imported type \u0027AccessorDeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n17 | extension AccessorBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n18 | \n19 | extension AccessorDeclSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AccessorDeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n20 | \n21 | extension AttributeSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:21:1: warning: extension declares a conformance of imported type \u0027AttributeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n19 | extension AccessorDeclSyntax: SyntaxExpressibleByStringInterpolation {}\n20 | \n21 | extension AttributeSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AttributeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n22 | \n23 | extension CatchClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:23:1: warning: extension declares a conformance of imported type \u0027CatchClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n21 | extension AttributeSyntax: SyntaxExpressibleByStringInterpolation {}\n22 | \n23 | extension CatchClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027CatchClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n24 | \n25 | extension ClosureParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:25:1: warning: extension declares a conformance of imported type \u0027ClosureParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n23 | extension CatchClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n24 | \n25 | extension ClosureParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027ClosureParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n26 | \n27 | extension CodeBlockItemSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:27:1: warning: extension declares a conformance of imported type \u0027CodeBlockItemSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n25 | extension ClosureParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n26 | \n27 | extension CodeBlockItemSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027CodeBlockItemSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n28 | \n29 | extension DeclSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:29:1: warning: extension declares a conformance of imported type \u0027DeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n27 | extension CodeBlockItemSyntax: SyntaxExpressibleByStringInterpolation {}\n28 | \n29 | extension DeclSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027DeclSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n30 | \n31 | extension EnumCaseParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:31:1: warning: extension declares a conformance of imported type \u0027EnumCaseParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n29 | extension DeclSyntax: SyntaxExpressibleByStringInterpolation {}\n30 | \n31 | extension EnumCaseParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027EnumCaseParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n32 | \n33 | extension ExprSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:33:1: warning: extension declares a conformance of imported type \u0027ExprSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n31 | extension EnumCaseParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n32 | \n33 | extension ExprSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027ExprSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n34 | \n35 | extension FunctionParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:35:1: warning: extension declares a conformance of imported type \u0027FunctionParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n33 | extension ExprSyntax: SyntaxExpressibleByStringInterpolation {}\n34 | \n35 | extension FunctionParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027FunctionParameterSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n36 | \n37 | extension GenericParameterClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:37:1: warning: extension declares a conformance of imported type \u0027GenericParameterClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n35 | extension FunctionParameterSyntax: SyntaxExpressibleByStringInterpolation {}\n36 | \n37 | extension GenericParameterClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027GenericParameterClauseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n38 | \n39 | extension MemberBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:39:1: warning: extension declares a conformance of imported type \u0027MemberBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n37 | extension GenericParameterClauseSyntax: SyntaxExpressibleByStringInterpolation {}\n38 | \n39 | extension MemberBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027MemberBlockSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n40 | \n41 | extension PatternSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:41:1: warning: extension declares a conformance of imported type \u0027PatternSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n39 | extension MemberBlockSyntax: SyntaxExpressibleByStringInterpolation {}\n40 | \n41 | extension PatternSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027PatternSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n42 | \n43 | extension SourceFileSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:43:1: warning: extension declares a conformance of imported type \u0027SourceFileSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n41 | extension PatternSyntax: SyntaxExpressibleByStringInterpolation {}\n42 | \n43 | extension SourceFileSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027SourceFileSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n44 | \n45 | extension StmtSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:45:1: warning: extension declares a conformance of imported type \u0027StmtSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n43 | extension SourceFileSyntax: SyntaxExpressibleByStringInterpolation {}\n44 | \n45 | extension StmtSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027StmtSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n46 | \n47 | extension SwitchCaseSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:47:1: warning: extension declares a conformance of imported type \u0027SwitchCaseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n45 | extension StmtSyntax: SyntaxExpressibleByStringInterpolation {}\n46 | \n47 | extension SwitchCaseSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027SwitchCaseSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n48 | \n49 | extension TypeSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:49:1: warning: extension declares a conformance of imported type \u0027TypeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n47 | extension SwitchCaseSyntax: SyntaxExpressibleByStringInterpolation {}\n48 | \n49 | extension TypeSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027TypeSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n50 | \n51 | extension AccessorDeclListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:51:1: warning: extension declares a conformance of imported type \u0027AccessorDeclListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n49 | extension TypeSyntax: SyntaxExpressibleByStringInterpolation {}\n50 | \n51 | extension AccessorDeclListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AccessorDeclListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n52 | \n53 | extension AttributeListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:53:1: warning: extension declares a conformance of imported type \u0027AttributeListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n51 | extension AccessorDeclListSyntax: SyntaxExpressibleByStringInterpolation {}\n52 | \n53 | extension AttributeListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027AttributeListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n54 | \n55 | extension CodeBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:55:1: warning: extension declares a conformance of imported type \u0027CodeBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n53 | extension AttributeListSyntax: SyntaxExpressibleByStringInterpolation {}\n54 | \n55 | extension CodeBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027CodeBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n56 | \n57 | extension MemberBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftSyntaxBuilder/generated/SyntaxExpressibleByStringInterpolationConformances.swift:57:1: warning: extension declares a conformance of imported type \u0027MemberBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n55 | extension CodeBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n56 | \n57 | extension MemberBlockItemListSyntax: SyntaxExpressibleByStringInterpolation {}\n   | |- warning: extension declares a conformance of imported type \u0027MemberBlockItemListSyntax\u0027 to imported protocols \u0027ExpressibleByStringInterpolation\u0027, \u0027ExpressibleByStringLiteral\u0027, \u0027ExpressibleByExtendedGraphemeClusterLiteral\u0027, \u0027ExpressibleByUnicodeScalarLiteral\u0027; this will not behave correctly if the owners of \u0027SwiftSyntax\u0027 introduce this conformance in the future\n   | `- note: add \u0027@retroactive\u0027 to silence this warning\n58 | \n"}}
{"id":{"progress":{"opaqueCount":30}},"children":[{"progress":{"opaqueCount":31}},{"namedSet":{"id":"23"}}],"progress":{"stderr":"INFO: From Compiling Swift module @@rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax//:SwiftCompilerPlugin.rspm:\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftCompilerPlugin/CompilerPlugin.swift:16:22: warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 14 | \n 15 | import SwiftSyntaxMacros\n 16 | @_implementationOnly import SwiftCompilerPluginMessageHandling\n    |                      `- warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 17 | \n 18 | @_implementationOnly import Foundation\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftCompilerPlugin/CompilerPlugin.swift:18:22: warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 16 | @_implementationOnly import SwiftCompilerPluginMessageHandling\n 17 | \n 18 | @_implementationOnly import Foundation\n    |                      `- warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 19 | #if os(Windows)\n 20 | @_implementationOnly import ucrt\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftCompilerPlugin/CompilerPlugin.swift:16:22: warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 14 | \n 15 | import SwiftSyntaxMacros\n 16 | @_implementationOnly import SwiftCompilerPluginMessageHandling\n    |                      `- warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 17 | \n 18 | @_implementationOnly import Foundation\n\nexternal/rules_swift_package_manager++swift_deps+swiftpkg_swift_syntax/Sources/SwiftCompilerPlugin/CompilerPlugin.swift:18:22: warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 16 | @_implementationOnly import SwiftCompilerPluginMessageHandling\n 17 | \n 18 | @_implementationOnly import Foundation\n    |                      `- warning: using \u0027@_implementationOnly\u0027 without enabling library evolution for \u0027SwiftCompilerPlugin\u0027 may lead to instability during execution\n 19 | #if os(Windows)\n 20 | @_implementationOnly import ucrt\nINFO: From Compiling Swift module //Sources/TestingMacros:TestingMacros:\nSources/TestingMacros/Macros.swift:38:11: warning: immutable value \u0027stringLiteral\u0027 was never used; consider replacing with \u0027_\u0027 or removing it\n36 |     guard\n37 |       let argument\u003dnode.arguments?.as(LabeledExprListSyntax.self)?.first?.expression,\n38 |       let stringLiteral\u003dargument.as(StringLiteralExprSyntax.self)?.segments.first?\n   |           `- warning: immutable value \u0027stringLiteral\u0027 was never used; consider replacing with \u0027_\u0027 or removing it\n39 |         .as(StringSegmentSyntax.self)?.content\n40 |     else {\n"}}
{"id":{"namedSet":{"id":"23"}},"namedSetOfFiles":{"files":[{"name":"Sources/TestingMacros/TestingMacros.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/TestingMacros/TestingMacros.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4abd253d78b872996ab8c5955cd0fc6e50af7c41a0cd3e6d65f767eb740a8e8e","length":"880"},{"name":"Sources/TestingMacros/TestingMacros.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/TestingMacros/TestingMacros.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b228c70e090b3e8b9dee7e39c76d4d267a17119010d876e9d61c1920df88b91d","length":"37512"},{"name":"Sources/TestingMacros/TestingMacros.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/TestingMacros/TestingMacros.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2fcac6d69473315a622ceb537bb5c61d8dcc889a7725eb3e015a0a09fffaf4ae","length":"2632"},{"name":"Sources/TestingMacros/libTestingMacros.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/TestingMacros/libTestingMacros.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3570c90747315233e4769a5d3b96f2e56a5a5dc3cb84522d599ee44e5c82974f","length":"62904"}]}}
{"id":{"targetCompleted":{"label":"//Sources/TestingMacros:TestingMacros","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"23"}]}]}}
{"id":{"progress":{"opaqueCount":31}},"children":[{"progress":{"opaqueCount":32}},{"namedSet":{"id":"24"}}],"progress":{}}
{"id":{"namedSet":{"id":"24"}},"namedSetOfFiles":{"files":[{"name":"Sources/Resources/Types/Types.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Types/Types.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d370d6939f54b17a165ce56cf91f6e8c67cbc3bc8f8e889d5d0ba84252119634","length":"2668"},{"name":"Sources/Resources/Types/Types.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Types/Types.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a2e8fecea4ae48885c66ce6f9a29223160ca9cadfd9398631de82606cfe69d64","length":"37400"},{"name":"Sources/Resources/Types/Types.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Types/Types.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3398c373ffc3a98bc7843fd9c14c6ade3efc38a89e4daf9158f39b5d08b33028","length":"3828"},{"name":"Sources/Resources/Types/libTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Types/libTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1fe5ed6e90b6bb29b0cd4ca7419c5e2c9275a6e57b65b6f7733735fb87098f38","length":"51640"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Resources/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"24"}]}]}}
{"id":{"progress":{"opaqueCount":32}},"children":[{"progress":{"opaqueCount":33}},{"namedSet":{"id":"25"}}],"progress":{}}
{"id":{"namedSet":{"id":"25"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Extensions/Extensions.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Extensions/Extensions.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"399665a039a1a2b304df0f7ebdd6ff291ed7a903cf626e68eb5b7afcc5a6447b","length":"2760"},{"name":"Sources/ErrorHandling/Extensions/Extensions.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Extensions/Extensions.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"95ac6ef71750196eda475abf00eec9e6ba683b1616312cf6dc91debce32821ea","length":"26576"},{"name":"Sources/ErrorHandling/Extensions/Extensions.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Extensions/Extensions.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"54dfb2ff0f18ceca21d6644c6f926bf9a170d03ba114c4eeb54fa048ff677ff8","length":"3444"},{"name":"Sources/ErrorHandling/Extensions/libExtensions.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Extensions/libExtensions.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1b1a18e3417c988c9a0d3f6440c509d27948b898674b0d05dad6564b0c0bfa93","length":"48464"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"25"}]}]}}
{"id":{"progress":{"opaqueCount":33}},"children":[{"progress":{"opaqueCount":34}},{"namedSet":{"id":"26"}}],"progress":{}}
{"id":{"namedSet":{"id":"26"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreTypesInterfaces/Sources/CoreTypesInterfacesSources.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Sources/CoreTypesInterfacesSources.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"833a76d76a2ac3f3fb793a1175702d3050ec255f50bb704080b60f8c7e8ca4f5","length":"14568"},{"name":"Sources/CoreTypesInterfaces/Sources/CoreTypesInterfacesSources.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Sources/CoreTypesInterfacesSources.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"20fe8a200eb9fdff33456f8e9a89ee80e850e4fd7683e110526459fa43a5c2b8","length":"40996"},{"name":"Sources/CoreTypesInterfaces/Sources/CoreTypesInterfacesSources.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Sources/CoreTypesInterfacesSources.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6f6e0e5a4319de21059d40d451f2020f74e03de50fff2b3949fdbcba3f8280f1","length":"19260"},{"name":"Sources/CoreTypesInterfaces/Sources/libCoreTypesInterfacesSources.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Sources/libCoreTypesInterfacesSources.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"dc713f7991e7a2a36903248e9722d67c5da97fbab18f504d310384b029262985","length":"123752"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreTypesInterfaces/Sources:CoreTypesInterfacesSources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"26"}]}]}}
{"id":{"progress":{"opaqueCount":34}},"children":[{"progress":{"opaqueCount":35}},{"namedSet":{"id":"27"}}],"progress":{}}
{"id":{"namedSet":{"id":"27"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreTypesInterfaces/CoreTypesInterfaces.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/CoreTypesInterfaces.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cd55b28e398b15525aac5c5110f0ff30e8275821708414de657dee28a9eed2c2","length":"424"},{"name":"Sources/CoreTypesInterfaces/CoreTypesInterfaces.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/CoreTypesInterfaces.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3b1d3d4e39191f3ab54be0e63edc77da20f2407ecfb30a850704f64cc6ee8c9f","length":"16680"},{"name":"Sources/CoreTypesInterfaces/CoreTypesInterfaces.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/CoreTypesInterfaces.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a31dc6ebbef82b33b23ef405ef67b22cff8160e4cf4bb1dd210a7069032ee9bc","length":"676"},{"name":"Sources/CoreTypesInterfaces/libCoreTypesInterfaces.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/libCoreTypesInterfaces.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"73c0ebee6886bb079bc7586d1092e44cc096f8e84cb939e0dd1ed939bdd84caf","length":"7416"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreTypesInterfaces:CoreTypesInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"27"}]}]}}
{"id":{"progress":{"opaqueCount":35}},"children":[{"progress":{"opaqueCount":36}},{"namedSet":{"id":"28"}}],"progress":{}}
{"id":{"namedSet":{"id":"28"}},"namedSetOfFiles":{"files":[{"name":"Sources/Features/Logging/Models/Models.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Models/Models.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a48d4b6b498cbb5adb066f51360663e68cc47bc6338ac591b180cecccba12f24","length":"3252"},{"name":"Sources/Features/Logging/Models/Models.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Models/Models.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ec55487476f3ac2d2a90c7d469e0d9a1536df266a964eaeb699f3bb84a03fa97","length":"43316"},{"name":"Sources/Features/Logging/Models/Models.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Models/Models.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"39d9cbdc0a4e6a300c3d52cd808ce6a3f8709a5a43d47136f9367a10e65fc143","length":"5632"},{"name":"Sources/Features/Logging/Models/libModels.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Models/libModels.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"22bb669b1c5f2bcf4747969390b5d37d70e77acb7e0971583bb7895c5caf0905","length":"66600"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Features/Logging/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"28"}]}]}}
{"id":{"progress":{"opaqueCount":37}},"children":[{"progress":{"opaqueCount":38}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols.swiftmodule","label":"//Sources/ResticCLIHelper/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"progress":{"opaqueCount":36}},"children":[{"progress":{"opaqueCount":37}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols.swiftmodule","label":"//Sources/Features/Logging/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"[327 / 669] [Sched] Compiling Swift module //Sources/Repositories/Types:Types ... (12 actions, 4 running)\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols.swiftmodule","label":"//Sources/ResticCLIHelper/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-288"},"label":"//Sources/ResticCLIHelper/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ResticCLIHelper/Protocols:Protocols","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols_objs/ResticCLIHelperProtocol.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Protocols","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ResticCLIHelper/Protocols/ResticCLIHelperProtocol.swift","Sources/ResticCLIHelper/Protocols/ResticCommand.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.495352Z","endTime":"2025-03-25T22:47:24.495352Z"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols.swiftmodule","label":"//Sources/Features/Logging/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-264"},"label":"//Sources/Features/Logging/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Features/Logging/Protocols:Protocols","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols_objs/LoggingProtocol.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Protocols","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Features/Logging/Protocols/LoggingProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.469736Z","endTime":"2025-03-25T22:47:24.469736Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Features/Logging/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols.swiftmodule","label":"//Sources/Features/Logging/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols.swiftmodule","label":"//Sources/ResticCLIHelper/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":38}},"children":[{"progress":{"opaqueCount":39}},{"namedSet":{"id":"29"}}],"progress":{"stderr":"[327 / 669] [Sched] Compiling Swift module //Sources/SecurityInterfaces/DTOs:DTOs ... (12 actions, 5 running)\nERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Features/Logging/Protocols/BUILD.bazel:3:20: Compiling Swift module //Sources/Features/Logging/Protocols:Protocols failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Features/Logging/Protocols:Protocols) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Protocols/Protocols.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Features/Logging/Protocols/LoggingProtocol.swift:1:8: error: no such module \u0027FeaturesLoggingModels\u0027\n 1 | import FeaturesLoggingModels\n   |        `- error: no such module \u0027FeaturesLoggingModels\u0027\n 2 | import Foundation\n 3 | \nSources/Features/Logging/Protocols/LoggingProtocol.swift:1:8: error: no such module \u0027FeaturesLoggingModels\u0027\n 1 | import FeaturesLoggingModels\n   |        `- error: no such module \u0027FeaturesLoggingModels\u0027\n 2 | import Foundation\n 3 | \nERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ResticCLIHelper/Protocols/BUILD.bazel:3:20: Compiling Swift module //Sources/ResticCLIHelper/Protocols:Protocols failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ResticCLIHelper/Protocols:Protocols) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Protocols/Protocols.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ResticCLIHelper/Protocols/ResticCLIHelperProtocol.swift:2:8: error: no such module \u0027ResticCLIHelperTypes\u0027\n 1 | import Foundation\n 2 | import ResticCLIHelperTypes\n   |        `- error: no such module \u0027ResticCLIHelperTypes\u0027\n 3 | import ResticTypes\n 4 | \nSources/ResticCLIHelper/Protocols/ResticCLIHelperProtocol.swift:2:8: error: no such module \u0027ResticCLIHelperTypes\u0027\n 1 | import Foundation\n 2 | import ResticCLIHelperTypes\n   |        `- error: no such module \u0027ResticCLIHelperTypes\u0027\n 3 | import ResticTypes\n 4 | \n"}}
{"id":{"namedSet":{"id":"29"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityInterfacesFoundation/SecurityInterfacesFoundation.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesFoundation/SecurityInterfacesFoundation.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ef807b39f065094054d06cfb080182e6774ffdf34587657d2d3f77219dfbba73","length":"432"},{"name":"Sources/SecurityInterfacesFoundation/SecurityInterfacesFoundation.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesFoundation/SecurityInterfacesFoundation.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a0693f78e0a464078806f84d08e67ad7f0e3e3f7f060523736328dcba5d8be32","length":"21332"},{"name":"Sources/SecurityInterfacesFoundation/SecurityInterfacesFoundation.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesFoundation/SecurityInterfacesFoundation.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b55d3d14f6b997cafc7a05e67bcc763d58cba94a4ffac63af0a5ec323376bc0e","length":"1040"},{"name":"Sources/SecurityInterfacesFoundation/libSecurityInterfacesFoundation.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesFoundation/libSecurityInterfacesFoundation.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"680bb80e5f31472b0fb9c040b7933088afb808ad47d6f178b846057585bf4552","length":"19840"}]}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfacesFoundation:SecurityInterfacesFoundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"29"}]}]}}
{"id":{"progress":{"opaqueCount":39}},"children":[{"progress":{"opaqueCount":40}},{"namedSet":{"id":"30"}}],"progress":{}}
{"id":{"namedSet":{"id":"30"}},"namedSetOfFiles":{"files":[{"name":"Sources/Services/SecurityUtils/SecurityUtils.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/SecurityUtils.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1ed9a33276268ec32f431a4ec9f2eca448fa58e3e75ccfcee5de39d439b1a9c5","length":"808"},{"name":"Sources/Services/SecurityUtils/SecurityUtils.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/SecurityUtils.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"49ac41f361a37f274d533ffdb9da24f58caf38e0d3184610d3153d89b179f4d1","length":"17880"},{"name":"Sources/Services/SecurityUtils/SecurityUtils.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/SecurityUtils.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8331a792fa774de7ae7754d90168f9790d2c7419deda51eddd33b7713cbb7560","length":"1064"},{"name":"Sources/Services/SecurityUtils/libSecurityUtils.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/libSecurityUtils.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1a5f062f812f069733cb07d19edccb7fe337fea1f8a20beb2ab7f9e8cdaf0a59","length":"6712"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Services/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"30"}]}]}}
{"id":{"progress":{"opaqueCount":40}},"children":[{"progress":{"opaqueCount":41}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-307"},"label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters_objs/LoggerImplementation.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraLoggingAdapters/Sources/Adapters/LoggerImplementation.swift","Sources/UmbraLoggingAdapters/Sources/Adapters/SwiftyBeaverAdapter.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.511143Z","endTime":"2025-03-25T22:47:24.511143Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":41}},"children":[{"progress":{"opaqueCount":42}},{"namedSet":{"id":"31"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraLoggingAdapters/Sources/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraLoggingAdapters/Sources/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraLoggingAdapters/Sources/Adapters/LoggerImplementation.swift:2:8: error: no such module \u0027LoggingWrapper\u0027\n  1 | import Foundation\n  2 | import LoggingWrapper\n    |        `- error: no such module \u0027LoggingWrapper\u0027\n  3 | import UmbraLogging\n  4 | \nSources/UmbraLoggingAdapters/Sources/Adapters/LoggerImplementation.swift:2:8: error: no such module \u0027LoggingWrapper\u0027\n  1 | import Foundation\n  2 | import LoggingWrapper\n    |        `- error: no such module \u0027LoggingWrapper\u0027\n  3 | import UmbraLogging\n  4 | \n"}}
{"id":{"namedSet":{"id":"31"}},"namedSetOfFiles":{"files":[{"name":"Sources/Configuration/Configuration.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Configuration/Configuration.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"95f8c8361e29c49015d9a9781965ae38c9b710e86b7cc6dea1d785869cb8595e","length":"944"},{"name":"Sources/Configuration/Configuration.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Configuration/Configuration.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"461ceac44f3068b9eb91c6e7d06b884459479d698e83cdca2a7768e6d751e517","length":"18084"},{"name":"Sources/Configuration/Configuration.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Configuration/Configuration.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"df9e53cc002f0a4a6b731f947a2465791b7659fe840bce0e8d68b15c57b16865","length":"1260"},{"name":"Sources/Configuration/libConfiguration.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Configuration/libConfiguration.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"21210a0cab5695d9acb621d4b659578f00b8a0b9103545b905171579d8186742","length":"13416"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Configuration:Configuration","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"31"}]}]}}
{"id":{"progress":{"opaqueCount":42}},"children":[{"progress":{"opaqueCount":43}},{"namedSet":{"id":"32"}}],"progress":{}}
{"id":{"namedSet":{"id":"32"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraLogging/UmbraLogging.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging/UmbraLogging.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f98ca79fdbfd4e64162f0a1720ab3065139ed46a91900626983688673b015c32","length":"11404"},{"name":"Sources/UmbraLogging/UmbraLogging.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging/UmbraLogging.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6b7dedf32c619d3289df142fed60384989b8667d5964cde00cbb680e6471fc30","length":"49728"},{"name":"Sources/UmbraLogging/UmbraLogging.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging/UmbraLogging.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"493d7ab614b1bbb26fba402a8c3d379c938f42ec8039235f310cc94b10b75ff9","length":"16188"},{"name":"Sources/UmbraLogging/libUmbraLogging.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging/libUmbraLogging.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cbefae22a93f07d764fc4421751eade4b7dc29fe27fb0d365181b1944eb8ad11","length":"152112"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraLogging:UmbraLogging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"32"}]}]}}
{"id":{"progress":{"opaqueCount":43}},"children":[{"progress":{"opaqueCount":44}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols.swiftmodule","label":"//Sources/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols.swiftmodule","label":"//Sources/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-295"},"label":"//Sources/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityUtils/Protocols:Protocols","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols_objs/CredentialManager.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Protocols","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityUtils/Protocols/CredentialManager.swift","Sources/SecurityUtils/Protocols/SecurityBookmarkServiceProtocol.swift","Sources/SecurityUtils/Protocols/URLProvider.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.501154Z","endTime":"2025-03-25T22:47:24.501154Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols.swiftmodule","label":"//Sources/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":44}},"children":[{"progress":{"opaqueCount":45}},{"namedSet":{"id":"33"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityUtils/Protocols/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityUtils/Protocols:Protocols failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityUtils/Protocols:Protocols) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/Protocols/Protocols.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityUtils/Protocols/SecurityBookmarkServiceProtocol.swift:2:8: error: no such module \u0027SecurityTypes\u0027\n 1 | import Foundation\n 2 | import SecurityTypes\n   |        `- error: no such module \u0027SecurityTypes\u0027\n 3 | \n 4 | /// Protocol for security bookmark service\nSources/SecurityUtils/Protocols/SecurityBookmarkServiceProtocol.swift:2:8: error: no such module \u0027SecurityTypes\u0027\n 1 | import Foundation\n 2 | import SecurityTypes\n   |        `- error: no such module \u0027SecurityTypes\u0027\n 3 | \n 4 | /// Protocol for security bookmark service\n"}}
{"id":{"namedSet":{"id":"33"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraCore/UmbraCore.docc/UmbraCoreDocc.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.docc/UmbraCoreDocc.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3f21ab505b6bb95e57c0ba4b291708a77c19b8983f1ed56bb8aef81f0be7c8dc","length":"964"},{"name":"Sources/UmbraCore/UmbraCore.docc/UmbraCoreDocc.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.docc/UmbraCoreDocc.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"04278802e6f7352cda524514f0b4dab5d671d79f2b6f051c9a8e2a3ede0283d6","length":"18116"},{"name":"Sources/UmbraCore/UmbraCore.docc/UmbraCoreDocc.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.docc/UmbraCoreDocc.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"02a53ffd65d8b6bd50473ebaa5bc942dadf5383ae1b547fd572b2ea19f17393d","length":"1284"},{"name":"Sources/UmbraCore/UmbraCore.docc/libUmbraCoreDocc.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.docc/libUmbraCoreDocc.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"55b47258abed3e676ac192926b74617f1f1cfff999a2649c3e27f7e709831faf","length":"13560"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCore/UmbraCore.docc:UmbraCoreDocc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"33"}]}]}}
{"id":{"progress":{"opaqueCount":45}},"children":[{"progress":{"opaqueCount":46}},{"namedSet":{"id":"34"}}],"progress":{}}
{"id":{"namedSet":{"id":"34"}},"namedSetOfFiles":{"files":[{"name":"Sources/Features/Logging/Errors/Errors.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Errors/Errors.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ab3bb380e1dbb481bb047d0c43013048e48e04b9c5058c51859dd3c8fd6b0d2c","length":"1520"},{"name":"Sources/Features/Logging/Errors/Errors.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Errors/Errors.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2ae3740a26b12497fb957571b5a1a8ba718c7aec13fe8753046390a51041734a","length":"23492"},{"name":"Sources/Features/Logging/Errors/Errors.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Errors/Errors.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"dc0774c3f7f931834ece0bac7f833363cc12643ea2807c550a5c4d1bdb9c683e","length":"2380"},{"name":"Sources/Features/Logging/Errors/libErrors.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Errors/libErrors.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"dde35e27efa416b8caf33637150579771975bcb3079573c1c9ae7015e9e4eaf5","length":"27080"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Features/Logging/Errors:Errors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"34"}]}]}}
{"id":{"progress":{"opaqueCount":46}},"children":[{"progress":{"opaqueCount":47}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types.swiftmodule","label":"//Sources/Repositories/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types.swiftmodule","label":"//Sources/Repositories/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-265"},"label":"//Sources/Repositories/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Repositories/Types:Types","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types_objs/LogMetadataBuilder.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Types","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Repositories/Types/LogMetadataBuilder.swift","Sources/Repositories/Types/Repository.swift","Sources/Repositories/Types/RepositoryError.swift","Sources/Repositories/Types/RepositoryProtocols.swift","Sources/Repositories/Types/RepositoryState.swift","Sources/Repositories/Types/RepositoryStats.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.469578Z","endTime":"2025-03-25T22:47:24.469578Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Repositories/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types.swiftmodule","label":"//Sources/Repositories/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":47}},"children":[{"progress":{"opaqueCount":48}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources.swiftmodule","label":"//Sources/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Repositories/Types/BUILD.bazel:3:20: Compiling Swift module //Sources/Repositories/Types:Types failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Repositories/Types:Types) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Types/Types.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Repositories/Types/LogMetadataBuilder.swift:5:8: error: no such module \u0027UmbraLogging\u0027\n 3 | \n 4 | // Internal modules\n 5 | import UmbraLogging\n   |        `- error: no such module \u0027UmbraLogging\u0027\n 6 | \n 7 | /// A builder for creating LogMetadata with consistent keys and values.\nSources/Repositories/Types/LogMetadataBuilder.swift:5:8: error: no such module \u0027UmbraLogging\u0027\n 3 | \n 4 | // Internal modules\n 5 | import UmbraLogging\n   |        `- error: no such module \u0027UmbraLogging\u0027\n 6 | \n 7 | /// A builder for creating LogMetadata with consistent keys and values.\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources.swiftmodule","label":"//Sources/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-267"},"label":"//Sources/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Resources:Resources","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources_objs/ResourcePool.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Resources","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Resources/ResourcePool.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.469467Z","endTime":"2025-03-25T22:47:24.469467Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources.swiftmodule","label":"//Sources/Resources:Resources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":48}},"children":[{"progress":{"opaqueCount":49}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs.swiftmodule","label":"//Sources/SecurityInterfaces/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Resources/BUILD.bazel:3:20: Compiling Swift module //Sources/Resources:Resources failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Resources:Resources) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Resources.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Resources/ResourcePool.swift:2:8: error: no such module \u0027ResourcesProtocols\u0027\n  1 | import Foundation\n  2 | import ResourcesProtocols\n    |        `- error: no such module \u0027ResourcesProtocols\u0027\n  3 | import ResourcesTypes\n  4 | \nSources/Resources/ResourcePool.swift:2:8: error: no such module \u0027ResourcesProtocols\u0027\n  1 | import Foundation\n  2 | import ResourcesProtocols\n    |        `- error: no such module \u0027ResourcesProtocols\u0027\n  3 | import ResourcesTypes\n  4 | \n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs.swiftmodule","label":"//Sources/SecurityInterfaces/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-291"},"label":"//Sources/SecurityInterfaces/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfaces/DTOs:DTOs","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs_objs/SecurityKeyDTO.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","DTOs","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfaces/DTOs/SecurityKeyDTO.swift","Sources/SecurityInterfaces/DTOs/SecurityKeyInformationDTO.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.494653Z","endTime":"2025-03-25T22:47:24.494653Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfaces/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs.swiftmodule","label":"//Sources/SecurityInterfaces/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":49}},"children":[{"progress":{"opaqueCount":50}},{"namedSet":{"id":"35"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfaces/DTOs/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfaces/DTOs:DTOs failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfaces/DTOs:DTOs) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/DTOs/DTOs.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityInterfaces/DTOs/SecurityKeyDTO.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n 1 | import CoreTypesInterfaces\n   |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n 2 | import Foundation\n 3 | \nSources/SecurityInterfaces/DTOs/SecurityKeyDTO.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n 1 | import CoreTypesInterfaces\n   |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n 2 | import Foundation\n 3 | \n"}}
{"id":{"namedSet":{"id":"35"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraErrors/Core/UmbraErrorsCore.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5f62c630d592846a3f63b0d25ad94b9932cf202baf4212c7b92043e889bc7758","length":"36368"},{"name":"Sources/UmbraErrors/Core/UmbraErrorsCore.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e030c1b60a0a8f069247e8791635f8bd91fcb9de69c3c90a3621e95ad3c0650c","length":"102120"},{"name":"Sources/UmbraErrors/Core/UmbraErrorsCore.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core/UmbraErrorsCore.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8f3474c4e69c99ad1fb2ed4ef5583bf441ecb11becc52ecd4ff732d719691c90","length":"37200"},{"name":"Sources/UmbraErrors/Core/libUmbraErrorsCore.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core/libUmbraErrorsCore.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b24d7d552ea0e37ff654aaecd5f0991aadd69030dc47d32fb07b7e57209892d8","length":"398816"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/Core:UmbraErrorsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"35"}]}]}}
{"id":{"progress":{"opaqueCount":50}},"children":[{"progress":{"opaqueCount":51}},{"namedSet":{"id":"36"}}],"progress":{}}
{"id":{"namedSet":{"id":"36"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandlingCommon/ErrorHandlingCommon.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingCommon/ErrorHandlingCommon.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"328ec251a45b6b7d91908738ba7c23ab9543272eb42e4d85e645ab5f0dc2d746","length":"684"},{"name":"Sources/ErrorHandlingCommon/ErrorHandlingCommon.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingCommon/ErrorHandlingCommon.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9607a1470ccafdc2e83d56a55674b0e9307cf55df07a2ce68df1acd957b3e379","length":"17652"},{"name":"Sources/ErrorHandlingCommon/ErrorHandlingCommon.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingCommon/ErrorHandlingCommon.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"bcd1d26e39da884904bb0225c854adb6fbd56b582302bd775ce31f3e56ae1d94","length":"1132"},{"name":"Sources/ErrorHandlingCommon/libErrorHandlingCommon.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingCommon/libErrorHandlingCommon.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5d542e9253395203c53189fd3fc492bbee53d40eac1a3b32f9056cd0288d1060","length":"13096"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandlingCommon:ErrorHandlingCommon","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"36"}]}]}}
{"id":{"progress":{"opaqueCount":51}},"children":[{"progress":{"opaqueCount":52}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.swiftmodule","label":"//Sources/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.swiftmodule","label":"//Sources/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-319"},"label":"//Sources/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraCore:UmbraCore","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore_objs/UmbraCore.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraCore","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraCore/UmbraCore.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.525689Z","endTime":"2025-03-25T22:47:24.525689Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.swiftmodule","label":"//Sources/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":52}},"children":[{"progress":{"opaqueCount":53}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters.swiftmodule","label":"//Sources/NotificationService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraCore/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraCore:UmbraCore failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraCore:UmbraCore) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCore/UmbraCore.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraCore/UmbraCore.swift:1:19: error: no such module \u0027CryptoTypes\u0027\n 1 | @_exported import CryptoTypes\n   |                   `- error: no such module \u0027CryptoTypes\u0027\n 2 | @_exported import SecurityTypes\n 3 | \nSources/UmbraCore/UmbraCore.swift:1:19: error: no such module \u0027CryptoTypes\u0027\n 1 | @_exported import CryptoTypes\n   |                   `- error: no such module \u0027CryptoTypes\u0027\n 2 | @_exported import SecurityTypes\n 3 | \n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters.swiftmodule","label":"//Sources/NotificationService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-317"},"label":"//Sources/NotificationService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/NotificationService/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters_objs/NotificationServiceDTOAdapter.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/NotificationService/Adapters/NotificationServiceDTOAdapter.swift","Sources/NotificationService/Adapters/NotificationServiceDTOFactory.swift","Sources/NotificationService/Adapters/NotificationServiceDTOProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.522552Z","endTime":"2025-03-25T22:47:24.522552Z"}}
{"id":{"targetCompleted":{"label":"//Sources/NotificationService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters.swiftmodule","label":"//Sources/NotificationService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":53}},"children":[{"progress":{"opaqueCount":54}},{"namedSet":{"id":"37"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/NotificationService/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/NotificationService/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/NotificationService/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/NotificationService/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/NotificationService/Adapters/NotificationServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import os.log\nSources/NotificationService/Adapters/NotificationServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import os.log\n"}}
{"id":{"namedSet":{"id":"37"}},"namedSetOfFiles":{"files":[{"name":"Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"da39c89dd7fc99d8df151960c533a33a98062f39390b5c2fa0b244599a237cbf","length":"9092"},{"name":"Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"eea9da2afc0912ae3260ab11870bf1c27267b24a700c5949a8e47b3d61af5f0e","length":"30640"},{"name":"Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapperInterfaces/LoggingWrapperInterfaces.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"96989162b91633df7db6de16e15de7df992bbee9b220e8794a16dd4f1ea65595","length":"7392"},{"name":"Sources/LoggingWrapperInterfaces/libLoggingWrapperInterfaces.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapperInterfaces/libLoggingWrapperInterfaces.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f22b6bcf3eca0f4d7b75a841354c88b229bb1f1ba834993d664a6a9e10810788","length":"34256"}]}}
{"id":{"targetCompleted":{"label":"//Sources/LoggingWrapperInterfaces:LoggingWrapperInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"37"}]}]}}
{"id":{"progress":{"opaqueCount":54}},"children":[{"progress":{"opaqueCount":55}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils.swiftmodule","label":"//Sources/TestUtils:TestUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils.swiftmodule","label":"//Sources/TestUtils:TestUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-347"},"label":"//Sources/TestUtils:TestUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/TestUtils:TestUtils","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils_objs/TestUtils.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","TestUtils","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/TestUtils/TestUtils.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:25.081667Z","endTime":"2025-03-25T22:47:25.081667Z"}}
{"id":{"targetCompleted":{"label":"//Sources/TestUtils:TestUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils.swiftmodule","label":"//Sources/TestUtils:TestUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":55}},"children":[{"progress":{"opaqueCount":56}},{"namedSet":{"id":"38"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/TestUtils/BUILD.bazel:3:20: Compiling Swift module //Sources/TestUtils:TestUtils failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/TestUtils:TestUtils) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/TestUtils/TestUtils.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/TestUtils/TestUtils.swift:2:8: error: no such module \u0027XCTest\u0027\n 1 | import Foundation\n 2 | import XCTest\n   |        `- error: no such module \u0027XCTest\u0027\n 3 | \n 4 | /// Utility functions for testing\nSources/TestUtils/TestUtils.swift:2:8: error: no such module \u0027XCTest\u0027\n 1 | import Foundation\n 2 | import XCTest\n   |        `- error: no such module \u0027XCTest\u0027\n 3 | \n 4 | /// Utility functions for testing\n"}}
{"id":{"namedSet":{"id":"38"}},"namedSetOfFiles":{"files":[{"name":"Sources/CryptoTypes/CryptoTypesInterfaces.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/CryptoTypesInterfaces.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"86c41caaf566dad68255abdcd20cffe1221df70d0cdbfb6d9fa3f1a3b0538d9f","length":"2716"},{"name":"Sources/CryptoTypes/CryptoTypesInterfaces.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/CryptoTypesInterfaces.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"970cf1911bba420747a795d74559af53a7dd8ece90f89449fbb8e09e5bb87ead","length":"19760"},{"name":"Sources/CryptoTypes/CryptoTypesInterfaces.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/CryptoTypesInterfaces.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e84643bbcb8bbc6ffe429ca5df2df54cf5785ff2590124567b86d81ebfea634a","length":"2904"},{"name":"Sources/CryptoTypes/libCryptoTypesInterfaces.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/libCryptoTypesInterfaces.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1c37ae30dbd8d30e081ac680a7f4a2df7f8c4bbed1b12a480df34f32b5171ee8","length":"9952"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CryptoTypes:CryptoTypesInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"38"}]}]}}
{"id":{"progress":{"opaqueCount":56}},"children":[{"progress":{"opaqueCount":57}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models.swiftmodule","label":"//Sources/ResticCLIHelper/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models.swiftmodule","label":"//Sources/ResticCLIHelper/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-320"},"label":"//Sources/ResticCLIHelper/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ResticCLIHelper/Models:Models","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models_objs/FileMetadata.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Models","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ResticCLIHelper/Models/FileMetadata.swift","Sources/ResticCLIHelper/Models/RepositoryObject.swift","Sources/ResticCLIHelper/Models/RepositoryStats.swift","Sources/ResticCLIHelper/Models/SnapshotInfo.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.770091Z","endTime":"2025-03-25T22:47:24.770091Z"}}
{"id":{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models.swiftmodule","label":"//Sources/ResticCLIHelper/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":57}},"children":[{"progress":{"opaqueCount":58}},{"namedSet":{"id":"39"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ResticCLIHelper/Models/BUILD.bazel:3:20: Compiling Swift module //Sources/ResticCLIHelper/Models:Models failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ResticCLIHelper/Models:Models) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Models/Models.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ResticCLIHelper/Models/RepositoryStats.swift:2:8: error: no such module \u0027ResticTypes\u0027\n 1 | import Foundation\n 2 | import ResticTypes\n   |        `- error: no such module \u0027ResticTypes\u0027\n 3 | \n 4 | /// Statistics about a repository\nSources/ResticCLIHelper/Models/RepositoryStats.swift:2:8: error: no such module \u0027ResticTypes\u0027\n 1 | import Foundation\n 2 | import ResticTypes\n   |        `- error: no such module \u0027ResticTypes\u0027\n 3 | \n 4 | /// Statistics about a repository\n"}}
{"id":{"namedSet":{"id":"39"}},"namedSetOfFiles":{"files":[{"name":"Sources/Services/CryptoService/CryptoService.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CryptoService/CryptoService.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6840879ecd3aef5a2f399a389ca6fd8445faf99e3a3bc4371b550902713c695e","length":"988"},{"name":"Sources/Services/CryptoService/CryptoService.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CryptoService/CryptoService.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"aef1902158f32a147f0085595587eae0849f9380245e7e241bc6b9b953e3ee75","length":"18136"},{"name":"Sources/Services/CryptoService/CryptoService.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CryptoService/CryptoService.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"00698620a996988bc3a8268c2e8a6c0a7851682f81f436cbd9bff33b43106283","length":"1308"},{"name":"Sources/Services/CryptoService/libCryptoService.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/CryptoService/libCryptoService.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"28928782fb8e7a0fb1dcf7be037c65a78589ebc9160b00f5dddea611f198c7ef","length":"13752"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Services/CryptoService:CryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"39"}]}]}}
{"id":{"progress":{"opaqueCount":58}},"children":[{"progress":{"opaqueCount":59}},{"namedSet":{"id":"40"}}],"progress":{}}
{"id":{"namedSet":{"id":"40"}},"namedSetOfFiles":{"files":[{"name":"Sources/Features/Logging/Logging.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Logging.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"aa49e1139e7813e4740bcb8f9cdde38889412c6eff443a8e2d1671569a67779e","length":"952"},{"name":"Sources/Features/Logging/Logging.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Logging.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9d1f04bc1f1d2a29b9a6317cf92212d2b20b198950093c318398f675ce383583","length":"18032"},{"name":"Sources/Features/Logging/Logging.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Logging.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e107195a298174e297b3545baf2334be847ec465a88cd0d880ce5d1356c64833","length":"1228"},{"name":"Sources/Features/Logging/libLogging.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/libLogging.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"fa948036cd211e9f5e84647e80e1ab8ea31705af1fa96f6e40e20fcd60e0dccf","length":"12984"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Features/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"40"}]}]}}
{"id":{"progress":{"opaqueCount":59}},"children":[{"progress":{"opaqueCount":60}},{"namedSet":{"id":"41"}}],"progress":{}}
{"id":{"namedSet":{"id":"41"}},"namedSetOfFiles":{"files":[{"name":"Sources/Snapshots/Snapshots.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/Snapshots.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"05079ca958b5f5f54531f8375d6ce92fef7b89b1da7658534f6379a5db40aee0","length":"3728"},{"name":"Sources/Snapshots/Snapshots.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/Snapshots.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"30d252503a38339e40aff61fb86064c3d25980a0d085f0ebe2368606cd002ed4","length":"17980"},{"name":"Sources/Snapshots/Snapshots.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/Snapshots.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7649a68a01457249c1a42ef29fafd2d6be287945652dc58dc4ac675b013078ea","length":"4560"},{"name":"Sources/Snapshots/libSnapshots.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/libSnapshots.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"bc68ab02b0c901c5caa86231ef420ff9947bf38703924be6ba6abe5c6aba6859","length":"6832"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Snapshots:Snapshots","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"41"}]}]}}
{"id":{"progress":{"opaqueCount":60}},"children":[{"progress":{"opaqueCount":61}},{"namedSet":{"id":"42"}}],"progress":{}}
{"id":{"namedSet":{"id":"42"}},"namedSetOfFiles":{"files":[{"name":"Sources/Snapshots/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"554c9df78be24802964cf4d4470771356a47bc0b897198ecf03553070ff9ed07","length":"648"},{"name":"Sources/Snapshots/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d96d18a098bbc6fb86bdf504f61aa90db07ec1ee5fbc906a262ca522435362fa","length":"17272"},{"name":"Sources/Snapshots/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c246ba9fcbdc2dfb69a1a22caef5c54e2162808f57e47fa6751508b22ef0e416","length":"900"},{"name":"Sources/Snapshots/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Snapshots/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7933581964fc0b37b50b47cd5b80ad9360d2e1a808a0655420a2e126939d2169","length":"4304"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Snapshots/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"42"}]}]}}
{"id":{"progress":{"opaqueCount":61}},"children":[{"progress":{"opaqueCount":62}},{"namedSet":{"id":"43"}}],"progress":{}}
{"id":{"namedSet":{"id":"43"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorTypes/ErrorTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorTypes/ErrorTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b29a365b8f65ca26bb69b75d9c4a022370464a10d0c2fbb0ec9c764488fb46d4","length":"928"},{"name":"Sources/ErrorTypes/ErrorTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorTypes/ErrorTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4418fcdd4fb879108e29b7cc9c3456916f72bfa02b51ce086a2704654dbe0a1c","length":"18068"},{"name":"Sources/ErrorTypes/ErrorTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorTypes/ErrorTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"846112428bface4d7fc711ab1ae7b2bd6905259c8a93b91d03eb33b93c5c113e","length":"1248"},{"name":"Sources/ErrorTypes/libErrorTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorTypes/libErrorTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"44214cb0a04ff6abc55c1e235ef70e62aaa4e8b2e348233327100779d6378063","length":"13240"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorTypes:ErrorTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"43"}]}]}}
{"id":{"progress":{"opaqueCount":62}},"children":[{"progress":{"opaqueCount":63}},{"namedSet":{"id":"44"}}],"progress":{}}
{"id":{"namedSet":{"id":"44"}},"namedSetOfFiles":{"files":[{"name":"Sources/CryptoTypes/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"04df5d4ccb1706d7b1cef194334be5f4a92ab008ae84b6739e387bdddc99625d","length":"3576"},{"name":"Sources/CryptoTypes/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"be6423ce68488816ea01d5ec591df84c6a2e8e4a10ac5b912b22a1b956829110","length":"20952"},{"name":"Sources/CryptoTypes/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d4f42e1e5ff010d3073cae722c3a28caf470c5dbd271e12f953dbdb4e4928d5d","length":"4004"},{"name":"Sources/CryptoTypes/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f9f8c3987586c137ebb6a8d4737ba42901a21fc8b5fe95183184523758fe46f0","length":"19720"}]}}
{"id":{"progress":{"opaqueCount":63}},"children":[{"progress":{"opaqueCount":64}},{"namedSet":{"id":"45"}}],"progress":{}}
{"id":{"targetCompleted":{"label":"//Sources/CryptoTypes/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"44"}]}]}}
{"id":{"namedSet":{"id":"45"}},"namedSetOfFiles":{"files":[{"name":"Sources/CryptoSwiftFoundationIndependent/CryptoSwiftFoundationIndependent.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoSwiftFoundationIndependent/CryptoSwiftFoundationIndependent.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cdbae6fbf74e94adf5608d839192a67e6ae9b57db5d67de26e83aff841f5c701","length":"6728"},{"name":"Sources/CryptoSwiftFoundationIndependent/CryptoSwiftFoundationIndependent.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoSwiftFoundationIndependent/CryptoSwiftFoundationIndependent.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5d22ed9946528eb681d7d6ab37fbacbf4a3a4385667e2cfbb3cec5335366c4ac","length":"29404"},{"name":"Sources/CryptoSwiftFoundationIndependent/CryptoSwiftFoundationIndependent.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoSwiftFoundationIndependent/CryptoSwiftFoundationIndependent.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7d7d4f0f1b377ebc9c6f2e66e90fabac64fdbeeac33f5e88f287ec2a075eed53","length":"7092"},{"name":"Sources/CryptoSwiftFoundationIndependent/libCryptoSwiftFoundationIndependent.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoSwiftFoundationIndependent/libCryptoSwiftFoundationIndependent.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6566bf7834460eb9be16d3f85013f26fed16e20a744b6d04cb5eba79df2d04b3","length":"64104"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CryptoSwiftFoundationIndependent:CryptoSwiftFoundationIndependent","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"45"}]}]}}
{"id":{"progress":{"opaqueCount":64}},"children":[{"progress":{"opaqueCount":65}},{"namedSet":{"id":"46"}}],"progress":{}}
{"id":{"namedSet":{"id":"46"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityInterfaces/Refactoring/Refactoring.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Refactoring/Refactoring.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6e8291443dcda70bc2b34a26e07052097e6c3cbfbff050a2ff042d98fd5169c0","length":"1024"},{"name":"Sources/SecurityInterfaces/Refactoring/Refactoring.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Refactoring/Refactoring.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"abfac69f7e9993396e56f135d993692b79c4f712346f66eec29360b165dd25e7","length":"18176"},{"name":"Sources/SecurityInterfaces/Refactoring/Refactoring.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Refactoring/Refactoring.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c18355513e4ed48e9999164f6be220aff901cc84b426e6768d65e6471241aca6","length":"1344"},{"name":"Sources/SecurityInterfaces/Refactoring/libRefactoring.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Refactoring/libRefactoring.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9b2c5543977f6b2d85ff133050f2038da761e476052f5a64732ee800bda9dfe6","length":"13984"}]}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Refactoring:Refactoring","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"46"}]}]}}
{"id":{"progress":{"opaqueCount":65}},"children":[{"progress":{"opaqueCount":66}},{"namedSet":{"id":"47"}}],"progress":{}}
{"id":{"namedSet":{"id":"47"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityTypes/Types/Types.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Types/Types.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"37f03079f06aecc0bdf42d6ac26337df21922288df65ce8aa23c906779c11a93","length":"2780"},{"name":"Sources/SecurityTypes/Types/Types.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Types/Types.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ba0c41e330aa77076f76702dd0a7090c521d51731c8e9145b9cd887aaf0e0301","length":"28976"},{"name":"Sources/SecurityTypes/Types/Types.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Types/Types.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b27848caafa7536187d0b42516985e34a01c4fed51953ee93002ea99f11e5cc6","length":"4356"},{"name":"Sources/SecurityTypes/Types/libTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/Types/libTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f62e1a17ccae2a76857cd984abf7a450a9e9140435b6cbe75442189bd9b9f7fb","length":"49240"}]}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"47"}]}]}}
{"id":{"progress":{"opaqueCount":66}},"children":[{"progress":{"opaqueCount":67}},{"namedSet":{"id":"48"}}],"progress":{}}
{"id":{"namedSet":{"id":"48"}},"namedSetOfFiles":{"files":[{"name":"Sources/Resources/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3d92a6dbf2b9dc203828484aca8a2dc31cdcff5dbf8ddb884ce9512101171b42","length":"10288"},{"name":"Sources/Resources/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"859ec5bc3784aa2fb701fd44e500264015ea5349de7eaaea10f2ee1c452137b5","length":"39192"},{"name":"Sources/Resources/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"12b2a3649578dacf6a0250f39f5eccb9bf6dce6cc91373a4ecc7a5f34f236048","length":"10860"},{"name":"Sources/Resources/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Resources/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"57c242ffb60fcfcee17d2a132cc5c7cad58b68ca1144a24ef67efceb62593818","length":"49952"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Resources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"48"}]}]}}
{"id":{"progress":{"opaqueCount":67}},"children":[{"progress":{"opaqueCount":68}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests.swiftmodule","label":"//Sources/KeyManagementTypes/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"[394 / 669] Compiling Swift module //Sources/Repositories:Repositories; 0s disk-cache, worker ... (12 actions, 5 running)\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests.swiftmodule","label":"//Sources/KeyManagementTypes/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-348"},"label":"//Sources/KeyManagementTypes/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/KeyManagementTypes/Tests:Tests","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests_objs/KeyMetadataTests.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Tests","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/KeyManagementTypes/Tests/KeyMetadataTests.swift","Sources/KeyManagementTypes/Tests/KeyStatusTests.swift","Sources/KeyManagementTypes/Tests/StorageLocationTests.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:26.457994Z","endTime":"2025-03-25T22:47:26.457994Z"}}
{"id":{"targetCompleted":{"label":"//Sources/KeyManagementTypes/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests.swiftmodule","label":"//Sources/KeyManagementTypes/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":68}},"children":[{"progress":{"opaqueCount":69}},{"namedSet":{"id":"49"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/KeyManagementTypes/Tests/BUILD.bazel:3:20: Compiling Swift module //Sources/KeyManagementTypes/Tests:Tests failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/KeyManagementTypes/Tests:Tests) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes/Tests/Tests.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/KeyManagementTypes/Tests/KeyMetadataTests.swift:2:8: error: no such module \u0027KeyManagementTypes\u0027\n  1 | import Foundation\n  2 | import KeyManagementTypes\n    |        `- error: no such module \u0027KeyManagementTypes\u0027\n  3 | import XCTest\n  4 | \nSources/KeyManagementTypes/Tests/KeyMetadataTests.swift:2:8: error: no such module \u0027KeyManagementTypes\u0027\n  1 | import Foundation\n  2 | import KeyManagementTypes\n    |        `- error: no such module \u0027KeyManagementTypes\u0027\n  3 | import XCTest\n  4 | \n"}}
{"id":{"namedSet":{"id":"49"}},"namedSetOfFiles":{"files":[{"name":"Sources/ServiceTypes/ServiceTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ServiceTypes/ServiceTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f20231f080644cb0b26a1619318da05d8394242264a27547ab7e27b013dae428","length":"1116"},{"name":"Sources/ServiceTypes/ServiceTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ServiceTypes/ServiceTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c52762fe79c64a96ee273b4fd0a0cbbbbc159b6f3953546c782950540f6f9788","length":"17952"},{"name":"Sources/ServiceTypes/ServiceTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ServiceTypes/ServiceTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7dc4665b6d60c8a88671f0f6e410bea66cb7bbfda9da20ca52aa204cabf7031e","length":"1744"},{"name":"Sources/ServiceTypes/libServiceTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ServiceTypes/libServiceTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"eb6ce34393e37fd6041f30792da014aea8a65b728dc24e88bd7f92dd3d2c64d7","length":"8528"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ServiceTypes:ServiceTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"49"}]}]}}
{"id":{"progress":{"opaqueCount":69}},"children":[{"progress":{"opaqueCount":70}},{"namedSet":{"id":"50"}}],"progress":{}}
{"id":{"namedSet":{"id":"50"}},"namedSetOfFiles":{"files":[{"name":"Sources/CryptoServiceProtocol/CryptoServiceProtocol.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoServiceProtocol/CryptoServiceProtocol.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"66854ab39ecb7dd9c7722b9b512bf2941e62b835121be73a3dbfb01a3169ad10","length":"428"},{"name":"Sources/CryptoServiceProtocol/CryptoServiceProtocol.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoServiceProtocol/CryptoServiceProtocol.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"bffe104a086746bccaaa70d2a708a6314d722fdf6ab0104821bf783e14a55c6f","length":"17340"},{"name":"Sources/CryptoServiceProtocol/CryptoServiceProtocol.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoServiceProtocol/CryptoServiceProtocol.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"40b01cb9760ee7d2f16e3163acd2e26ebc14b051ebb30a47cb654b9dc5f5c387","length":"840"},{"name":"Sources/CryptoServiceProtocol/libCryptoServiceProtocol.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoServiceProtocol/libCryptoServiceProtocol.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a4aef38a18709dce9aea21df5c9a238c2957fbfed2735599f019abc1b37d5a65","length":"8896"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CryptoServiceProtocol:CryptoServiceProtocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"50"}]}]}}
{"id":{"progress":{"opaqueCount":70}},"children":[{"progress":{"opaqueCount":71}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-353"},"label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols_objs/LogFormatterProtocol.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Protocols","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraLoggingAdapters/Sources/Protocols/LogFormatterProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:26.468020Z","endTime":"2025-03-25T22:47:26.468020Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":71}},"children":[{"progress":{"opaqueCount":72}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter.swiftmodule","label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraLoggingAdapters/Sources/Protocols/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraLoggingAdapters/Sources/Protocols:Protocols) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/Protocols/Protocols.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraLoggingAdapters/Sources/Protocols/LogFormatterProtocol.swift:2:8: error: no such module \u0027UmbraLogging\u0027\n 1 | import Foundation\n 2 | import UmbraLogging\n   |        `- error: no such module \u0027UmbraLogging\u0027\n 3 | \n 4 | /// Protocol defining log formatting capabilities\nSources/UmbraLoggingAdapters/Sources/Protocols/LogFormatterProtocol.swift:2:8: error: no such module \u0027UmbraLogging\u0027\n 1 | import Foundation\n 2 | import UmbraLogging\n   |        `- error: no such module \u0027UmbraLogging\u0027\n 3 | \n 4 | /// Protocol defining log formatting capabilities\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter.swiftmodule","label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-359"},"label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter_objs/CredentialManagerDTOAdapter.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","ServicesDTOAdapter","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Services/ServicesDTOAdapter/CredentialManagerDTOAdapter.swift","Sources/Services/ServicesDTOAdapter/SecurityUtilsDTOAdapter.swift","Sources/Services/ServicesDTOAdapter/ServicesErrorAdapter.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:26.746770Z","endTime":"2025-03-25T22:47:26.746770Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter.swiftmodule","label":"//Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":72}},"children":[{"progress":{"opaqueCount":73}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models.swiftmodule","label":"//Sources/SecurityInterfaces/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Services/ServicesDTOAdapter/BUILD.bazel:3:20: Compiling Swift module //Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Services/ServicesDTOAdapter:ServicesDTOAdapter) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/ServicesDTOAdapter/ServicesDTOAdapter.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Services/ServicesDTOAdapter/CredentialManagerDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\nSources/Services/ServicesDTOAdapter/CredentialManagerDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models.swiftmodule","label":"//Sources/SecurityInterfaces/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-364"},"label":"//Sources/SecurityInterfaces/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfaces/Models:Models","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models_objs/SecurityError.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Models","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfaces/Models/SecurityError.swift","Sources/SecurityInterfaces/Models/SecurityModels.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:26.772004Z","endTime":"2025-03-25T22:47:26.772004Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models.swiftmodule","label":"//Sources/SecurityInterfaces/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":73}},"children":[{"progress":{"opaqueCount":74}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands.swiftmodule","label":"//Sources/ResticCLIHelper/Commands:Commands","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfaces/Models/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfaces/Models:Models failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfaces/Models:Models) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Models/Models.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityInterfaces/Models/SecurityError.swift:1:8: error: no such module \u0027UmbraCoreTypes\u0027\n 1 | import UmbraCoreTypes\n   |        `- error: no such module \u0027UmbraCoreTypes\u0027\n 2 | import UmbraErrors\n 3 | import UmbraErrorsCore\nSources/SecurityInterfaces/Models/SecurityError.swift:1:8: error: no such module \u0027UmbraCoreTypes\u0027\n 1 | import UmbraCoreTypes\n   |        `- error: no such module \u0027UmbraCoreTypes\u0027\n 2 | import UmbraErrors\n 3 | import UmbraErrorsCore\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands.swiftmodule","label":"//Sources/ResticCLIHelper/Commands:Commands","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-365"},"label":"//Sources/ResticCLIHelper/Commands:Commands","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ResticCLIHelper/Commands:Commands","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands_objs/BackupCommand.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Commands","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ResticCLIHelper/Commands/BackupCommand.swift","Sources/ResticCLIHelper/Commands/CheckCommand.swift","Sources/ResticCLIHelper/Commands/CopyCommand.swift","Sources/ResticCLIHelper/Commands/DiffCommand.swift","Sources/ResticCLIHelper/Commands/FindCommand.swift","Sources/ResticCLIHelper/Commands/ForgetCommand.swift","Sources/ResticCLIHelper/Commands/InitCommand.swift","Sources/ResticCLIHelper/Commands/ListCommand.swift","Sources/ResticCLIHelper/Commands/LsCommand.swift","Sources/ResticCLIHelper/Commands/PruneCommand.swift","Sources/ResticCLIHelper/Commands/RebuildIndexCommand.swift","Sources/ResticCLIHelper/Commands/RepairCommand.swift","Sources/ResticCLIHelper/Commands/RestoreCommand.swift","Sources/ResticCLIHelper/Commands/SnapshotCommand.swift","Sources/ResticCLIHelper/Commands/StatsCommand.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:26.776983Z","endTime":"2025-03-25T22:47:26.776983Z"}}
{"id":{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Commands:Commands","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands.swiftmodule","label":"//Sources/ResticCLIHelper/Commands:Commands","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":74}},"children":[{"progress":{"opaqueCount":75}},{"namedSet":{"id":"51"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ResticCLIHelper/Commands/BUILD.bazel:3:20: Compiling Swift module //Sources/ResticCLIHelper/Commands:Commands failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ResticCLIHelper/Commands:Commands) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Commands/Commands.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ResticCLIHelper/Commands/BackupCommand.swift:2:8: error: no such module \u0027ResticTypes\u0027\n  1 | import Foundation\n  2 | import ResticTypes\n    |        `- error: no such module \u0027ResticTypes\u0027\n  3 | \n  4 | /// Command for creating backups\nSources/ResticCLIHelper/Commands/BackupCommand.swift:2:8: error: no such module \u0027ResticTypes\u0027\n  1 | import Foundation\n  2 | import ResticTypes\n    |        `- error: no such module \u0027ResticTypes\u0027\n  3 | \n  4 | /// Command for creating backups\n"}}
{"id":{"namedSet":{"id":"51"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraSecurityBridge/UmbraSecurityBridge.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/UmbraSecurityBridge.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d00fd754e1acfea19db4d04515d362e1a4a35bcfe45e606d8041977fed3d3001","length":"984"},{"name":"Sources/UmbraSecurityBridge/UmbraSecurityBridge.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/UmbraSecurityBridge.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"43551a306a6311d9955729e4457c6e472f65574d0c21dc26248c0611a06a496e","length":"18140"},{"name":"Sources/UmbraSecurityBridge/UmbraSecurityBridge.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/UmbraSecurityBridge.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a825a37653a2d7cc03ea22e5fc1855fc8f3f389efa2cc75ebbb9480fab350fc9","length":"1300"},{"name":"Sources/UmbraSecurityBridge/libUmbraSecurityBridge.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/libUmbraSecurityBridge.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ccd4ec5323a3bb83dbc54b8f682a9d3fd5ffb45c632522b2580e78f9930c0235","length":"13904"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurityBridge:UmbraSecurityBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"51"}]}]}}
{"id":{"progress":{"opaqueCount":75}},"children":[{"progress":{"opaqueCount":76}},{"namedSet":{"id":"52"}}],"progress":{}}
{"id":{"namedSet":{"id":"52"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/Security/Security.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security/Security.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"007bf5154f0e9fa7cb8d0dbd97647a75f39a53290c6531705c038418dacd462e","length":"21736"},{"name":"Sources/CoreDTOs/Sources/Security/Security.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security/Security.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cc48fd46d0c5dc9c247b6567cfa0d29d0bf53e7e5d59e17940138b769e50b462","length":"83256"},{"name":"Sources/CoreDTOs/Sources/Security/Security.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security/Security.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"af7caa4a6f672ec52ef522036c92d003ceef352c1675ece127cd4c0d5278d197","length":"24032"},{"name":"Sources/CoreDTOs/Sources/Security/libSecurity.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security/libSecurity.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d8f44b459fd9e81a477766da690961d11ebd6e9e56332daa1dd4dbbdd255d3bd","length":"219504"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Security:Security","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"52"}]}]}}
{"id":{"progress":{"opaqueCount":76}},"children":[{"progress":{"opaqueCount":77}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples.swiftmodule","label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples.swiftmodule","label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-366"},"label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ResticCLIHelper/Documentation/Examples:Examples","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples_objs/ProgressReporting.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Examples","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ResticCLIHelper/Documentation/Examples/ProgressReporting.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:26.835426Z","endTime":"2025-03-25T22:47:26.835426Z"}}
{"id":{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples.swiftmodule","label":"//Sources/ResticCLIHelper/Documentation/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":77}},"children":[{"progress":{"opaqueCount":78}},{"namedSet":{"id":"53"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ResticCLIHelper/Documentation/Examples/BUILD.bazel:3:20: Compiling Swift module //Sources/ResticCLIHelper/Documentation/Examples:Examples failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ResticCLIHelper/Documentation/Examples:Examples) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Documentation/Examples/Examples.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ResticCLIHelper/Documentation/Examples/ProgressReporting.swift:2:8: error: no such module \u0027ResticTypes\u0027\n  1 | import Foundation\n  2 | import ResticTypes\n    |        `- error: no such module \u0027ResticTypes\u0027\n  3 | \n  4 | /// Example progress handler that prints progress to the console\nSources/ResticCLIHelper/Documentation/Examples/ProgressReporting.swift:2:8: error: no such module \u0027ResticTypes\u0027\n  1 | import Foundation\n  2 | import ResticTypes\n    |        `- error: no such module \u0027ResticTypes\u0027\n  3 | \n  4 | /// Example progress handler that prints progress to the console\n"}}
{"id":{"namedSet":{"id":"53"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityProtocolsCore/Sources/SecurityProtocolsCore.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/SecurityProtocolsCore.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"34808c9cc741151dec3826ae7a3feb417a75989941f9c8756c8a00dcbec6400e","length":"728"},{"name":"Sources/SecurityProtocolsCore/Sources/SecurityProtocolsCore.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/SecurityProtocolsCore.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"129c4082352953e132a2fba5845bd914e30afa5cfda7f1c422cdc3fe4d706641","length":"17976"},{"name":"Sources/SecurityProtocolsCore/Sources/SecurityProtocolsCore.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/SecurityProtocolsCore.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"aa3958b5e1c16d4f82e5e6a30264ab71dadefb45a84bcfd44a7e6f7e5d12c21a","length":"1088"},{"name":"Sources/SecurityProtocolsCore/Sources/libSecurityProtocolsCore.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/libSecurityProtocolsCore.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"64615e3205e4a14b8a17ac4afd033c77cec88d4d6284500784fe32417b7ef3cf","length":"7416"}]}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources:SecurityProtocolsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"53"}]}]}}
{"id":{"progress":{"opaqueCount":78}},"children":[{"progress":{"opaqueCount":79}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models.swiftmodule","label":"//Sources/ErrorHandling/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models.swiftmodule","label":"//Sources/ErrorHandling/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-373"},"label":"//Sources/ErrorHandling/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ErrorHandling/Models:Models","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models_objs/CommonError.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Models","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ErrorHandling/Models/CommonError.swift","Sources/ErrorHandling/Models/CoreError.swift","Sources/ErrorHandling/Models/ErrorContext.swift","Sources/ErrorHandling/Models/GenericUmbraError.swift","Sources/ErrorHandling/Models/ServiceErrorTypes.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.017505Z","endTime":"2025-03-25T22:47:27.017505Z"}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models.swiftmodule","label":"//Sources/ErrorHandling/Models:Models","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":79}},"children":[{"progress":{"opaqueCount":80}},{"namedSet":{"id":"54"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ErrorHandling/Models/BUILD.bazel:3:20: Compiling Swift module //Sources/ErrorHandling/Models:Models failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ErrorHandling/Models:Models) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Models/Models.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nSources/ErrorHandling/Models/GenericUmbraError.swift:190:12: error: \u0027any UmbraError\u0027 cannot be constructed because it has no accessible initializers\n188 |     )\n189 |     \n190 |     return UmbraErrorsCore.UmbraError(\n    |            `- error: \u0027any UmbraError\u0027 cannot be constructed because it has no accessible initializers\n191 |       context: errorContext,\n192 |       code: code,\n\nSources/ErrorHandling/Models/ServiceErrorTypes.swift:163:12: error: \u0027any UmbraError\u0027 cannot be constructed because it has no accessible initializers\n161 |     \n162 |     // Create UmbraError with the context\n163 |     return UmbraErrorsCore.UmbraError(\n    |            `- error: \u0027any UmbraError\u0027 cannot be constructed because it has no accessible initializers\n164 |       context: errorContext,\n165 |       code: errorType,\n"}}
{"id":{"namedSet":{"id":"54"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Types/Types.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Types/Types.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d1023860a5f1a790387fd5d5ae705a699fe86c58babdc6059ca0119540428bce","length":"17116"},{"name":"Sources/ErrorHandling/Types/Types.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Types/Types.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8b69c2a6f83d74ada0347e85434f304d7763c67d68c5bf628e26f59d6d842aa9","length":"61108"},{"name":"Sources/ErrorHandling/Types/Types.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Types/Types.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"27f79b80edd3b709a5133aa43efda668cb37b46dfab7c9012573961f69f64d16","length":"25364"},{"name":"Sources/ErrorHandling/Types/libTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Types/libTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f7b3f70ae2cf4eb3d489dabb0df0df89fa7cc486903c1f29fd496e80f5870e45","length":"244448"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"54"}]}]}}
{"id":{"progress":{"opaqueCount":80}},"children":[{"progress":{"opaqueCount":81}},{"namedSet":{"id":"55"}}],"progress":{}}
{"id":{"namedSet":{"id":"55"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Common/Common.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Common/Common.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f444860e16b0c961cc635ca89d751b9668c9ed82a1b2f2ab441a46c4fbd62012","length":"6332"},{"name":"Sources/ErrorHandling/Common/Common.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Common/Common.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8f44f5341f060770b7914030b3857eda2cba1e1d70d182722941c2dd285a399e","length":"34060"},{"name":"Sources/ErrorHandling/Common/Common.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Common/Common.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1295963b8dcc69c892b5ae3dec4f0a2e7194cbf5a91a796d744a5c6854b7ecfc","length":"9144"},{"name":"Sources/ErrorHandling/Common/libCommon.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Common/libCommon.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"bf80dc87cd0779faafb1adb0c038db2152a05571603450d95f2b2376b92c5ce9","length":"134728"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Common:Common","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"55"}]}]}}
{"id":{"progress":{"opaqueCount":81}},"children":[{"progress":{"opaqueCount":82}},{"namedSet":{"id":"56"}}],"progress":{}}
{"id":{"namedSet":{"id":"56"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Interfaces/Interfaces.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces/Interfaces.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5cf977dd9186b9d94dc549597d1a10541445676ae657fe83e1efce01369030d4","length":"38336"},{"name":"Sources/ErrorHandling/Interfaces/Interfaces.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces/Interfaces.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"eabd9cdad1a9cc7ba73d83a657de5f4b0a28201e27df121af01b4be72568c2e2","length":"76744"},{"name":"Sources/ErrorHandling/Interfaces/Interfaces.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces/Interfaces.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4195ec9a0f102c8bd032fdf1c6cbba2be342a90a3fc1c791649b74ff9515934a","length":"42760"},{"name":"Sources/ErrorHandling/Interfaces/libInterfaces.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces/libInterfaces.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"290eb34a5956d1c0052e7426be5b5d97e7134637c3365ea22f0d810f1b212d43","length":"240632"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Interfaces:Interfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"56"}]}]}}
{"id":{"progress":{"opaqueCount":82}},"children":[{"progress":{"opaqueCount":83}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper.swiftmodule","label":"//Sources/LoggingWrapper:LoggingWrapper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"progress":{"opaqueCount":83}},"children":[{"progress":{"opaqueCount":84}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper.swiftmodule","label":"//Sources/ResticCLIHelper:ResticCLIHelper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper.swiftmodule","label":"//Sources/LoggingWrapper:LoggingWrapper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-378"},"label":"//Sources/LoggingWrapper:LoggingWrapper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/LoggingWrapper:LoggingWrapper","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper_objs/LogLevel.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapperInterfaces","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","LoggingWrapper","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/LoggingWrapper/LogLevel.swift","Sources/LoggingWrapper/Logger.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.088541Z","endTime":"2025-03-25T22:47:27.088541Z"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper.swiftmodule","label":"//Sources/ResticCLIHelper:ResticCLIHelper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-375"},"label":"//Sources/ResticCLIHelper:ResticCLIHelper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ResticCLIHelper:ResticCLIHelper","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper_objs/ProgressParser.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ResticTypes","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","ResticCLIHelper","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ResticCLIHelper/ProgressParser.swift","Sources/ResticCLIHelper/ResticCLIHelper.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.040324Z","endTime":"2025-03-25T22:47:27.040324Z"}}
{"id":{"targetCompleted":{"label":"//Sources/LoggingWrapper:LoggingWrapper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper.swiftmodule","label":"//Sources/LoggingWrapper:LoggingWrapper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/ResticCLIHelper:ResticCLIHelper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper.swiftmodule","label":"//Sources/ResticCLIHelper:ResticCLIHelper","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":84}},"children":[{"progress":{"opaqueCount":85}},{"namedSet":{"id":"57"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/LoggingWrapper/BUILD.bazel:3:20: Compiling Swift module //Sources/LoggingWrapper:LoggingWrapper failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/LoggingWrapper:LoggingWrapper) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/LoggingWrapper/LoggingWrapper.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/LoggingWrapper/Logger.swift:3:24: error: no such module \u0027SwiftyBeaver\u0027\n  1 | import Foundation\n  2 | import LoggingWrapperInterfaces\n  3 | @preconcurrency import SwiftyBeaver\n    |                        `- error: no such module \u0027SwiftyBeaver\u0027\n  4 | \n  5 | /// A simple logging facade that wraps SwiftyBeaver\nSources/LoggingWrapper/Logger.swift:3:24: error: no such module \u0027SwiftyBeaver\u0027\n  1 | import Foundation\n  2 | import LoggingWrapperInterfaces\n  3 | @preconcurrency import SwiftyBeaver\n    |                        `- error: no such module \u0027SwiftyBeaver\u0027\n  4 | \n  5 | /// A simple logging facade that wraps SwiftyBeaver\nERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ResticCLIHelper/BUILD.bazel:3:20: Compiling Swift module //Sources/ResticCLIHelper:ResticCLIHelper failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ResticCLIHelper:ResticCLIHelper) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/ResticCLIHelper.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ResticCLIHelper/ResticCLIHelper.swift:47:8: error: no such module \u0027UmbraLogging\u0027\n 45 | import Foundation\n 46 | import ResticTypes\n 47 | import UmbraLogging\n    |        `- error: no such module \u0027UmbraLogging\u0027\n 48 | \n 49 | /// A helper class that provides a Swift interface to the Restic command-line tool.\nSources/ResticCLIHelper/ResticCLIHelper.swift:47:8: error: no such module \u0027UmbraLogging\u0027\n 45 | import Foundation\n 46 | import ResticTypes\n 47 | import UmbraLogging\n    |        `- error: no such module \u0027UmbraLogging\u0027\n 48 | \n 49 | /// A helper class that provides a Swift interface to the Restic command-line tool.\n"}}
{"id":{"namedSet":{"id":"57"}},"namedSetOfFiles":{"files":[{"name":"Sources/ResticTypes/ResticTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticTypes/ResticTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a2b2254803820d9f51b21af1d2b12f7fd194424ca012420a50947a76c8c2c7b8","length":"17592"},{"name":"Sources/ResticTypes/ResticTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticTypes/ResticTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7a612c7610ca40300d351e61605a13c8976d9f58644139b116714603403600f6","length":"84244"},{"name":"Sources/ResticTypes/ResticTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticTypes/ResticTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"70aad1fae408af80300503404369a03ae471279f8abe73a4b2cb70f6201bc057","length":"24280"},{"name":"Sources/ResticTypes/libResticTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticTypes/libResticTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ee2b4394b68c1f74f8e5b172e024dda84afd68f69e8134d1b6f05a46e9b99024","length":"260496"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ResticTypes:ResticTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"57"}]}]}}
{"id":{"progress":{"opaqueCount":85}},"children":[{"progress":{"opaqueCount":86}},{"namedSet":{"id":"58"}}],"progress":{}}
{"id":{"namedSet":{"id":"58"}},"namedSetOfFiles":{"files":[{"name":"Sources/CryptoTypes/CryptoTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/CryptoTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"50435ce33b0f19431a4c1e81203658f026e7456c8ebb07fb921830268c0ef867","length":"3240"},{"name":"Sources/CryptoTypes/CryptoTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/CryptoTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3c7faf8d7befcc48ba8cc544746a7509d56214508bbe63c6d9a8144237518f5e","length":"20996"},{"name":"Sources/CryptoTypes/CryptoTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/CryptoTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d7db430cfa190f83ea396b38a03800c3b0e1d13a451608986d66f8172820a2ac","length":"3572"},{"name":"Sources/CryptoTypes/libCryptoTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/libCryptoTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"15e0ebb2fffc25cd8f7d4d003aac26e618f654f0d560371410a4feb33d320dab","length":"20280"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CryptoTypes:CryptoTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"58"}]}]}}
{"id":{"progress":{"opaqueCount":86}},"children":[{"progress":{"opaqueCount":87}},{"namedSet":{"id":"59"}}],"progress":{}}
{"id":{"namedSet":{"id":"59"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityProtocolsCore/SecurityProtocolsCore.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/SecurityProtocolsCore.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9ddf5f366480c8d650522235114a1f92286ac468085aa4d4267bb8d18d15a3fd","length":"720"},{"name":"Sources/SecurityProtocolsCore/SecurityProtocolsCore.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/SecurityProtocolsCore.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d5a2c9e3a2d3f160a6f107f989b51516e9c6b7cbf7884101f4d1af967335f964","length":"18088"},{"name":"Sources/SecurityProtocolsCore/SecurityProtocolsCore.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/SecurityProtocolsCore.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cc14464f44182a963a8e72601d6ed2eb9d74ad22130657730096965d00a6ea79","length":"1068"},{"name":"Sources/SecurityProtocolsCore/libSecurityProtocolsCore.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/libSecurityProtocolsCore.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b740665d709f7f1c5047ab9e19b48f6536e7205047548714db190eb606dbf684","length":"11848"}]}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore:SecurityProtocolsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"59"}]}]}}
{"id":{"progress":{"opaqueCount":87}},"children":[{"progress":{"opaqueCount":88}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories.swiftmodule","label":"//Sources/Repositories:Repositories","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories.swiftmodule","label":"//Sources/Repositories:Repositories","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-312"},"label":"//Sources/Repositories:Repositories","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Repositories:Repositories","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories_objs/FileSystemRepository.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Repositories","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Repositories/FileSystemRepository.swift","Sources/Repositories/Repositories.swift","Sources/Repositories/RepositoryService+HealthCheck.swift","Sources/Repositories/RepositoryService+Locking.swift","Sources/Repositories/RepositoryService+Maintenance.swift","Sources/Repositories/RepositoryService+Stats.swift","Sources/Repositories/RepositoryService+Validation.swift","Sources/Repositories/RepositoryService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:24.514868Z","endTime":"2025-03-25T22:47:24.514868Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Repositories:Repositories","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories.swiftmodule","label":"//Sources/Repositories:Repositories","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":88}},"children":[{"progress":{"opaqueCount":89}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types.swiftmodule","label":"//Sources/ResticCLIHelper/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Repositories/BUILD.bazel:3:20: Compiling Swift module //Sources/Repositories:Repositories failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Repositories:Repositories) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Repositories/Repositories.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Repositories/FileSystemRepository.swift:5:8: error: no such module \u0027RepositoriesTypes\u0027\n  3 | \n  4 | // Internal modules\n  5 | import RepositoriesTypes\n    |        `- error: no such module \u0027RepositoriesTypes\u0027\n  6 | import UmbraLogging\n  7 | \nSources/Repositories/FileSystemRepository.swift:5:8: error: no such module \u0027RepositoriesTypes\u0027\n  3 | \n  4 | // Internal modules\n  5 | import RepositoriesTypes\n    |        `- error: no such module \u0027RepositoriesTypes\u0027\n  6 | import UmbraLogging\n  7 | \n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types.swiftmodule","label":"//Sources/ResticCLIHelper/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-401"},"label":"//Sources/ResticCLIHelper/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ResticCLIHelper/Types:Types","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types_objs/CommandResult.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Types","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ResticCLIHelper/Types/CommandResult.swift","Sources/ResticCLIHelper/Types/MaintenanceType.swift","Sources/ResticCLIHelper/Types/ResticError.swift","Sources/ResticCLIHelper/Types/ResticTypes.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.352702Z","endTime":"2025-03-25T22:47:27.352702Z"}}
{"id":{"targetCompleted":{"label":"//Sources/ResticCLIHelper/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types.swiftmodule","label":"//Sources/ResticCLIHelper/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":89}},"children":[{"progress":{"opaqueCount":90}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ResticCLIHelper/Types/BUILD.bazel:3:20: Compiling Swift module //Sources/ResticCLIHelper/Types:Types failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ResticCLIHelper/Types:Types) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ResticCLIHelper/Types/Types.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ResticCLIHelper/Types/CommandResult.swift:11:15: error: invalid redeclaration of \u0027CommandResult\u0027\n 9 | /// }\n10 | /// ```\n11 | public struct CommandResult: Sendable, Equatable, CustomDebugStringConvertible {\n   |               `- error: invalid redeclaration of \u0027CommandResult\u0027\n12 |   /// The exit code returned by the command.\n13 |   /// A value of 0 typically indicates success.\n\nSources/ResticCLIHelper/Types/MaintenanceType.swift:2:13: error: invalid redeclaration of \u0027MaintenanceType\u0027\n 1 | /// Type of maintenance operation to perform on a Restic repository\n 2 | public enum MaintenanceType: String, Sendable {\n   |             `- error: invalid redeclaration of \u0027MaintenanceType\u0027\n 3 |   /// Check repository health\n 4 |   case check\nSources/ResticCLIHelper/Types/CommandResult.swift:11:15: error: invalid redeclaration of \u0027CommandResult\u0027\n 9 | /// }\n10 | /// ```\n11 | public struct CommandResult: Sendable, Equatable, CustomDebugStringConvertible {\n   |               `- error: invalid redeclaration of \u0027CommandResult\u0027\n12 |   /// The exit code returned by the command.\n13 |   /// A value of 0 typically indicates success.\n\nSources/ResticCLIHelper/Types/MaintenanceType.swift:2:13: error: invalid redeclaration of \u0027MaintenanceType\u0027\n 1 | /// Type of maintenance operation to perform on a Restic repository\n 2 | public enum MaintenanceType: String, Sendable {\n   |             `- error: invalid redeclaration of \u0027MaintenanceType\u0027\n 3 |   /// Check repository health\n 4 |   case check\n[438 / 669] [Sched] Compiling Swift module //Sources/SecurityInterfacesXPC:SecurityInterfacesXPC ... (12 actions, 5 running)\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-409"},"label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters_objs/UmbraLoggingAdapters.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraLoggingAdapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.565156Z","endTime":"2025-03-25T22:47:27.565156Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swiftmodule","label":"//Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":90}},"children":[{"progress":{"opaqueCount":91}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters.swiftmodule","label":"//Sources/UserDefaultsService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraLoggingAdapters/Sources/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraLoggingAdapters/Sources:UmbraLoggingAdapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swift:10:8: error: no such module \u0027LoggingWrapper\u0027\n 8 | /// logging interfaces defined in UmbraLogging and their implementations.\n 9 | import Foundation\n10 | import LoggingWrapper\n   |        `- error: no such module \u0027LoggingWrapper\u0027\n11 | import UmbraLogging\n12 | \nSources/UmbraLoggingAdapters/Sources/UmbraLoggingAdapters.swift:10:8: error: no such module \u0027LoggingWrapper\u0027\n 8 | /// logging interfaces defined in UmbraLogging and their implementations.\n 9 | import Foundation\n10 | import LoggingWrapper\n   |        `- error: no such module \u0027LoggingWrapper\u0027\n11 | import UmbraLogging\n12 | \n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters.swiftmodule","label":"//Sources/UserDefaultsService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-408"},"label":"//Sources/UserDefaultsService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UserDefaultsService/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters_objs/UserDefaultsServiceDTOAdapter.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UserDefaultsService/Adapters/UserDefaultsServiceDTOAdapter.swift","Sources/UserDefaultsService/Adapters/UserDefaultsServiceDTOFactory.swift","Sources/UserDefaultsService/Adapters/UserDefaultsServiceDTOProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.484779Z","endTime":"2025-03-25T22:47:27.484779Z"}}
{"id":{"progress":{"opaqueCount":91}},"children":[{"progress":{"opaqueCount":92}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService.swiftmodule","label":"//Sources/UmbraBookmarkService:UmbraBookmarkService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService.swiftmodule","label":"//Sources/UmbraBookmarkService:UmbraBookmarkService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-403"},"label":"//Sources/UmbraBookmarkService:UmbraBookmarkService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraBookmarkService:UmbraBookmarkService","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService_objs/BookmarkError.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraBookmarkService","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraBookmarkService/BookmarkError.swift","Sources/UmbraBookmarkService/BookmarkService.swift","Sources/UmbraBookmarkService/BookmarkServiceProtocol.swift","Sources/UmbraBookmarkService/UmbraBookmarkService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.356065Z","endTime":"2025-03-25T22:47:27.356065Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UserDefaultsService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters.swiftmodule","label":"//Sources/UserDefaultsService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraBookmarkService:UmbraBookmarkService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService.swiftmodule","label":"//Sources/UmbraBookmarkService:UmbraBookmarkService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":92}},"children":[{"progress":{"opaqueCount":93}},{"namedSet":{"id":"60"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UserDefaultsService/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/UserDefaultsService/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UserDefaultsService/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UserDefaultsService/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UserDefaultsService/Adapters/UserDefaultsServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import os.log\nSources/UserDefaultsService/Adapters/UserDefaultsServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import os.log\nERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraBookmarkService/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraBookmarkService:UmbraBookmarkService failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraBookmarkService:UmbraBookmarkService) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraBookmarkService/UmbraBookmarkService.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraBookmarkService/BookmarkService.swift:2:8: error: no such module \u0027XPCProtocolsCore\u0027\n  1 | import Foundation\n  2 | import XPCProtocolsCore\n    |        `- error: no such module \u0027XPCProtocolsCore\u0027\n  3 | \n  4 | /// Service for managing security-scoped bookmarks\nSources/UmbraBookmarkService/BookmarkService.swift:2:8: error: no such module \u0027XPCProtocolsCore\u0027\n  1 | import Foundation\n  2 | import XPCProtocolsCore\n    |        `- error: no such module \u0027XPCProtocolsCore\u0027\n  3 | \n  4 | /// Service for managing security-scoped bookmarks\n"}}
{"id":{"namedSet":{"id":"60"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Core/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5f60c7c89582eded0b2a92c8d445ffb5e7bc1f06616ea4411de98097e233c813","length":"3112"},{"name":"Sources/Security/Adapters/Core/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"34392b3da082a513c5a42939b877f5a3cea47d8021ed2804ebd58a4a545b3467","length":"22516"},{"name":"Sources/Security/Adapters/Core/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f4b5a8d78a1a7af89f78c7a3d87b97e32cef612cbd761817b73144785145bb44","length":"3208"},{"name":"Sources/Security/Adapters/Core/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2543366d35d72bfa11d2c8726ed3d2f963262d7d0e59d7e2f70f827c7e176e4a","length":"16608"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Core/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"60"}]}]}}
{"id":{"progress":{"opaqueCount":93}},"children":[{"progress":{"opaqueCount":94}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks.swiftmodule","label":"//Sources/UmbraMocks:UmbraMocks","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks.swiftmodule","label":"//Sources/UmbraMocks:UmbraMocks","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-410"},"label":"//Sources/UmbraMocks:UmbraMocks","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraMocks:UmbraMocks","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks_objs/MockCryptoService.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraMocks","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraMocks/MockCryptoService.swift","Sources/UmbraMocks/MockKeychain.swift","Sources/UmbraMocks/PlaceholderMock.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.660499Z","endTime":"2025-03-25T22:47:27.660499Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraMocks:UmbraMocks","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks.swiftmodule","label":"//Sources/UmbraMocks:UmbraMocks","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":94}},"children":[{"progress":{"opaqueCount":95}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC.swiftmodule","label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraMocks/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraMocks:UmbraMocks failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraMocks:UmbraMocks) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraMocks/UmbraMocks.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraMocks/MockCryptoService.swift:1:8: error: no such module \u0027CryptoTypesProtocols\u0027\n 1 | import CryptoTypesProtocols\n   |        `- error: no such module \u0027CryptoTypesProtocols\u0027\n 2 | import Foundation\n 3 | import UmbraErrors\nSources/UmbraMocks/MockCryptoService.swift:1:8: error: no such module \u0027CryptoTypesProtocols\u0027\n 1 | import CryptoTypesProtocols\n   |        `- error: no such module \u0027CryptoTypesProtocols\u0027\n 2 | import Foundation\n 3 | import UmbraErrors\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC.swiftmodule","label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-419"},"label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC_objs/XPCServiceProtocolDefinition.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","SecurityInterfacesXPC","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfacesXPC/XPCServiceProtocolDefinition.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.946688Z","endTime":"2025-03-25T22:47:27.946688Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC.swiftmodule","label":"//Sources/SecurityInterfacesXPC:SecurityInterfacesXPC","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":95}},"children":[{"progress":{"opaqueCount":96}},{"namedSet":{"id":"61"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfacesXPC/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfacesXPC:SecurityInterfacesXPC failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfacesXPC:SecurityInterfacesXPC) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesXPC/SecurityInterfacesXPC.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityInterfacesXPC/XPCServiceProtocolDefinition.swift:2:8: error: no such module \u0027ObjCBridgingTypesFoundation\u0027\n  1 | import Foundation\n  2 | import ObjCBridgingTypesFoundation\n    |        `- error: no such module \u0027ObjCBridgingTypesFoundation\u0027\n  3 | import SecurityInterfacesBase\n  4 | import UmbraCoreTypes\nSources/SecurityInterfacesXPC/XPCServiceProtocolDefinition.swift:2:8: error: no such module \u0027ObjCBridgingTypesFoundation\u0027\n  1 | import Foundation\n  2 | import ObjCBridgingTypesFoundation\n    |        `- error: no such module \u0027ObjCBridgingTypesFoundation\u0027\n  3 | import SecurityInterfacesBase\n  4 | import UmbraCoreTypes\n"}}
{"id":{"namedSet":{"id":"61"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraCoreTypes/Sources/UmbraCoreTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources/UmbraCoreTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1bf2332016e7d45c1c728810bc8d3661be079316fa9b180c944f27cc75d13cd3","length":"18644"},{"name":"Sources/UmbraCoreTypes/Sources/UmbraCoreTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources/UmbraCoreTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"32238dbd6f55edd9a625b5f6f56a82d5ce4d503d0641c43e1972036de2d4d550","length":"69976"},{"name":"Sources/UmbraCoreTypes/Sources/UmbraCoreTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources/UmbraCoreTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"dc13a35fadeab9e08aa2a082892df58807fe03d09350dd740270128e673aaeed","length":"21604"},{"name":"Sources/UmbraCoreTypes/Sources/libUmbraCoreTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources/libUmbraCoreTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c8d7b654ba7a700eae1a6b7a721b9e08cea8dab042a2f5d355d5ece00f724f0f","length":"216240"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCoreTypes:UmbraCoreTypes","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"61"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCoreTypes/Sources:UmbraCoreTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"61"}]}]}}
{"id":{"progress":{"opaqueCount":96}},"children":[{"progress":{"opaqueCount":97}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService.swiftmodule","label":"//Sources/UmbraCryptoService:UmbraCryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService.swiftmodule","label":"//Sources/UmbraCryptoService:UmbraCryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-413"},"label":"//Sources/UmbraCryptoService:UmbraCryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraCryptoService:UmbraCryptoService","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService_objs/CryptoServiceDependencies.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraCryptoService","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraCryptoService/CryptoServiceDependencies.swift","Sources/UmbraCryptoService/CryptoServiceListener.swift","Sources/UmbraCryptoService/CryptoXPCService.swift","Sources/UmbraCryptoService/UmbraCryptoService.swift","Sources/UmbraCryptoService/UmbraCryptoService_Aliases.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.739887Z","endTime":"2025-03-25T22:47:27.739887Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCryptoService:UmbraCryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService.swiftmodule","label":"//Sources/UmbraCryptoService:UmbraCryptoService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":97}},"children":[{"progress":{"opaqueCount":98}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService.swiftmodule","label":"//Sources/UmbraKeychainService:UmbraKeychainService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraCryptoService/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraCryptoService:UmbraCryptoService failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraCryptoService:UmbraCryptoService) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCryptoService/UmbraCryptoService.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraCryptoService/CryptoServiceDependencies.swift:1:8: error: no such module \u0027CryptoTypes\u0027\n 1 | import CryptoTypes\n   |        `- error: no such module \u0027CryptoTypes\u0027\n 2 | import UmbraErrors\n 3 | import UmbraErrorsCore\nSources/UmbraCryptoService/CryptoServiceDependencies.swift:1:8: error: no such module \u0027CryptoTypes\u0027\n 1 | import CryptoTypes\n   |        `- error: no such module \u0027CryptoTypes\u0027\n 2 | import UmbraErrors\n 3 | import UmbraErrorsCore\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService.swiftmodule","label":"//Sources/UmbraKeychainService:UmbraKeychainService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-422"},"label":"//Sources/UmbraKeychainService:UmbraKeychainService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraKeychainService:UmbraKeychainService","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService_objs/KeychainError.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraKeychainService","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-enable-upcoming-feature","ConciseMagicFile","-enable-upcoming-feature","DisableOutOfOrderDependencies","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraKeychainService/KeychainError.swift","Sources/UmbraKeychainService/KeychainSecureStorage.swift","Sources/UmbraKeychainService/KeychainSecureStorageAdapter.swift","Sources/UmbraKeychainService/KeychainService.swift","Sources/UmbraKeychainService/KeychainServiceProtocol.swift","Sources/UmbraKeychainService/KeychainXPCConnection.swift","Sources/UmbraKeychainService/KeychainXPCDTO.swift","Sources/UmbraKeychainService/KeychainXPCImplementation.swift","Sources/UmbraKeychainService/KeychainXPCProtocol.swift","Sources/UmbraKeychainService/KeychainXPCService.swift","Sources/UmbraKeychainService/KeychainXPCServiceFactory.swift","Sources/UmbraKeychainService/SecureStorageFactory.swift","Sources/UmbraKeychainService/UmbraKeychainService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:27.953219Z","endTime":"2025-03-25T22:47:27.953219Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraKeychainService:UmbraKeychainService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService.swiftmodule","label":"//Sources/UmbraKeychainService:UmbraKeychainService","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":98}},"children":[{"progress":{"opaqueCount":99}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations.swiftmodule","label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraKeychainService/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraKeychainService:UmbraKeychainService failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraKeychainService:UmbraKeychainService) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraKeychainService/UmbraKeychainService.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraKeychainService/KeychainXPCDTO.swift:4:8: error: no such module \u0027UmbraErrors\u0027\n  2 | import SecurityProtocolsCore\n  3 | import UmbraCoreTypes\n  4 | import UmbraErrors\n    |        `- error: no such module \u0027UmbraErrors\u0027\n  5 | import UmbraErrorsCore\n  6 | import XPCProtocolsCore\nSources/UmbraKeychainService/KeychainXPCDTO.swift:88:3: error: declaration is only valid at file scope\n 86 | \n 87 |   /// Protocol extension to convert keychain errors to XPC errors\n 88 |   extension UmbraErrors.Security.Protocols {\n    |   `- error: declaration is only valid at file scope\n 89 |     /// Convert to keychain operation error\n 90 |     /// - Returns: The keychain operation error\n\nSources/UmbraKeychainService/KeychainXPCDTO.swift:97:3: error: declaration is only valid at file scope\n 95 | \n 96 |   /// Extension to map KeyStorageError to KeychainOperationError\n 97 |   extension KeyStorageError {\n    |   `- error: declaration is only valid at file scope\n 98 |     /// Convert to KeychainXPCDTO.KeychainOperationError\n 99 |     public func toKeychainOperationError() -\u003e UmbraErrors.Security.Protocols {\n\nSources/UmbraKeychainService/KeychainXPCDTO.swift:4:8: error: no such module \u0027UmbraErrors\u0027\n  2 | import SecurityProtocolsCore\n  3 | import UmbraCoreTypes\n  4 | import UmbraErrors\n    |        `- error: no such module \u0027UmbraErrors\u0027\n  5 | import UmbraErrorsCore\n  6 | import XPCProtocolsCore\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations.swiftmodule","label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-431"},"label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraSecurityCore/Sources/Implementations:Implementations","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations_objs/DefaultCryptoService.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Implementations","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraSecurityCore/Sources/Implementations/DefaultCryptoService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.231099Z","endTime":"2025-03-25T22:47:28.231099Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations.swiftmodule","label":"//Sources/UmbraSecurityCore/Sources/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":99}},"children":[{"progress":{"opaqueCount":100}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.swiftmodule","label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraSecurityCore/Sources/Implementations/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraSecurityCore/Sources/Implementations:Implementations failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraSecurityCore/Sources/Implementations:Implementations) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/Implementations/Implementations.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraSecurityCore/Sources/Implementations/DefaultCryptoService.swift:3:8: error: no such module \u0027UmbraErrors\u0027\n  1 | import SecurityProtocolsCore\n  2 | import UmbraCoreTypes\n  3 | import UmbraErrors\n    |        `- error: no such module \u0027UmbraErrors\u0027\n  4 | import UmbraErrorsCore\n  5 | \nSources/UmbraSecurityCore/Sources/Implementations/DefaultCryptoService.swift:3:8: error: no such module \u0027UmbraErrors\u0027\n  1 | import SecurityProtocolsCore\n  2 | import UmbraCoreTypes\n  3 | import UmbraErrors\n    |        `- error: no such module \u0027UmbraErrors\u0027\n  4 | import UmbraErrorsCore\n  5 | \n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.swiftmodule","label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-436"},"label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore_objs/UmbraSecurityCore.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraSecurityCore","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.395734Z","endTime":"2025-03-25T22:47:28.395734Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.swiftmodule","label":"//Sources/UmbraSecurityCore/Sources:UmbraSecurityCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":100}},"children":[{"progress":{"opaqueCount":101}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.swiftmodule","label":"//Sources/CryptoTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraSecurityCore/Sources/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraSecurityCore/Sources:UmbraSecurityCore failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraSecurityCore/Sources:UmbraSecurityCore) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Sources/UmbraSecurityCore.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraSecurityCore/Sources/UmbraSecurityCore.swift:1:8: error: no such module \u0027SecurityCoreAdapters\u0027\n 1 | import SecurityCoreAdapters\n   |        `- error: no such module \u0027SecurityCoreAdapters\u0027\n 2 | import SecurityProtocolsCore\n 3 | import UmbraCoreTypes\nSources/UmbraSecurityCore/Sources/UmbraSecurityCore.swift:1:8: error: no such module \u0027SecurityCoreAdapters\u0027\n 1 | import SecurityCoreAdapters\n   |        `- error: no such module \u0027SecurityCoreAdapters\u0027\n 2 | import SecurityProtocolsCore\n 3 | import UmbraCoreTypes\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.swiftmodule","label":"//Sources/CryptoTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-435"},"label":"//Sources/CryptoTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/CryptoTypes/Types:Types","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types_objs/CredentialManager.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Types","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/CryptoTypes/Types/CredentialManager.swift","Sources/CryptoTypes/Types/CryptoConfig.swift","Sources/CryptoTypes/Types/CryptoConfiguration.swift","Sources/CryptoTypes/Types/SecureStorageData.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.238191Z","endTime":"2025-03-25T22:47:28.238191Z"}}
{"id":{"targetCompleted":{"label":"//Sources/CryptoTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.swiftmodule","label":"//Sources/CryptoTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":101}},"children":[{"progress":{"opaqueCount":102}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters.swiftmodule","label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/CryptoTypes/Types/BUILD.bazel:3:20: Compiling Swift module //Sources/CryptoTypes/Types:Types failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/CryptoTypes/Types:Types) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/CryptoTypes/Types/CredentialManager.swift:2:8: error: no such module \u0027SecurityBridgeTypes\u0027\n  1 | import Foundation\n  2 | import SecurityBridgeTypes\n    |        `- error: no such module \u0027SecurityBridgeTypes\u0027\n  3 | import SecurityProtocolsCore\n  4 | import UmbraCoreTypes\nSources/CryptoTypes/Types/CredentialManager.swift:2:8: error: no such module \u0027SecurityBridgeTypes\u0027\n  1 | import Foundation\n  2 | import SecurityBridgeTypes\n    |        `- error: no such module \u0027SecurityBridgeTypes\u0027\n  3 | import SecurityProtocolsCore\n  4 | import UmbraCoreTypes\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters.swiftmodule","label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-437"},"label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters_objs/BinaryDataConverters.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","SecurityTypeConverters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityTypeConverters/Sources/BinaryDataConverters.swift","Sources/SecurityTypeConverters/Sources/DTOExtensions.swift","Sources/SecurityTypeConverters/Sources/ErrorMappers.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.494909Z","endTime":"2025-03-25T22:47:28.494909Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters.swiftmodule","label":"//Sources/SecurityTypeConverters/Sources:SecurityTypeConverters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":102}},"children":[{"progress":{"opaqueCount":103}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters.swiftmodule","label":"//Sources/SecurityInterfaces/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityTypeConverters/Sources/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityTypeConverters/Sources:SecurityTypeConverters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityTypeConverters/Sources:SecurityTypeConverters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypeConverters/Sources/SecurityTypeConverters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityTypeConverters/Sources/BinaryDataConverters.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n 1 | import CoreTypesInterfaces\n   |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n 2 | import FoundationBridgeTypes\n 3 | import UmbraCoreTypes\nSources/SecurityTypeConverters/Sources/BinaryDataConverters.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n 1 | import CoreTypesInterfaces\n   |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n 2 | import FoundationBridgeTypes\n 3 | import UmbraCoreTypes\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters.swiftmodule","label":"//Sources/SecurityInterfaces/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-441"},"label":"//Sources/SecurityInterfaces/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfaces/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters_objs/SecurityProviderXPCService.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfaces/Adapters/SecurityProviderXPCService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.513183Z","endTime":"2025-03-25T22:47:28.513183Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters.swiftmodule","label":"//Sources/SecurityInterfaces/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":103}},"children":[{"progress":{"opaqueCount":104}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services.swiftmodule","label":"//Sources/UmbraSecurity/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"[463 / 669] Compiling Swift module //Sources/ErrorHandling/Domains:Domains; 0s disk-cache, worker ... (12 actions, 5 running)\nERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfaces/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfaces/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfaces/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityInterfaces/Adapters/SecurityProviderXPCService.swift:1:8: error: no such module \u0027UmbraErrors\u0027\n 1 | import UmbraErrors\n   |        `- error: no such module \u0027UmbraErrors\u0027\n 2 | import UmbraErrorsCore\n 3 | \nSources/SecurityInterfaces/Adapters/SecurityProviderXPCService.swift:1:8: error: no such module \u0027UmbraErrors\u0027\n 1 | import UmbraErrors\n   |        `- error: no such module \u0027UmbraErrors\u0027\n 2 | import UmbraErrorsCore\n 3 | \n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services.swiftmodule","label":"//Sources/UmbraSecurity/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-438"},"label":"//Sources/UmbraSecurity/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraSecurity/Services:Services","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services_objs/SecurityCryptoService.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Services","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraSecurity/Services/SecurityCryptoService.swift","Sources/UmbraSecurity/Services/SecurityProviderFactory.swift","Sources/UmbraSecurity/Services/SecurityProviderFoundationImpl.swift","Sources/UmbraSecurity/Services/SecurityService.swift","Sources/UmbraSecurity/Services/SecurityServiceBridge.swift","Sources/UmbraSecurity/Services/SecurityServiceFactory.swift","Sources/UmbraSecurity/Services/SecurityServiceFactoryMinimal.swift","Sources/UmbraSecurity/Services/SecurityServiceNoCrypto.swift","Sources/UmbraSecurity/Services/SecurityServiceUltraMinimal.swift","Sources/UmbraSecurity/Services/UmbraSecurityServicesModule.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.507352Z","endTime":"2025-03-25T22:47:28.507352Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurity/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services.swiftmodule","label":"//Sources/UmbraSecurity/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":104}},"children":[{"progress":{"opaqueCount":105}},{"namedSet":{"id":"62"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraSecurity/Services/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraSecurity/Services:Services failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraSecurity/Services:Services) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Services/Services.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraSecurity/Services/SecurityCryptoService.swift:1:8: error: no such module \u0027CryptoSwiftFoundationIndependent\u0027\n 1 | import CryptoSwiftFoundationIndependent\n   |        `- error: no such module \u0027CryptoSwiftFoundationIndependent\u0027\n 2 | import UmbraErrors\n 3 | import UmbraErrorsCore\nSources/UmbraSecurity/Services/SecurityCryptoService.swift:1:8: error: no such module \u0027CryptoSwiftFoundationIndependent\u0027\n 1 | import CryptoSwiftFoundationIndependent\n   |        `- error: no such module \u0027CryptoSwiftFoundationIndependent\u0027\n 2 | import UmbraErrors\n 3 | import UmbraErrorsCore\n"}}
{"id":{"namedSet":{"id":"62"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityTypes/SecurityTypes.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/SecurityTypes.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6f17a6412b8c59f3418f354bc1e0e8037f3c521aff3f7660ddc5c0b88c15983b","length":"1516"},{"name":"Sources/SecurityTypes/SecurityTypes.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/SecurityTypes.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6332ffcfd0b5d604dc154b221bd98bf69c126162004767f306bdfc99d9d655c1","length":"21800"},{"name":"Sources/SecurityTypes/SecurityTypes.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/SecurityTypes.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e9c2cd4efbdb551c2fb507107bde6be7464dfe56a61aa6834b1bdee75b8a9388","length":"1948"},{"name":"Sources/SecurityTypes/libSecurityTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes/libSecurityTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f2c32ce4bb7289869292c1396e605ecc99b54aee099b14f32441dca695302d61","length":"20368"}]}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityTypes:SecurityTypes","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"62"}]}]}}
{"id":{"progress":{"opaqueCount":105}},"children":[{"progress":{"opaqueCount":106}},{"namedSet":{"id":"63"}}],"progress":{}}
{"id":{"namedSet":{"id":"63"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/ErrorHandling.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/ErrorHandling.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4f744f066f8c1f6b3ff5be675bb72ec60ca33973b1bbabaac9ba2b2ee92ad304","length":"1284"},{"name":"Sources/ErrorHandling/ErrorHandling.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/ErrorHandling.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e75b406c0164e17d9845b897a4c100c324a49fe4a65b2c00e0d67f70a6b8d2ef","length":"20052"},{"name":"Sources/ErrorHandling/ErrorHandling.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/ErrorHandling.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"883c4572734fcc8ce3a6ddd9c9369463a4539bade19415d0caafeb34abc28347","length":"1984"},{"name":"Sources/ErrorHandling/libErrorHandling.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/libErrorHandling.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"75dbe3095b87c146e31a138dacc814e79740b2a9d37587e40b68bcca57ed4ba8","length":"16056"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling:ErrorHandling","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"63"}]}]}}
{"id":{"progress":{"opaqueCount":106}},"children":[{"progress":{"opaqueCount":107}},{"namedSet":{"id":"64"}}],"progress":{"stderr":"INFO: From Compiling Swift module //Sources/CoreErrors:CoreErrors:\nSources/CoreErrors/CryptoError.swift:16:14: warning: stored property \u0027type\u0027 of \u0027Sendable\u0027-conforming struct \u0027CryptoError\u0027 has non-sendable type \u0027CryptoError.ErrorType\u0027; this is an error in the Swift 6 language mode\n 4 | public struct CryptoError: Error, Equatable {\n 5 |   /// Error type\n 6 |   public enum ErrorType: Equatable {\n   |               `- note: consider making enum \u0027ErrorType\u0027 conform to the \u0027Sendable\u0027 protocol\n 7 |     /// Invalid key length\n 8 |     case invalidKeyLength\n   :\n14 | \n15 |   /// The type of error\n16 |   public let type: ErrorType\n   |              `- warning: stored property \u0027type\u0027 of \u0027Sendable\u0027-conforming struct \u0027CryptoError\u0027 has non-sendable type \u0027CryptoError.ErrorType\u0027; this is an error in the Swift 6 language mode\n17 |   /// Error description\n18 |   public let description: String\nSources/CoreErrors/CryptoError.swift:16:14: warning: stored property \u0027type\u0027 of \u0027Sendable\u0027-conforming struct \u0027CryptoError\u0027 has non-sendable type \u0027CryptoError.ErrorType\u0027; this is an error in the Swift 6 language mode\n 4 | public struct CryptoError: Error, Equatable {\n 5 |   /// Error type\n 6 |   public enum ErrorType: Equatable {\n   |               `- note: consider making enum \u0027ErrorType\u0027 conform to the \u0027Sendable\u0027 protocol\n 7 |     /// Invalid key length\n 8 |     case invalidKeyLength\n   :\n14 | \n15 |   /// The type of error\n16 |   public let type: ErrorType\n   |              `- warning: stored property \u0027type\u0027 of \u0027Sendable\u0027-conforming struct \u0027CryptoError\u0027 has non-sendable type \u0027CryptoError.ErrorType\u0027; this is an error in the Swift 6 language mode\n17 |   /// Error description\n18 |   public let description: String\n"}}
{"id":{"namedSet":{"id":"64"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreErrors/CoreErrors.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/CoreErrors.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6e64a5af6846f0bd96c28b16bcb077efc21780994295c21dd61351e4b8572392","length":"8348"},{"name":"Sources/CoreErrors/CoreErrors.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/CoreErrors.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"26c58bebfccd27fc546e1df538f2f5c4b6f397f8aff167ba9658778e42cbeed3","length":"69144"},{"name":"Sources/CoreErrors/CoreErrors.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/CoreErrors.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"dee919e7bdccd43ccdcfb69d468e02e6bc1e12194ff4e8899d1208349e304808","length":"13744"},{"name":"Sources/CoreErrors/libCoreErrors.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/libCoreErrors.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a224a77edd93d895e087c492127afaa121f4b8b95d91e970b341a828f4f842b9","length":"346504"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreErrors:CoreErrors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"64"}]}]}}
{"id":{"progress":{"opaqueCount":107}},"children":[{"progress":{"opaqueCount":108}},{"namedSet":{"id":"65"}}],"progress":{}}
{"id":{"namedSet":{"id":"65"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Core/Errors/Errors.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors/Errors.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"12b59b42acadedf10167e355e8c7cb702bf7b5122429d77dda1b12d84d65a960","length":"4856"},{"name":"Sources/Security/Core/Errors/Errors.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors/Errors.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d1a089a629334d5c8537ad718c0bc6c0c24fa184311cc2a931215219b577e8dd","length":"30144"},{"name":"Sources/Security/Core/Errors/Errors.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors/Errors.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b083afa99860f0004ecf97a19442f240f5bb3317079eb3619e875e6db754ebec","length":"6164"},{"name":"Sources/Security/Core/Errors/libErrors.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors/libErrors.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5f2596e245f7dcd27d8ab22e91f6d3c57ed9a41be944d429bf09ffc934071f98","length":"60120"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Core/Errors:Errors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"65"}]}]}}
{"id":{"progress":{"opaqueCount":108}},"children":[{"progress":{"opaqueCount":109}},{"namedSet":{"id":"66"}}],"progress":{}}
{"id":{"namedSet":{"id":"66"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Utils/Utils.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Utils/Utils.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"64cd6b924b49176c1759fa863476beca912c92dc22dfe794ab0abdd119507453","length":"7532"},{"name":"Sources/Security/Utils/Utils.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Utils/Utils.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3c9d14398f00166c16725de7606da663e14130b98bcd2d232ca7eb709fe2639d","length":"45532"},{"name":"Sources/Security/Utils/Utils.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Utils/Utils.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"779d83d8709621052a51eb2a477da12d117246624d749e685023810d1e0c3bcc","length":"12364"},{"name":"Sources/Security/Utils/libUtils.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Utils/libUtils.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ed3e7eec214400b529119ef184dde3591dd0d814efcd3316f7d59ae73a0b9938","length":"117872"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Utils:Utils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"66"}]}]}}
{"id":{"progress":{"opaqueCount":109}},"children":[{"progress":{"opaqueCount":110}},{"namedSet":{"id":"67"}}],"progress":{}}
{"id":{"namedSet":{"id":"67"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Core/Types/Types.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/Types.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e071ee96a3c8edd8003825eb11fcc5f8be1e4f7aec681c29ed7ac519d34f3e83","length":"31356"},{"name":"Sources/Security/Core/Types/Types.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/Types.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"da187d9df61438914305b91658f83e067af156b5988f0003beac3b94fc93e46f","length":"121700"},{"name":"Sources/Security/Core/Types/Types.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/Types.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0de2096661fbea655a1c0cb999b553398a48c5b653cb31ef32d40cf6981e0212","length":"36788"},{"name":"Sources/Security/Core/Types/libTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/libTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2958700a08b63c9ebf1433b98f937c43ab9eb7a9763db0b2ce1ec833a03c984c","length":"355576"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Core/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"67"}]}]}}
{"id":{"progress":{"opaqueCount":110}},"children":[{"progress":{"opaqueCount":111}},{"namedSet":{"id":"68"}}],"progress":{}}
{"id":{"namedSet":{"id":"68"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1a30597847d9ccd66e58c26071365ce44dcff7f5cfe139d330c77d07271bc9c0","length":"5556"},{"name":"Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"210b55c05f63b99cd8268570936b6cfb76caa3ca0b54e7db15e25a2cd402e3d2","length":"33388"},{"name":"Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces/ErrorHandlingInterfaces.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"58279fc04a2cd7b7292a001831513d1855fcc48473b0486bde86907284924be6","length":"7980"},{"name":"Sources/ErrorHandlingInterfaces/libErrorHandlingInterfaces.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces/libErrorHandlingInterfaces.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9993e8a6c3cd858687b191e7fe8b5487be519dc2231e81f2698d6eb3b3ecca4b","length":"63736"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandlingInterfaces:ErrorHandlingInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"68"}]}]}}
{"id":{"progress":{"opaqueCount":111}},"children":[{"progress":{"opaqueCount":112}},{"namedSet":{"id":"69"}}],"progress":{}}
{"id":{"namedSet":{"id":"69"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraErrors/Domains/Domains.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains/Domains.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d9de33d9ada1fc140471eee21ce737a024c284c157779e07880751613e51090f","length":"66220"},{"name":"Sources/UmbraErrors/Domains/Domains.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains/Domains.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"967b11ab891e5af388a26ac163d29beeec9d8d52dc8f4a28be2da56ae57746aa","length":"268728"},{"name":"Sources/UmbraErrors/Domains/Domains.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains/Domains.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a2a18e9f8954f154f98679444df450aff14e81866963ddedecfe8f2de11705b5","length":"83856"},{"name":"Sources/UmbraErrors/Domains/libDomains.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains/libDomains.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"24ede55acb0926cae6e0cf6d8fed17a3ab9368d9091b1474f3f75a8dff1542ea","length":"830312"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"69"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/Domains:UmbraErrorsDomains","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"69"}]}]}}
{"id":{"progress":{"opaqueCount":112}},"children":[{"progress":{"opaqueCount":113}},{"namedSet":{"id":"70"}}],"progress":{}}
{"id":{"namedSet":{"id":"70"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/CoreDTOs.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/CoreDTOs.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2d50e796f142a1fc3eeac9cbf074eb9a44098a99468be21a5ce3b98ff6730e5e","length":"412"},{"name":"Sources/CoreDTOs/Sources/CoreDTOs.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/CoreDTOs.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"78724c15454f33c8678b45a78480cc5dfba8753653f53c71ca1b08d03e767ce5","length":"16640"},{"name":"Sources/CoreDTOs/Sources/CoreDTOs.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/CoreDTOs.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ff1afef4c67bba17a39353b01d7fa7f88e096b2809741260ce577820845f0968","length":"664"},{"name":"Sources/CoreDTOs/Sources/libCoreDTOs.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/libCoreDTOs.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1ebd288ed334fb095914ec468cae76cd911452c8a00c07481e71848c129da379","length":"7288"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources:CoreDTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"70"}]}]}}
{"id":{"progress":{"opaqueCount":113}},"children":[{"progress":{"opaqueCount":114}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-428"},"label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ErrorHandling/Domains:Domains","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains_objs/ApplicationCoreErrors.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Domains","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ErrorHandling/Domains/ApplicationCoreErrors.swift","Sources/ErrorHandling/Domains/ApplicationError.swift","Sources/ErrorHandling/Domains/ApplicationErrorBase.swift","Sources/ErrorHandling/Domains/ApplicationErrors.swift","Sources/ErrorHandling/Domains/ApplicationLifecycleErrors.swift","Sources/ErrorHandling/Domains/ApplicationUIErrors.swift","Sources/ErrorHandling/Domains/BookmarkCoreErrors.swift","Sources/ErrorHandling/Domains/BookmarkErrorBase.swift","Sources/ErrorHandling/Domains/CryptoCoreErrors.swift","Sources/ErrorHandling/Domains/CryptoErrorBase.swift","Sources/ErrorHandling/Domains/LoggingCoreErrors.swift","Sources/ErrorHandling/Domains/LoggingErrorBase.swift","Sources/ErrorHandling/Domains/NetworkCoreErrors.swift","Sources/ErrorHandling/Domains/NetworkErrorBase.swift","Sources/ErrorHandling/Domains/NetworkErrors.swift","Sources/ErrorHandling/Domains/NetworkHTTPErrors.swift","Sources/ErrorHandling/Domains/NetworkSocketErrors.swift","Sources/ErrorHandling/Domains/RepositoryCoreErrors.swift","Sources/ErrorHandling/Domains/RepositoryError.swift","Sources/ErrorHandling/Domains/RepositoryErrorBase.swift","Sources/ErrorHandling/Domains/RepositoryErrorDomain.swift","Sources/ErrorHandling/Domains/ResourceCoreErrors.swift","Sources/ErrorHandling/Domains/ResourceErrorBase.swift","Sources/ErrorHandling/Domains/ResourceFileErrors.swift","Sources/ErrorHandling/Domains/ResourcePoolErrors.swift","Sources/ErrorHandling/Domains/SecurityCoreErrors.swift","Sources/ErrorHandling/Domains/SecurityError.swift","Sources/ErrorHandling/Domains/SecurityErrorBase.swift","Sources/ErrorHandling/Domains/SecurityErrorDomain.swift","Sources/ErrorHandling/Domains/SecurityErrors.swift","Sources/ErrorHandling/Domains/SecurityProtocolErrors.swift","Sources/ErrorHandling/Domains/SecurityXPCErrors.swift","Sources/ErrorHandling/Domains/StorageErrors.swift","Sources/ErrorHandling/Domains/UmbraErrors.swift","Sources/ErrorHandling/Domains/XPCCoreErrors.swift","Sources/ErrorHandling/Domains/XPCErrorBase.swift","Sources/ErrorHandling/Domains/XPCProtocolErrors.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.125654Z","endTime":"2025-03-25T22:47:28.125654Z"}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/ObjCBridgingTypesFoundation:ObjCBridgingTypesFoundation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/API:API","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":114}},"children":[{"progress":{"opaqueCount":115}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters.swiftmodule","label":"//Sources/UmbraSecurity/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ErrorHandling/Domains/BUILD.bazel:8:20: Compiling Swift module //Sources/ErrorHandling/Domains:Domains failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ErrorHandling/Domains:Domains) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nstderr (/Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-428) 1609568 exceeds maximum size of --experimental_ui_max_stdouterr_bytes\u003d1048576 bytes; skipping\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters.swiftmodule","label":"//Sources/UmbraSecurity/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-442"},"label":"//Sources/UmbraSecurity/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraSecurity/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters_objs/BookmarkServiceDTOAdapter.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraSecurity/Adapters/BookmarkServiceDTOAdapter.swift","Sources/UmbraSecurity/Adapters/SecurityServiceDTOAdapter.swift","Sources/UmbraSecurity/Adapters/SecurityServiceDTOFactory.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.710253Z","endTime":"2025-03-25T22:47:28.710253Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurity/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters.swiftmodule","label":"//Sources/UmbraSecurity/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":115}},"children":[{"progress":{"opaqueCount":116}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests.swiftmodule","label":"//Sources/UmbraSecurityCore/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraSecurity/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraSecurity/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraSecurity/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraSecurity/Adapters/BookmarkServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\nSources/UmbraSecurity/Adapters/BookmarkServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests.swiftmodule","label":"//Sources/UmbraSecurityCore/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-445"},"label":"//Sources/UmbraSecurityCore/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraSecurityCore/Tests:Tests","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests_objs/CryptoServiceAdaptersTests.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Tests","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraSecurityCore/Tests/CryptoServiceAdaptersTests.swift","Sources/UmbraSecurityCore/Tests/DefaultCryptoServiceTests.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.890941Z","endTime":"2025-03-25T22:47:28.890941Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurityCore/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests.swiftmodule","label":"//Sources/UmbraSecurityCore/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":116}},"children":[{"progress":{"opaqueCount":117}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services.swiftmodule","label":"//Sources/Services/SecurityUtils/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraSecurityCore/Tests/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraSecurityCore/Tests:Tests failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraSecurityCore/Tests:Tests) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityCore/Tests/Tests.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraSecurityCore/Tests/CryptoServiceAdaptersTests.swift:1:8: error: no such module \u0027SecurityCoreAdapters\u0027\n  1 | import SecurityCoreAdapters\n    |        `- error: no such module \u0027SecurityCoreAdapters\u0027\n  2 | import SecurityProtocolsCore\n  3 | import UmbraCoreTypes\nSources/UmbraSecurityCore/Tests/CryptoServiceAdaptersTests.swift:1:8: error: no such module \u0027SecurityCoreAdapters\u0027\n  1 | import SecurityCoreAdapters\n    |        `- error: no such module \u0027SecurityCoreAdapters\u0027\n  2 | import SecurityProtocolsCore\n  3 | import UmbraCoreTypes\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services.swiftmodule","label":"//Sources/Services/SecurityUtils/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-444"},"label":"//Sources/Services/SecurityUtils/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Services/SecurityUtils/Services:Services","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services_objs/EncryptedBookmarkService.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Services","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Services/SecurityUtils/Services/EncryptedBookmarkService.swift","Sources/Services/SecurityUtils/Services/PathURLProvider.swift","Sources/Services/SecurityUtils/Services/SecurityBookmarkService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.773804Z","endTime":"2025-03-25T22:47:28.773804Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Services/SecurityUtils/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services.swiftmodule","label":"//Sources/Services/SecurityUtils/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":117}},"children":[{"progress":{"opaqueCount":118}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase.swiftmodule","label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Services/SecurityUtils/Services/BUILD.bazel:3:20: Compiling Swift module //Sources/Services/SecurityUtils/Services:Services failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Services/SecurityUtils/Services:Services) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Services/Services.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Services/SecurityUtils/Services/EncryptedBookmarkService.swift:1:8: error: no such module \u0027CryptoTypes\u0027\n  1 | import CryptoTypes\n    |        `- error: no such module \u0027CryptoTypes\u0027\n  2 | import CryptoTypesProtocols\n  3 | import CryptoTypesTypes\nSources/Services/SecurityUtils/Services/EncryptedBookmarkService.swift:1:8: error: no such module \u0027CryptoTypes\u0027\n  1 | import CryptoTypes\n    |        `- error: no such module \u0027CryptoTypes\u0027\n  2 | import CryptoTypesProtocols\n  3 | import CryptoTypesTypes\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase.swiftmodule","label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-448"},"label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfacesBase:SecurityInterfacesBase","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase_objs/SecurityError.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","SecurityInterfacesBase","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfacesBase/SecurityError.swift","Sources/SecurityInterfacesBase/SecurityInterfacesBase_Aliases.swift","Sources/SecurityInterfacesBase/SecurityProviderBase.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:29.197037Z","endTime":"2025-03-25T22:47:29.197037Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase.swiftmodule","label":"//Sources/SecurityInterfacesBase:SecurityInterfacesBase","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":118}},"children":[{"progress":{"opaqueCount":119}},{"namedSet":{"id":"71"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfacesBase/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfacesBase:SecurityInterfacesBase failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfacesBase:SecurityInterfacesBase) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesBase/SecurityInterfacesBase.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityInterfacesBase/SecurityError.swift:1:8: error: no such module \u0027SecurityBridgeTypes\u0027\n 1 | import SecurityBridgeTypes\n   |        `- error: no such module \u0027SecurityBridgeTypes\u0027\n 2 | import SecurityInterfacesProtocols\n 3 | import UmbraCoreTypes\nSources/SecurityInterfacesBase/SecurityError.swift:1:8: error: no such module \u0027SecurityBridgeTypes\u0027\n 1 | import SecurityBridgeTypes\n   |        `- error: no such module \u0027SecurityBridgeTypes\u0027\n 2 | import SecurityInterfacesProtocols\n 3 | import UmbraCoreTypes\n"}}
{"id":{"namedSet":{"id":"71"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Documentation.docc/CoreDTOsDocumentation.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Documentation.docc/CoreDTOsDocumentation.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b00275fe537331bca4113af5be20c8732defd09a9f794c1a02925de321b5d5d1","length":"996"},{"name":"Sources/CoreDTOs/Documentation.docc/CoreDTOsDocumentation.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Documentation.docc/CoreDTOsDocumentation.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7127d4d28a6e12bf7a25081a6b0e9f9ff08392514270e2b7d6de05829b84958d","length":"18152"},{"name":"Sources/CoreDTOs/Documentation.docc/CoreDTOsDocumentation.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Documentation.docc/CoreDTOsDocumentation.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"86e566c67f8893737a546f413e8d9494384b171d1db6ed0570fbe691b787f6a8","length":"1324"},{"name":"Sources/CoreDTOs/Documentation.docc/libCoreDTOsDocumentation.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Documentation.docc/libCoreDTOsDocumentation.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"064738b18240c6fa7b2d7d075939c15c5172fb98693e4f49c3ab9019f0d15661","length":"14056"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Documentation.docc:CoreDTOsDocumentation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"71"}]}]}}
{"id":{"progress":{"opaqueCount":119}},"children":[{"progress":{"opaqueCount":120}},{"namedSet":{"id":"72"}}],"progress":{}}
{"id":{"namedSet":{"id":"72"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/Progress/Progress.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Progress/Progress.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"bb13db107c4b52e1858e6467f30ef4bc002c6b515d796c0963f7e1e0454e9483","length":"31132"},{"name":"Sources/CoreDTOs/Sources/Progress/Progress.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Progress/Progress.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d4ad9c8359671a2c941639652e00383a67acf30fe4e0d09c6191980a209a5f24","length":"75404"},{"name":"Sources/CoreDTOs/Sources/Progress/Progress.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Progress/Progress.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"dc00af518bc7ee1d7a6c273b7da9d546d9f03d7251e11c19c591ee463851cd3d","length":"30072"},{"name":"Sources/CoreDTOs/Sources/Progress/libProgress.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Progress/libProgress.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0e197c7bdb622d0ca856c3ffd5e7761fb02ccd0cb6a44c00874fb2fc8fe0c777","length":"181176"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Progress:Progress","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"72"}]}]}}
{"id":{"progress":{"opaqueCount":120}},"children":[{"progress":{"opaqueCount":121}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations.swiftmodule","label":"//Sources/SecurityInterfaces/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations.swiftmodule","label":"//Sources/SecurityInterfaces/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-446"},"label":"//Sources/SecurityInterfaces/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfaces/Implementations:Implementations","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations_objs/SecurityOperationResult.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Implementations","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfaces/Implementations/SecurityOperationResult.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.963436Z","endTime":"2025-03-25T22:47:28.963436Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfaces/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations.swiftmodule","label":"//Sources/SecurityInterfaces/Implementations:Implementations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":121}},"children":[{"progress":{"opaqueCount":122}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils.swiftmodule","label":"//Sources/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfaces/Implementations/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfaces/Implementations:Implementations failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfaces/Implementations:Implementations) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfaces/Implementations/Implementations.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityInterfaces/Implementations/SecurityOperationResult.swift:41:48: error: no type named \u0027SecurityResultDTO\u0027 in module \u0027SecurityProtocolsCore\u0027\n39 |   /// Convert to a DTO\n40 |   /// - Returns: SecurityResultDTO representation\n41 |   public func toDTO() -\u003e SecurityProtocolsCore.SecurityResultDTO {\n   |                                                `- error: no type named \u0027SecurityResultDTO\u0027 in module \u0027SecurityProtocolsCore\u0027\n42 |     if success, let data {\n43 |       SecurityProtocolsCore.SecurityResultDTO(data: data)\nSources/SecurityInterfaces/Implementations/SecurityOperationResult.swift:41:48: error: no type named \u0027SecurityResultDTO\u0027 in module \u0027SecurityProtocolsCore\u0027\n39 |   /// Convert to a DTO\n40 |   /// - Returns: SecurityResultDTO representation\n41 |   public func toDTO() -\u003e SecurityProtocolsCore.SecurityResultDTO {\n   |                                                `- error: no type named \u0027SecurityResultDTO\u0027 in module \u0027SecurityProtocolsCore\u0027\n42 |     if success, let data {\n43 |       SecurityProtocolsCore.SecurityResultDTO(data: data)\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils.swiftmodule","label":"//Sources/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-447"},"label":"//Sources/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityUtils:SecurityUtils","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils_objs/SecurityUtils.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","SecurityUtils","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityUtils/SecurityUtils.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:29.001049Z","endTime":"2025-03-25T22:47:29.001049Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils.swiftmodule","label":"//Sources/SecurityUtils:SecurityUtils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":122}},"children":[{"progress":{"opaqueCount":123}},{"namedSet":{"id":"73"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityUtils/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityUtils:SecurityUtils failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityUtils:SecurityUtils) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityUtils/SecurityUtils.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityUtils/SecurityUtils.swift:4:8: error: no such module \u0027SecurityBridge\u0027\n 2 | import Foundation\n 3 | import Security\n 4 | import SecurityBridge\n   |        `- error: no such module \u0027SecurityBridge\u0027\n 5 | import UmbraErrors\n 6 | import UmbraErrorsCore\nSources/SecurityUtils/SecurityUtils.swift:4:8: error: no such module \u0027SecurityBridge\u0027\n 2 | import Foundation\n 3 | import Security\n 4 | import SecurityBridge\n   |        `- error: no such module \u0027SecurityBridge\u0027\n 5 | import UmbraErrors\n 6 | import UmbraErrorsCore\n"}}
{"id":{"namedSet":{"id":"73"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/Scheduling/Scheduling.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Scheduling/Scheduling.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2b53b11ce642df58418fa708d2ac4b7a57fd82cd86b23a3eebcaf7fa453a6e4e","length":"22248"},{"name":"Sources/CoreDTOs/Sources/Scheduling/Scheduling.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Scheduling/Scheduling.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"761ed2da81e70e54d3ba6d6eabced59bf1e1752714cde324009435b06b9382c1","length":"79292"},{"name":"Sources/CoreDTOs/Sources/Scheduling/Scheduling.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Scheduling/Scheduling.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4a57366396f4c2b3359e37713aad087331a6e63bca03ba376984f30b1e552f1e","length":"25408"},{"name":"Sources/CoreDTOs/Sources/Scheduling/libScheduling.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Scheduling/libScheduling.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cbfb7e3a42a4488acf33a02ae54e22e0b48ea4180913ba756ca43d01886a91ca","length":"176336"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Scheduling:Scheduling","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"73"}]}]}}
{"id":{"progress":{"opaqueCount":123}},"children":[{"progress":{"opaqueCount":124}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions.swiftmodule","label":"//Sources/UmbraSecurity/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions.swiftmodule","label":"//Sources/UmbraSecurity/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-450"},"label":"//Sources/UmbraSecurity/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraSecurity/Extensions:Extensions","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions_objs/URL+SecurityScoped.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Extensions","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraSecurity/Extensions/URL+SecurityScoped.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:29.407719Z","endTime":"2025-03-25T22:47:29.407719Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurity/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions.swiftmodule","label":"//Sources/UmbraSecurity/Extensions:Extensions","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":124}},"children":[{"progress":{"opaqueCount":125}},{"namedSet":{"id":"74"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraSecurity/Extensions/BUILD.bazel:3:20: Compiling Swift module //Sources/UmbraSecurity/Extensions:Extensions failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraSecurity/Extensions:Extensions) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/Extensions/Extensions.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraSecurity/Extensions/URL+SecurityScoped.swift:2:8: error: no such module \u0027SecurityBridgeTypes\u0027\n 1 | import Foundation\n 2 | import SecurityBridgeTypes\n   |        `- error: no such module \u0027SecurityBridgeTypes\u0027\n 3 | import SecurityTypes\n 4 | import UmbraCoreTypes\nSources/UmbraSecurity/Extensions/URL+SecurityScoped.swift:2:8: error: no such module \u0027SecurityBridgeTypes\u0027\n 1 | import Foundation\n 2 | import SecurityBridgeTypes\n   |        `- error: no such module \u0027SecurityBridgeTypes\u0027\n 3 | import SecurityTypes\n 4 | import UmbraCoreTypes\n"}}
{"id":{"namedSet":{"id":"74"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraErrors/DTOs/DTOs.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs/DTOs.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3146713630f4c3d03fabce9ca331a90a4a03c215ac0b18379e5e13f209a8d992","length":"26344"},{"name":"Sources/UmbraErrors/DTOs/DTOs.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs/DTOs.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"56a2c2d76843b23303c6d8bb574eead56f8444957a2f22627e3924aba1dd355c","length":"161032"},{"name":"Sources/UmbraErrors/DTOs/DTOs.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs/DTOs.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c855ac95811d517ea3dfd607f8ad1fcfab577fd8d4ff94ea1829736c4d97685d","length":"36860"},{"name":"Sources/UmbraErrors/DTOs/libDTOs.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs/libDTOs.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3cb65dcf56ba7eb58b6d6ed0d70bfb56782a02c556c26ad9fa51adb97f0d8268","length":"477136"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/DTOs:UmbraErrorsDTOs","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"74"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"74"}]}]}}
{"id":{"progress":{"opaqueCount":125}},"children":[{"progress":{"opaqueCount":126}},{"namedSet":{"id":"75"}}],"progress":{}}
{"id":{"namedSet":{"id":"75"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraErrors/Mapping/Mapping.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping/Mapping.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4f59b247e1ecbb6b7b3c58b080dc86eef9a6bab01a4d81180de2ca0c9c0e63d8","length":"10912"},{"name":"Sources/UmbraErrors/Mapping/Mapping.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping/Mapping.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b756ef9ef2d4358b878d5dc9804acb9d2d60d3f9464fbd587de0471399c241a7","length":"40812"},{"name":"Sources/UmbraErrors/Mapping/Mapping.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping/Mapping.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"79f8d5dc1efd08e3c26fc214df54a1a0c920013cd2d7564b0b42c12363ef9373","length":"12236"},{"name":"Sources/UmbraErrors/Mapping/libMapping.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping/libMapping.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"826f92a058fbb0f2756144d6a5ce1179e1fb19b2634ea5b6e80e737ec7b36963","length":"218712"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"75"}]}]}}
{"id":{"progress":{"opaqueCount":126}},"children":[{"progress":{"opaqueCount":127}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services.swiftmodule","label":"//Sources/Features/Logging/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services.swiftmodule","label":"//Sources/Features/Logging/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-449"},"label":"//Sources/Features/Logging/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Features/Logging/Services:Services","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services_objs/DefaultSecurityProvider.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Services","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Features/Logging/Services/DefaultSecurityProvider.swift","Sources/Features/Logging/Services/LoggingService.swift","Sources/Features/Logging/Services/SwiftyBeaverLoggingService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:29.259661Z","endTime":"2025-03-25T22:47:29.259661Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Features/Logging/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services.swiftmodule","label":"//Sources/Features/Logging/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":127}},"children":[{"progress":{"opaqueCount":128}},{"namedSet":{"id":"76"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Features/Logging/Services/BUILD.bazel:3:20: Compiling Swift module //Sources/Features/Logging/Services:Services failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Features/Logging/Services:Services) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Features/Logging/Services/Services.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Features/Logging/Services/DefaultSecurityProvider.swift:2:8: error: no such module \u0027SecurityTypesProtocols\u0027\n  1 | import Foundation\n  2 | import SecurityTypesProtocols\n    |        `- error: no such module \u0027SecurityTypesProtocols\u0027\n  3 | import UmbraCoreTypes\n  4 | import UmbraErrors\nSources/Features/Logging/Services/DefaultSecurityProvider.swift:2:8: error: no such module \u0027SecurityTypesProtocols\u0027\n  1 | import Foundation\n  2 | import SecurityTypesProtocols\n    |        `- error: no such module \u0027SecurityTypesProtocols\u0027\n  3 | import UmbraCoreTypes\n  4 | import UmbraErrors\n[520 / 669] Compiling Swift module //Sources/CoreTypesInterfaces/Tests:Tests; 1s disk-cache, worker ... (12 actions, 5 running)\n"}}
{"id":{"namedSet":{"id":"76"}},"namedSetOfFiles":{"files":[{"name":"Sources/XPCProtocolsCore/Documentation/Documentation.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Documentation/Documentation.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cf5aef1dc834e388ea8073d2aa0cc3b7f56b1a4f3f07e90caeb51b5af636aeea","length":"1028"},{"name":"Sources/XPCProtocolsCore/Documentation/Documentation.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Documentation/Documentation.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8303fc43c38b0a721fdf34a6042a4d265980237f5bd86a4407332b3523d2ffa6","length":"18184"},{"name":"Sources/XPCProtocolsCore/Documentation/Documentation.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Documentation/Documentation.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7da501e3a5f51f51c41615096c7008bea73f3abbe55ca7995ae11cfc641c29f8","length":"1348"},{"name":"Sources/XPCProtocolsCore/Documentation/libDocumentation.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Documentation/libDocumentation.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"51de2259f07c07e01faf6198de2e467c1010dea5645ce1b54465365ea2ac0b05","length":"14048"}]}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Documentation:Documentation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"76"}]}]}}
{"id":{"progress":{"opaqueCount":128}},"children":[{"progress":{"opaqueCount":129}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.swiftmodule","label":"//Sources/ErrorHandling/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.swiftmodule","label":"//Sources/ErrorHandling/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-471"},"label":"//Sources/ErrorHandling/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ErrorHandling/Logging:Logging","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging_objs/ErrorLogger.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Logging","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ErrorHandling/Logging/ErrorLogger.swift","Sources/ErrorHandling/Logging/ErrorLoggingSetup.swift","Sources/ErrorHandling/Logging/UmbraErrorLoggingExtensions.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:29.768801Z","endTime":"2025-03-25T22:47:29.768801Z"}}
{"id":{"progress":{"opaqueCount":129}},"children":[{"progress":{"opaqueCount":130}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ErrorHandling/Logging/BUILD.bazel:3:20: Compiling Swift module //Sources/ErrorHandling/Logging:Logging failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ErrorHandling/Logging:Logging) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":130}},"children":[{"progress":{"opaqueCount":131}}],"progress":{"stderr":"Sources/ErrorHandling/Logging/ErrorLogger.swift:15:5: error: cannot find \u0027Logger\u0027 in scope\n 13 |     // Convert metadata to a string format that Logger can accept\n 14 |     let metadataStr \u003d metadata !\u003d nil ? \" \\(metadata!.asDictionary)\" : \"\"\n 15 |     Logger.error(\"\\(message)\\(metadataStr)\", file: #file, function: #function, line: #line)\n    |     `- error: cannot find \u0027Logger\u0027 in scope\n 16 |   }\n 17 | \n\nSources/ErrorHandling/Logging/ErrorLogger.swift:21:5: error: cannot find \u0027Logger\u0027 in scope\n 19 |     // Convert metadata to a string format that Logger can accept\n 20 |     let metadataStr \u003d metadata !\u003d nil ? \" \\(metadata!.asDictionary)\" : \"\"\n 21 |     Logger.warning(\"\\(message)\\(metadataStr)\", file: #file, function: #function, line: #line)\n    |     `- error: cannot find \u0027Logger\u0027 in scope\n 22 |   }\n 23 | \n\nSources/ErrorHandling/Logging/ErrorLogger.swift:27:5: error: cannot find \u0027Logger\u0027 in scope\n 25 |     // Convert metadata to a string format that Logger can accept\n 26 |     let metadataStr \u003d metadata !\u003d nil ? \" \\(metadata!.asDictionary)\" : \"\"\n 27 |     Logger.info(\"\\(message)\\(metadataStr)\", file: #file, function: #function, line: #line)\n    |     `- error: cannot find \u0027Logger\u0027 in scope\n 28 |   }\n 29 | \n\nSources/ErrorHandling/Logging/ErrorLogger.swift:33:5: error: cannot find \u0027Logger\u0027 in scope\n 31 |     // Convert metadata to a string format that Logger can accept\n 32 |     let metadataStr \u003d metadata !\u003d nil ? \" \\(metadata!.asDictionary)\" : \"\"\n 33 |     Logger.debug(\"\\(message)\\(metadataStr)\", file: #file, function: #function, line: #line)\n    |     `- error: cannot find \u0027Logger\u0027 in scope\n 34 |   }\n 35 |   \n\nSources/ErrorHandling/Logging/ErrorLogger.swift:40:5: error: cannot find \u0027Logger\u0027 in scope\n 38 |     // Convert metadata to a string format that Logger can accept\n 39 |     let metadataStr \u003d metadata !\u003d nil ? \" \\(metadata!.asDictionary)\" : \"\"\n 40 |     Logger.error(\"[CRITICAL] \\(message)\\(metadataStr)\", file: #file, function: #function, line: #line)\n    |     `- error: cannot find \u0027Logger\u0027 in scope\n 41 |   }\n 42 | }\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:96:20: error: value of type \u0027any LoggingProtocol\u0027 has no member \u0027critical\u0027\n 94 |     switch severity {\n 95 |     case .critical:\n 96 |       await logger.critical(message, metadata: metadata)\n    |                    `- error: value of type \u0027any LoggingProtocol\u0027 has no member \u0027critical\u0027\n 97 |     case .error:\n 98 |       await logger.error(message, metadata: metadata)\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:112:18: error: value of type \u0027any LoggingProtocol\u0027 has no member \u0027critical\u0027\n110 |   /// Convenience method for critical logs\n111 |   public func critical(_ message: String, metadata: LogMetadata? \u003d nil) async {\n112 |     await logger.critical(message, metadata: metadata)\n    |                  `- error: value of type \u0027any LoggingProtocol\u0027 has no member \u0027critical\u0027\n113 |   }\n114 |   \n\nSources/ErrorHandling/Logging/ErrorLogger.swift:154:49: error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n152 |     if let umbraError \u003d error as? UmbraErrorsCore.UmbraError {\n153 |       // Add context information from UmbraError\n154 |       metadata \u003d LogMetadata(umbraError.context.asMetadataDictionary())\n    |                                                 |- error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n    |                                                 `- note: arguments to generic parameter \u0027Value\u0027 (\u0027Any\u0027 and \u0027String\u0027) are expected to be equal\n155 |       \n156 |       // Add other UmbraError properties\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:157:29: error: type \u0027String?\u0027 has no member \u0027string\u0027\n155 |       \n156 |       // Add other UmbraError properties\n157 |       metadata[\"domain\"] \u003d .string(umbraError.domain)\n    |                             `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n158 |       metadata[\"code\"] \u003d .string(umbraError.code)\n159 |       metadata[\"description\"] \u003d .string(umbraError.description)\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:158:27: error: type \u0027String?\u0027 has no member \u0027string\u0027\n156 |       // Add other UmbraError properties\n157 |       metadata[\"domain\"] \u003d .string(umbraError.domain)\n158 |       metadata[\"code\"] \u003d .string(umbraError.code)\n    |                           `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n159 |       metadata[\"description\"] \u003d .string(umbraError.description)\n160 |       metadata[\"severity\"] \u003d .string(\"\\(umbraError.severity)\")\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:159:34: error: type \u0027String?\u0027 has no member \u0027string\u0027\n157 |       metadata[\"domain\"] \u003d .string(umbraError.domain)\n158 |       metadata[\"code\"] \u003d .string(umbraError.code)\n159 |       metadata[\"description\"] \u003d .string(umbraError.description)\n    |                                  `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n160 |       metadata[\"severity\"] \u003d .string(\"\\(umbraError.severity)\")\n161 |     } else {\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:160:31: error: type \u0027String?\u0027 has no member \u0027string\u0027\n158 |       metadata[\"code\"] \u003d .string(umbraError.code)\n159 |       metadata[\"description\"] \u003d .string(umbraError.description)\n160 |       metadata[\"severity\"] \u003d .string(\"\\(umbraError.severity)\")\n    |                               `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n161 |     } else {\n162 |       // For non-UmbraErrors, add basic information\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:160:52: error: value of type \u0027any UmbraError\u0027 has no member \u0027severity\u0027\n158 |       metadata[\"code\"] \u003d .string(umbraError.code)\n159 |       metadata[\"description\"] \u003d .string(umbraError.description)\n160 |       metadata[\"severity\"] \u003d .string(\"\\(umbraError.severity)\")\n    |                                                    `- error: value of type \u0027any UmbraError\u0027 has no member \u0027severity\u0027\n161 |     } else {\n162 |       // For non-UmbraErrors, add basic information\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:163:33: error: type \u0027String?\u0027 has no member \u0027string\u0027\n161 |     } else {\n162 |       // For non-UmbraErrors, add basic information\n163 |       metadata[\"error_type\"] \u003d .string(\"\\(type(of: error))\")\n    |                                 `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n164 |       metadata[\"description\"] \u003d .string(error.localizedDescription)\n165 |     }\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:164:34: error: type \u0027String?\u0027 has no member \u0027string\u0027\n162 |       // For non-UmbraErrors, add basic information\n163 |       metadata[\"error_type\"] \u003d .string(\"\\(type(of: error))\")\n164 |       metadata[\"description\"] \u003d .string(error.localizedDescription)\n    |                                  `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n165 |     }\n166 |     \n\nSources/ErrorHandling/Logging/ErrorLogger.swift:169:27: error: type \u0027String?\u0027 has no member \u0027string\u0027\n167 |     // Include source location if enabled\n168 |     if configuration.includeSourceLocation {\n169 |       metadata[\"file\"] \u003d .string(#file)\n    |                           `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n170 |       metadata[\"function\"] \u003d .string(#function)\n171 |       metadata[\"line\"] \u003d .string(\"\\(#line)\")\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:170:31: error: type \u0027String?\u0027 has no member \u0027string\u0027\n168 |     if configuration.includeSourceLocation {\n169 |       metadata[\"file\"] \u003d .string(#file)\n170 |       metadata[\"function\"] \u003d .string(#function)\n    |                               `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n171 |       metadata[\"line\"] \u003d .string(\"\\(#line)\")\n172 |     }\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:171:27: error: type \u0027String?\u0027 has no member \u0027string\u0027\n169 |       metadata[\"file\"] \u003d .string(#file)\n170 |       metadata[\"function\"] \u003d .string(#function)\n171 |       metadata[\"line\"] \u003d .string(\"\\(#line)\")\n    |                           `- error: type \u0027String?\u0027 has no member \u0027string\u0027\n172 |     }\n173 |     \n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:14:5: error: cannot find \u0027domainFilters\u0027 in scope\n 12 |   ///   - level: The minimum log level for this domain\n 13 |   public func setDomainFilter(domain: String, level: ErrorLoggingLevel) {\n 14 |     domainFilters[domain] \u003d level\n    |     `- error: cannot find \u0027domainFilters\u0027 in scope\n 15 |   }\n 16 | \n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:20:5: error: cannot find \u0027domainFilters\u0027 in scope\n 18 |   /// - Parameter domain: The domain to clear the filter for\n 19 |   public func clearDomainFilter(domain: String) {\n 20 |     domainFilters.removeValue(forKey: domain)\n    |     `- error: cannot find \u0027domainFilters\u0027 in scope\n 21 |   }\n 22 | \n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:25:5: error: cannot find \u0027domainFilters\u0027 in scope\n 23 |   /// Clears all domain filters\n 24 |   public func clearAllDomainFilters() {\n 25 |     domainFilters.removeAll()\n    |     `- error: cannot find \u0027domainFilters\u0027 in scope\n 26 |   }\n 27 | \n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:35:26: error: cannot find \u0027domainFilters\u0027 in scope\n 33 |   internal func shouldProcessLog(domain: String, level: ErrorLoggingLevel) -\u003e Bool {\n 34 |     // If no domain filter exists, use the global minimum level\n 35 |     guard let minLevel \u003d domainFilters[domain] else {\n    |                          `- error: cannot find \u0027domainFilters\u0027 in scope\n 36 |       return level.rawValue \u003e\u003d configuration.minimumLevel.rawValue\n 37 |     }\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:36:32: error: \u0027configuration\u0027 is inaccessible due to \u0027private\u0027 protection level\n 34 |     // If no domain filter exists, use the global minimum level\n 35 |     guard let minLevel \u003d domainFilters[domain] else {\n 36 |       return level.rawValue \u003e\u003d configuration.minimumLevel.rawValue\n    |                                `- error: \u0027configuration\u0027 is inaccessible due to \u0027private\u0027 protection level\n 37 |     }\n 38 | \n\nSources/ErrorHandling/Logging/ErrorLogger.swift:56:15: note: \u0027configuration\u0027 declared here\n 54 | \n 55 |   /// Configuration for the error logger\n 56 |   private let configuration: ErrorLoggerConfiguration\n    |               `- note: \u0027configuration\u0027 declared here\n 57 | \n 58 |   /// Initialises with the default logger and configuration\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:64:44: error: value of type \u0027ErrorContext\u0027 has no member \u0027domain\u0027\n 62 |   ) {\n 63 |     // Skip if we shouldn\u0027t process this log based on domain filters\n 64 |     guard shouldProcessLog(domain: context.domain, level: level) else {\n    |                                            `- error: value of type \u0027ErrorContext\u0027 has no member \u0027domain\u0027\n 65 |       return\n 66 |     }\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:69:25: error: value of type \u0027ErrorContext\u0027 has no member \u0027domain\u0027\n 67 | \n 68 |     var metadata: [String: String] \u003d [\n 69 |       \"domain\": context.domain,\n    |                         `- error: value of type \u0027ErrorContext\u0027 has no member \u0027domain\u0027\n 70 |       \"code\": context.code,\n 71 |       \"errorDescription\": context.description\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:70:23: error: value of type \u0027ErrorContext\u0027 has no member \u0027code\u0027\n 68 |     var metadata: [String: String] \u003d [\n 69 |       \"domain\": context.domain,\n 70 |       \"code\": context.code,\n    |                       `- error: value of type \u0027ErrorContext\u0027 has no member \u0027code\u0027\n 71 |       \"errorDescription\": context.description\n 72 |     ]\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:71:35: error: value of type \u0027ErrorContext\u0027 has no member \u0027description\u0027\n 69 |       \"domain\": context.domain,\n 70 |       \"code\": context.code,\n 71 |       \"errorDescription\": context.description\n    |                                   `- error: value of type \u0027ErrorContext\u0027 has no member \u0027description\u0027\n 72 |     ]\n 73 | \n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:74:8: error: \u0027configuration\u0027 is inaccessible due to \u0027private\u0027 protection level\n 72 |     ]\n 73 | \n 74 |     if configuration.includeSourceLocation {\n    |        `- error: \u0027configuration\u0027 is inaccessible due to \u0027private\u0027 protection level\n 75 |       metadata[\"file\"] \u003d file\n 76 |       metadata[\"function\"] \u003d function\n\nSources/ErrorHandling/Logging/ErrorLogger.swift:56:15: note: \u0027configuration\u0027 declared here\n 54 | \n 55 |   /// Configuration for the error logger\n 56 |   private let configuration: ErrorLoggerConfiguration\n    |               `- note: \u0027configuration\u0027 declared here\n 57 | \n 58 |   /// Initialises with the default logger and configuration\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:80:30: error: value of type \u0027ErrorContext\u0027 has no member \u0027domain\u0027\n 78 |     }\n 79 | \n 80 |     let message \u003d \"\\(context.domain) [\\(context.code)]: \\(context.description)\"\n    |                              `- error: value of type \u0027ErrorContext\u0027 has no member \u0027domain\u0027\n 81 |     \n 82 |     // Use a local method to log the message instead of directly accessing the logger property\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:95:32: error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n 93 |     switch level {\n 94 |     case .debug:\n 95 |       debug(message, metadata: metadata)\n    |                                `- error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n 96 |     case .info:\n 97 |       info(message, metadata: metadata)\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:97:31: error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n 95 |       debug(message, metadata: metadata)\n 96 |     case .info:\n 97 |       info(message, metadata: metadata)\n    |                               `- error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n 98 |     case .warning:\n 99 |       warning(message, metadata: metadata)\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:99:34: error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n 97 |       info(message, metadata: metadata)\n 98 |     case .warning:\n 99 |       warning(message, metadata: metadata)\n    |                                  `- error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n100 |     case .error:\n101 |       error(message, metadata: metadata)\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:101:32: error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n 99 |       warning(message, metadata: metadata)\n100 |     case .error:\n101 |       error(message, metadata: metadata)\n    |                                `- error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n102 |     case .critical:\n103 |       critical(message, metadata: metadata)\n\nSources/ErrorHandling/Logging/ErrorLoggingSetup.swift:103:35: error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n101 |       error(message, metadata: metadata)\n102 |     case .critical:\n103 |       critical(message, metadata: metadata)\n    |                                   `- error: cannot convert value of type \u0027[String : String]\u0027 to expected argument type \u0027LogMetadata?\u0027\n104 |     }\n105 |   }\n\nSources/ErrorHandling/Logging/UmbraErrorLoggingExtensions.swift:23:68: error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n 21 |       message \u003d \"\\(additionalMessage): \\(message)\"\n 22 |     }\n 23 |     await logger.error(message, metadata: LogMetadata(self.context.asMetadataDictionary()))\n    |                                                                    |- error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n    |                                                                    `- note: arguments to generic parameter \u0027Value\u0027 (\u0027Any\u0027 and \u0027String\u0027) are expected to be equal\n 24 |   }\n 25 | \n\nSources/ErrorHandling/Logging/UmbraErrorLoggingExtensions.swift:38:70: error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n 36 |       message \u003d \"\\(additionalMessage): \\(message)\"\n 37 |     }\n 38 |     await logger.warning(message, metadata: LogMetadata(self.context.asMetadataDictionary()))\n    |                                                                      |- error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n    |                                                                      `- note: arguments to generic parameter \u0027Value\u0027 (\u0027Any\u0027 and \u0027String\u0027) are expected to be equal\n 39 |   }\n 40 | \n\nSources/ErrorHandling/Logging/UmbraErrorLoggingExtensions.swift:53:67: error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n 51 |       message \u003d \"\\(additionalMessage): \\(message)\"\n 52 |     }\n 53 |     await logger.info(message, metadata: LogMetadata(self.context.asMetadataDictionary()))\n    |                                                                   |- error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n    |                                                                   `- note: arguments to generic parameter \u0027Value\u0027 (\u0027Any\u0027 and \u0027String\u0027) are expected to be equal\n 54 |   }\n 55 | \n\nSources/ErrorHandling/Logging/UmbraErrorLoggingExtensions.swift:68:68: error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n 66 |       message \u003d \"\\(additionalMessage): \\(message)\"\n 67 |     }\n 68 |     await logger.debug(message, metadata: LogMetadata(self.context.asMetadataDictionary()))\n    |                                                                    |- error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n    |                                                                    `- note: arguments to generic parameter \u0027Value\u0027 (\u0027Any\u0027 and \u0027String\u0027) are expected to be equal\n 69 |   }\n 70 | \n\nSources/ErrorHandling/Logging/UmbraErrorLoggingExtensions.swift:83:71: error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n 81 |       message \u003d \"\\(additionalMessage): \\(message)\"\n 82 |     }\n 83 |     await logger.critical(message, metadata: LogMetadata(self.context.asMetadataDictionary()))\n    |                                                                       |- error: cannot convert value of type \u0027[String : Any]\u0027 to expected argument type \u0027[String : String]\u0027\n    |                                                                       `- note: arguments to generic parameter \u0027Value\u0027 (\u0027Any\u0027 and \u0027String\u0027) are expected to be equal\n 84 |   }\n 85 | \n\nSources/ErrorHandling/Logging/UmbraErrorLoggingExtensions.swift:94:12: error: cannot find \u0027severity\u0027 in scope\n 92 |     logger: ErrorLogger \u003d ErrorLogger.shared\n 93 |   ) async {\n 94 |     switch severity {\n    |            `- error: cannot find \u0027severity\u0027 in scope\n 95 |     case .trace, .debug:\n 96 |       await logAsDebug(additionalMessage: additionalMessage, logger: logger)\n"}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.swiftmodule","label":"//Sources/ErrorHandling/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":131}},"children":[{"progress":{"opaqueCount":132}},{"namedSet":{"id":"77"}}],"progress":{"stderr":"INFO: From Compiling Swift module //Sources/ErrorHandling/Protocols:Protocols:\nSources/ErrorHandling/Protocols/Common.swift:35:15: warning: stored property \u0027actionHandler\u0027 of \u0027Sendable\u0027-conforming struct \u0027StandardRecoveryOption\u0027 has non-sendable type \u0027() async -\u003e Void\u0027; this is an error in the Swift 6 language mode\n33 |   public let isDisruptive: Bool\n34 |   /// Action to take when the option is selected\n35 |   private let actionHandler: () async -\u003e Void\n   |               |- warning: stored property \u0027actionHandler\u0027 of \u0027Sendable\u0027-conforming struct \u0027StandardRecoveryOption\u0027 has non-sendable type \u0027() async -\u003e Void\u0027; this is an error in the Swift 6 language mode\n   |               `- note: a function type must be marked \u0027@Sendable\u0027 to conform to \u0027Sendable\u0027\n36 | \n37 |   /// Initialize a recovery option\nSources/ErrorHandling/Protocols/Common.swift:35:15: warning: stored property \u0027actionHandler\u0027 of \u0027Sendable\u0027-conforming struct \u0027StandardRecoveryOption\u0027 has non-sendable type \u0027() async -\u003e Void\u0027; this is an error in the Swift 6 language mode\n33 |   public let isDisruptive: Bool\n34 |   /// Action to take when the option is selected\n35 |   private let actionHandler: () async -\u003e Void\n   |               |- warning: stored property \u0027actionHandler\u0027 of \u0027Sendable\u0027-conforming struct \u0027StandardRecoveryOption\u0027 has non-sendable type \u0027() async -\u003e Void\u0027; this is an error in the Swift 6 language mode\n   |               `- note: a function type must be marked \u0027@Sendable\u0027 to conform to \u0027Sendable\u0027\n36 | \n37 |   /// Initialize a recovery option\n"}}
{"id":{"namedSet":{"id":"77"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f58e40f77f67b149072a57792f779dc5742ce51e9eef570bc2f04704f6e63f64","length":"15580"},{"name":"Sources/ErrorHandling/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"61e71763b8eda164919c89f912d68954c245a4b732fc38083e4283611fcdd1b1","length":"38712"},{"name":"Sources/ErrorHandling/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8d524324b3d3afc9188a6e3328ff137f046f5107e0ab538efe59e402b1876581","length":"20976"},{"name":"Sources/ErrorHandling/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2cad8db71560088653063708fb4591c14a9bb3f40a6878bdc31cb16da6b41091","length":"74080"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"77"}]}]}}
{"id":{"progress":{"opaqueCount":132}},"children":[{"progress":{"opaqueCount":133}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols.swiftmodule","label":"//Sources/Services/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols.swiftmodule","label":"//Sources/Services/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-472"},"label":"//Sources/Services/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Services/SecurityUtils/Protocols:Protocols","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols_objs/URLProvider.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Protocols","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Services/SecurityUtils/Protocols/URLProvider.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:29.971092Z","endTime":"2025-03-25T22:47:29.971092Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Services/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols.swiftmodule","label":"//Sources/Services/SecurityUtils/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":133}},"children":[{"progress":{"opaqueCount":134}},{"namedSet":{"id":"78"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Services/SecurityUtils/Protocols/BUILD.bazel:3:20: Compiling Swift module //Sources/Services/SecurityUtils/Protocols:Protocols failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Services/SecurityUtils/Protocols:Protocols) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Services/SecurityUtils/Protocols/Protocols.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Services/SecurityUtils/Protocols/URLProvider.swift:3:8: error: no such module \u0027UmbraErrors\u0027\n  1 | import Foundation\n  2 | import UmbraCoreTypes\n  3 | import UmbraErrors\n    |        `- error: no such module \u0027UmbraErrors\u0027\n  4 | import UmbraErrorsCore\n  5 | import UmbraSecurity\nSources/Services/SecurityUtils/Protocols/URLProvider.swift:3:8: error: no such module \u0027UmbraErrors\u0027\n  1 | import Foundation\n  2 | import UmbraCoreTypes\n  3 | import UmbraErrors\n    |        `- error: no such module \u0027UmbraErrors\u0027\n  4 | import UmbraErrorsCore\n  5 | import UmbraSecurity\n"}}
{"id":{"namedSet":{"id":"78"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/UserDefaults/UserDefaults.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/UserDefaults/UserDefaults.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9321ca61a985ee638d5b94c0f692f302f280f44305db361283aeb7b0b8135473","length":"9240"},{"name":"Sources/CoreDTOs/Sources/UserDefaults/UserDefaults.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/UserDefaults/UserDefaults.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"49a3bb4d072eff3e9e6c43787ecaa9a4e77a79514063a15830bd35bd0fdba277","length":"25908"},{"name":"Sources/CoreDTOs/Sources/UserDefaults/UserDefaults.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/UserDefaults/UserDefaults.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"aba4cc7a44a0b927ab82459b3c9bcf41fdd600e841f3335f75d3e0efa5ed5af2","length":"10580"},{"name":"Sources/CoreDTOs/Sources/UserDefaults/libUserDefaults.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/UserDefaults/libUserDefaults.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0d8579fe2f3f62f706f1c3a87a436b1bba84c4adbbe33f1b3ae2744a6bc52c10","length":"54840"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/UserDefaults:UserDefaults","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"78"}]}]}}
{"id":{"progress":{"opaqueCount":134}},"children":[{"progress":{"opaqueCount":135}},{"namedSet":{"id":"79"}}],"progress":{}}
{"id":{"namedSet":{"id":"79"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Bridge/Core.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Core.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7810dec300483a85c026c3e6fd0cbc595dbd112962f2ed13ef7423d8e2793e11","length":"408"},{"name":"Sources/Security/Adapters/Bridge/Core.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Core.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a146cfb6b28c6e89947eeac7049ddfcbdca6458831a627bcdeaea112eceec192","length":"16616"},{"name":"Sources/Security/Adapters/Bridge/Core.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Core.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e049ee299c265f11cd2b1012ea1a8850e5fc18793540c86f53e001f2e5151f01","length":"860"},{"name":"Sources/Security/Adapters/Bridge/libCore.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/libCore.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"29b0c28b2b94f61f2694a664652470c60dc89c1d8464243cd50abe623b24abe3","length":"6440"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"79"}]}]}}
{"id":{"progress":{"opaqueCount":135}},"children":[{"progress":{"opaqueCount":136}},{"namedSet":{"id":"80"}}],"progress":{}}
{"id":{"namedSet":{"id":"80"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/Operations/Operations.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations/Operations.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"98e9627a98aff16e893172deb7d9155423d7d681ca79350fd9297b3d26913029","length":"2104"},{"name":"Sources/CoreDTOs/Sources/Operations/Operations.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations/Operations.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5f36ea896bd82f7c66c8accdc3212bac7f03871586aec3a707bd59d7662e3a16","length":"18708"},{"name":"Sources/CoreDTOs/Sources/Operations/Operations.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations/Operations.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e804b475f8a7b5a724af895ef5de773e5ae4665e4d54e094dfa65c03bc764e2e","length":"2460"},{"name":"Sources/CoreDTOs/Sources/Operations/libOperations.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations/libOperations.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1e30bc3a61ddd5acf2e709748bdfdef5039a670eba0a81d1be0799a27e48f34f","length":"20848"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Operations:Operations","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"80"}]}]}}
{"id":{"progress":{"opaqueCount":136}},"children":[{"progress":{"opaqueCount":137}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters.swiftmodule","label":"//Sources/FileSystemService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters.swiftmodule","label":"//Sources/FileSystemService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-451"},"label":"//Sources/FileSystemService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/FileSystemService/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters_objs/FileSystemServiceDTOAdapter.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/FileSystemService/Adapters/FileSystemServiceDTOAdapter.swift","Sources/FileSystemService/Adapters/FileSystemServiceDTOFactory.swift","Sources/FileSystemService/Adapters/FileSystemServiceDTOProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:29.664456Z","endTime":"2025-03-25T22:47:29.664456Z"}}
{"id":{"targetCompleted":{"label":"//Sources/FileSystemService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters.swiftmodule","label":"//Sources/FileSystemService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":137}},"children":[{"progress":{"opaqueCount":138}},{"namedSet":{"id":"81"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/FileSystemService/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/FileSystemService/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/FileSystemService/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/FileSystemService/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/FileSystemService/Adapters/FileSystemServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import UmbraCoreTypes\nSources/FileSystemService/Adapters/FileSystemServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import UmbraCoreTypes\n"}}
{"id":{"namedSet":{"id":"81"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandlingModels/ErrorHandlingModels.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingModels/ErrorHandlingModels.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6ca7fbb5e6a257e28323f285ed95b53b9a6926286a2c217af26e6165bc458156","length":"1304"},{"name":"Sources/ErrorHandlingModels/ErrorHandlingModels.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingModels/ErrorHandlingModels.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"328d017616af8a8b42b9c17aa5c17f362915422578700e14455c1d3ac31dd609","length":"22572"},{"name":"Sources/ErrorHandlingModels/ErrorHandlingModels.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingModels/ErrorHandlingModels.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"828e27563813b56a6e8bbf9b1999d72951b8b3ae87d334fc12e9e89f14d024e3","length":"1916"},{"name":"Sources/ErrorHandlingModels/libErrorHandlingModels.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingModels/libErrorHandlingModels.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"537a0dc2907dbcdce8a73b500798a36759be586c98fbf8f6d0aeeaf0b156bd98","length":"21344"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandlingModels:ErrorHandlingModels","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"81"}]}]}}
{"id":{"progress":{"opaqueCount":138}},"children":[{"progress":{"opaqueCount":139}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity.swiftmodule","label":"//Sources/UmbraSecurity:UmbraSecurity","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity.swiftmodule","label":"//Sources/UmbraSecurity:UmbraSecurity","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-479"},"label":"//Sources/UmbraSecurity:UmbraSecurity","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraSecurity:UmbraSecurity","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity_objs/URL+SecurityScoped.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraSecurity","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraSecurity/URL+SecurityScoped.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:30.229856Z","endTime":"2025-03-25T22:47:30.229856Z"}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurity:UmbraSecurity","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity.swiftmodule","label":"//Sources/UmbraSecurity:UmbraSecurity","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":139}},"children":[{"progress":{"opaqueCount":140}},{"namedSet":{"id":"82"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraSecurity/BUILD.bazel:8:20: Compiling Swift module //Sources/UmbraSecurity:UmbraSecurity failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraSecurity:UmbraSecurity) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurity/UmbraSecurity.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/UmbraSecurity/URL+SecurityScoped.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n  1 | import CoreTypesInterfaces\n    |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\nSources/UmbraSecurity/URL+SecurityScoped.swift:1:8: error: no such module \u0027CoreTypesInterfaces\u0027\n  1 | import CoreTypesInterfaces\n    |        `- error: no such module \u0027CoreTypesInterfaces\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\n"}}
{"id":{"namedSet":{"id":"82"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/CoreDTOs.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/CoreDTOs.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"39c8d4be3631cdd684294a2a3829761c1bc616674ef456726edb58ad55793377","length":"672"},{"name":"Sources/CoreDTOs/CoreDTOs.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/CoreDTOs.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2688550ee94b705a40dda84cc87660ff1261131a26dca6c9b5d908bb44c526ec","length":"17968"},{"name":"Sources/CoreDTOs/CoreDTOs.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/CoreDTOs.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e12adeadc850b8b509dbdc321b7a7bef6f7f0b3c7183f1cab587d6406f1e5be7","length":"1008"},{"name":"Sources/CoreDTOs/libCoreDTOs.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/libCoreDTOs.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7f26afa16ffecdc4bd7353c8c980299fd6b67c6c9273208785d327075cf40322","length":"10920"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs:CoreDTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"82"}]}]}}
{"id":{"progress":{"opaqueCount":140}},"children":[{"progress":{"opaqueCount":141}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters.swiftmodule","label":"//Sources/DateTimeService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters.swiftmodule","label":"//Sources/DateTimeService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-483"},"label":"//Sources/DateTimeService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/DateTimeService/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters_objs/DateTimeDTOAdapter.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/DateTimeService/Adapters/DateTimeDTOAdapter.swift","Sources/DateTimeService/Adapters/DateTimeDTOFactory.swift","Sources/DateTimeService/Adapters/DateTimeDTOProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:30.286420Z","endTime":"2025-03-25T22:47:30.286420Z"}}
{"id":{"targetCompleted":{"label":"//Sources/DateTimeService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters.swiftmodule","label":"//Sources/DateTimeService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":141}},"children":[{"progress":{"opaqueCount":142}},{"namedSet":{"id":"83"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/DateTimeService/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/DateTimeService/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/DateTimeService/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/DateTimeService/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/DateTimeService/Adapters/DateTimeDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import UmbraCoreTypes\nSources/DateTimeService/Adapters/DateTimeDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import Foundation\n  3 | import UmbraCoreTypes\n"}}
{"id":{"namedSet":{"id":"83"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Examples/Examples.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Examples/Examples.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"780e3e6622bcabb9e54bf0ff2a3c3470474cba9d67a0824cabdf7d465d76ac83","length":"1564"},{"name":"Sources/ErrorHandling/Examples/Examples.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Examples/Examples.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"75da1f1da8364dd83832e5e669a4b4cface0bee4e96a395c1f6e8f7dc65a4f34","length":"24944"},{"name":"Sources/ErrorHandling/Examples/Examples.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Examples/Examples.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d80c320173979e1e96b3d7172ae5258aa9d7b761bc467a62766e54de604abd63","length":"2452"},{"name":"Sources/ErrorHandling/Examples/libExamples.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Examples/libExamples.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e229b8628343eab1b16cdf6ab7891174d928e7244f309b54fc90d9fc54944653","length":"33592"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Examples:Examples","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"83"}]}]}}
{"id":{"progress":{"opaqueCount":142}},"children":[{"progress":{"opaqueCount":143}},{"namedSet":{"id":"84"}}],"progress":{}}
{"id":{"namedSet":{"id":"84"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Core/Core.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Core/Core.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e4ca336d56aa375d460003d5317e2e2b3ad57789ab08739dd19e3b12ce053f4b","length":"6868"},{"name":"Sources/ErrorHandling/Core/Core.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Core/Core.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a7efa6ec0c52e249c29c8b999bcc7d4b1293c49abeb0453d19f1879867277b55","length":"26452"},{"name":"Sources/ErrorHandling/Core/Core.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Core/Core.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c456cdba32ac965bd0546bfa545664bb5d922a1f05eec8f0299e12221f11ea66","length":"6328"},{"name":"Sources/ErrorHandling/Core/libCore.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Core/libCore.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0c78d72bcfb3c07f3b0dce69d362f6fd5fdda34f28bde2d5cc98ea1e43d92040","length":"64816"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"84"}]}]}}
{"id":{"progress":{"opaqueCount":143}},"children":[{"progress":{"opaqueCount":144}},{"namedSet":{"id":"85"}}],"progress":{"stderr":"[547 / 669] Compiling Swift module //Sources/CoreTypesInterfaces/Tests:Tests; 3s disk-cache, worker ... (12 actions, 5 running)\n"}}
{"id":{"namedSet":{"id":"85"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/Notification/Notification.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Notification/Notification.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d5b47d1402f4ea12055fdc95864ea435d684b8b40ce4345251b0576609a907e8","length":"6452"},{"name":"Sources/CoreDTOs/Sources/Notification/Notification.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Notification/Notification.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e3a4c4656afccf2e56622df2775bc56d2b275fb8795be44f9713946e6a525d40","length":"27204"},{"name":"Sources/CoreDTOs/Sources/Notification/Notification.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Notification/Notification.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ea095eca27a23bfb62ae6f2b4e95ceafde830ef54ed3c8c2538156a53b695ff1","length":"5772"},{"name":"Sources/CoreDTOs/Sources/Notification/libNotification.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Notification/libNotification.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b1cf1d10272b4cb3e66dc88af52848b5df1649570af8976b08ee877bee35171c","length":"39960"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Notification:Notification","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"85"}]}]}}
{"id":{"progress":{"opaqueCount":144}},"children":[{"progress":{"opaqueCount":145}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters.swiftmodule","label":"//Sources/NetworkService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters.swiftmodule","label":"//Sources/NetworkService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-480"},"label":"//Sources/NetworkService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/NetworkService/Adapters:Adapters","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters_objs/NetworkServiceDTOAdapter.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Adapters","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/NetworkService/Adapters/NetworkServiceDTOAdapter.swift","Sources/NetworkService/Adapters/NetworkServiceDTOFactory.swift","Sources/NetworkService/Adapters/NetworkServiceDTOProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:30.245199Z","endTime":"2025-03-25T22:47:30.245199Z"}}
{"id":{"targetCompleted":{"label":"//Sources/NetworkService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters.swiftmodule","label":"//Sources/NetworkService/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfaces:SecurityInterfaces","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Domains/Domains.swiftmodule","label":"//Sources/ErrorHandling/Domains:Domains","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":145}},"children":[{"progress":{"opaqueCount":146}},{"namedSet":{"id":"86"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/NetworkService/Adapters/BUILD.bazel:3:20: Compiling Swift module //Sources/NetworkService/Adapters:Adapters failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/NetworkService/Adapters:Adapters) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/NetworkService/Adapters/Adapters.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/NetworkService/Adapters/NetworkServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\nSources/NetworkService/Adapters/NetworkServiceDTOAdapter.swift:1:8: error: no such module \u0027CoreDTOs\u0027\n  1 | import CoreDTOs\n    |        `- error: no such module \u0027CoreDTOs\u0027\n  2 | import UmbraErrors\n  3 | import UmbraErrorsCore\n"}}
{"id":{"namedSet":{"id":"86"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraErrors/UmbraErrors.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/UmbraErrors.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a612d2198231d0db2aaf408517c0dd9c23d3d101a289296864ed34f714250fd8","length":"416"},{"name":"Sources/UmbraErrors/UmbraErrors.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/UmbraErrors.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5480b9e96255ece139550cf2cc335057842cc414c46399e8a931ad268eb4449c","length":"16684"},{"name":"Sources/UmbraErrors/UmbraErrors.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/UmbraErrors.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"e075786d013d0a427f05a319d4c914312e0d0a176f2d630548087b5c4e2fd9f1","length":"672"},{"name":"Sources/UmbraErrors/libUmbraErrors.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/libUmbraErrors.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"71c85692678cf19dd7aebc2fe8737bc7ece406dd4ee66137a2dbafdf7f40c454","length":"7904"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors:UmbraErrors","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"86"}]}]}}
{"id":{"progress":{"opaqueCount":146}},"children":[{"progress":{"opaqueCount":147}},{"namedSet":{"id":"87"}}],"progress":{}}
{"id":{"namedSet":{"id":"87"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/Configuration/Configuration.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Configuration/Configuration.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"104c3bda7c835e6c6eafa4548a694a16ff4f60fdd4eedaffa7733054d4ae7036","length":"11692"},{"name":"Sources/CoreDTOs/Sources/Configuration/Configuration.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Configuration/Configuration.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c7ac78d608aaab4a4bcb64b5891a477adb4ae7114c4de8d6892d045c55c982f4","length":"31212"},{"name":"Sources/CoreDTOs/Sources/Configuration/Configuration.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Configuration/Configuration.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ed0020593a1214f40653af8b5c0ff8beccd7bd7958830775b10e37254200c32c","length":"10108"},{"name":"Sources/CoreDTOs/Sources/Configuration/libConfiguration.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Configuration/libConfiguration.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ea4d5ed56555d2bbd6936922d6015034593897ffedfd547a65121b7a4cf8418e","length":"66352"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Configuration:Configuration","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"87"}]}]}}
{"id":{"progress":{"opaqueCount":147}},"children":[{"progress":{"opaqueCount":148}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping.swiftmodule","label":"//Sources/ErrorHandling/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping.swiftmodule","label":"//Sources/ErrorHandling/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-496"},"label":"//Sources/ErrorHandling/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ErrorHandling/Mapping:Mapping","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping_objs/ApplicationErrorMapper.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Protocols","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Core","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Mapping","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ErrorHandling/Mapping/ApplicationErrorMapper.swift","Sources/ErrorHandling/Mapping/ErrorMapper.swift","Sources/ErrorHandling/Mapping/ErrorRegistry.swift","Sources/ErrorHandling/Mapping/SecurityErrorMapper.swift","Sources/ErrorHandling/Mapping/UmbraErrorMapper.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:30.878692Z","endTime":"2025-03-25T22:47:30.878692Z"}}
{"id":{"progress":{"opaqueCount":148}},"children":[{"progress":{"opaqueCount":149}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ErrorHandling/Mapping/BUILD.bazel:8:20: Compiling Swift module //Sources/ErrorHandling/Mapping:Mapping failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ErrorHandling/Mapping:Mapping) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":149}},"children":[{"progress":{"opaqueCount":150}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:7:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  5 | \n  6 | /// Error domain namespace\n  7 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 |   /// Security domain\n  9 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:17:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:27:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:54:66: error: cannot find type \u0027ApplicationError\u0027 in scope\n 52 |   /// - Parameter error: The source error\n 53 |   /// - Returns: The mapped target error\n 54 |   public func mapError(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                                                  `- error: cannot find type \u0027ApplicationError\u0027 in scope\n 55 |     mapFromTyped(error)\n 56 |   }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:54:33: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 52 |   /// - Parameter error: The source error\n 53 |   /// - Returns: The mapped target error\n 54 |   public func mapError(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                 `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 55 |     mapFromTyped(error)\n 56 |   }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:61:45: error: cannot find type \u0027ApplicationError\u0027 in scope\n 59 |   /// - Parameter error: Any error\n 60 |   /// - Returns: An ApplicationError or nil if the error is not mappable\n 61 |   public func mapFromAny(_ error: Error) -\u003e ApplicationError? {\n    |                                             `- error: cannot find type \u0027ApplicationError\u0027 in scope\n 62 |     // Get the error type name as a string\n 63 |     let errorType\u003dString(describing: type(of: error))\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:99:70: error: cannot find type \u0027ApplicationError\u0027 in scope\n 97 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n 98 |   /// - Returns: The mapped ApplicationError\n 99 |   public func mapFromTyped(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                                                      `- error: cannot find type \u0027ApplicationError\u0027 in scope\n100 |     // Simplify the mapping to avoid issues with mismatched enum cases\n101 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:99:37: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 97 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n 98 |   /// - Returns: The mapped ApplicationError\n 99 |   public func mapFromTyped(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                     `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n100 |     // Simplify the mapping to avoid issues with mismatched enum cases\n101 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:123:66: error: cannot find type \u0027ApplicationError\u0027 in scope\n121 |   /// - Parameter error: The source UmbraErrors.Application.UI error\n122 |   /// - Returns: The mapped ApplicationError\n123 |   private func mapFromUI(_ error: UmbraErrors.Application.UI) -\u003e ApplicationError {\n    |                                                                  `- error: cannot find type \u0027ApplicationError\u0027 in scope\n124 |     // Use string descriptions to avoid pattern matching problems\n125 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:123:35: error: cannot find type \u0027UmbraErrors\u0027 in scope\n121 |   /// - Parameter error: The source UmbraErrors.Application.UI error\n122 |   /// - Returns: The mapped ApplicationError\n123 |   private func mapFromUI(_ error: UmbraErrors.Application.UI) -\u003e ApplicationError {\n    |                                   `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n124 |     // Use string descriptions to avoid pattern matching problems\n125 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:142:80: error: cannot find type \u0027ApplicationError\u0027 in scope\n140 |   /// - Parameter error: The source UmbraErrors.Application.Lifecycle error\n141 |   /// - Returns: The mapped ApplicationError\n142 |   private func mapFromLifecycle(_ error: UmbraErrors.Application.Lifecycle) -\u003e ApplicationError {\n    |                                                                                `- error: cannot find type \u0027ApplicationError\u0027 in scope\n143 |     // Use string description to avoid pattern matching problems with enum cases\n144 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:142:42: error: cannot find type \u0027UmbraErrors\u0027 in scope\n140 |   /// - Parameter error: The source UmbraErrors.Application.Lifecycle error\n141 |   /// - Returns: The mapped ApplicationError\n142 |   private func mapFromLifecycle(_ error: UmbraErrors.Application.Lifecycle) -\u003e ApplicationError {\n    |                                          `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n143 |     // Use string description to avoid pattern matching problems with enum cases\n144 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:169:74: error: cannot find type \u0027ApplicationError\u0027 in scope\n167 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n168 |   /// - Returns: The mapped ApplicationError\n169 |   private func mapFromSettings(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                                                          `- error: cannot find type \u0027ApplicationError\u0027 in scope\n170 |     // Use string descriptions to categorize settings-related errors\n171 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:169:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n167 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n168 |   /// - Returns: The mapped ApplicationError\n169 |   private func mapFromSettings(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n170 |     // Use string descriptions to categorize settings-related errors\n171 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:44:14: error: type \u0027ApplicationErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 42 | \n 43 | /// Maps application errors from different sources to a consolidated ApplicationError\n 44 | public class ApplicationErrorMapper: ErrorMapper {\n    |              `- error: type \u0027ApplicationErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 45 |   /// The domain this mapper handles\n 46 |   public let domain\u003d\"Application\"\n\nSources/ErrorHandling/Mapping/ErrorMapper.swift:6:18: note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 4 | public protocol ErrorMapper\u003cSourceType, TargetType\u003e {\n 5 |   /// The source error type\n 6 |   associatedtype SourceType: Error\n   |                  `- note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 7 | \n 8 |   /// The target error type\n 9 |   associatedtype TargetType: Error\n   |                  `- note: protocol requires nested type \u0027TargetType\u0027; add nested type \u0027TargetType\u0027 for conformance\n10 | \n11 |   /// Maps from the source error type to the target error type\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:7:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  5 | \n  6 | /// Error domain namespace\n  7 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 |   /// Security domain\n  9 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:17:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:27:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:74:70: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 72 |   /// - Parameter error: The source error\n 73 |   /// - Returns: The mapped target error\n 74 |   public func mapError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                                                      `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 75 |   .SecurityError {\n 76 |     .domainCoreError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:74:33: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 72 |   /// - Parameter error: The source error\n 73 |   /// - Returns: The mapped target error\n 74 |   public func mapError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                 `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 75 |   .SecurityError {\n 76 |     .domainCoreError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:82:53: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 80 |   /// - Parameter error: The source error\n 81 |   /// - Returns: The mapped SecurityError if applicable, or nil if not mappable\n 82 |   public func mapToSecurityError(_ error: Error) -\u003e ErrorHandlingTypes.SecurityError? {\n    |                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 83 |     if let securityCoreError\u003derror as? UmbraErrors.GeneralSecurity.Core {\n 84 |       return .domainCoreError(securityCoreError)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:124:49: error: cannot find type \u0027UmbraErrors\u0027 in scope\n122 |   /// - Parameter error: The source error\n123 |   /// - Returns: The mapped core error if applicable, or nil if not mappable\n124 |   public func mapToCoreError(_ error: Error) -\u003e UmbraErrors.GeneralSecurity.Core? {\n    |                                                 `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n125 |     // Direct mapping if already a core error\n126 |     if let coreError\u003derror as? UmbraErrors.GeneralSecurity.Core {\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:67:15: error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 65 | /// - When adding new error cases, update both mapping functions\n 66 | /// - Use descriptive reasons when mapping to provide context for the error\n 67 | public struct SecurityErrorMapper: ErrorMapper {\n    |               `- error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 68 |   /// Initialises a new mapper\n 69 |   public init() {}\n\nSources/ErrorHandling/Mapping/ErrorMapper.swift:6:18: note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 4 | public protocol ErrorMapper\u003cSourceType, TargetType\u003e {\n 5 |   /// The source error type\n 6 |   associatedtype SourceType: Error\n   |                  `- note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 7 | \n 8 |   /// The target error type\n 9 |   associatedtype TargetType: Error\n   |                  `- note: protocol requires nested type \u0027TargetType\u0027; add nested type \u0027TargetType\u0027 for conformance\n10 | \n11 |   /// Maps from the source error type to the target error type\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:187:69: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n185 |   /// - Parameter error: The source error\n186 |   /// - Returns: The mapped error\n187 |   public func mapAtoB(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n188 |   .SecurityError {\n189 |     mapError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:187:32: error: cannot find type \u0027UmbraErrors\u0027 in scope\n185 |   /// - Parameter error: The source error\n186 |   /// - Returns: The mapped error\n187 |   public func mapAtoB(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n188 |   .SecurityError {\n189 |     mapError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:195:69: error: cannot find type \u0027UmbraErrors\u0027 in scope\n193 |   /// - Parameter error: The target error\n194 |   /// - Returns: The mapped source error\n195 |   public func mapBtoA(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors.GeneralSecurity\n    |                                                                     `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n196 |   .Core {\n197 |     switch error {\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:195:32: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n193 |   /// - Parameter error: The target error\n194 |   /// - Returns: The mapped source error\n195 |   public func mapBtoA(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors.GeneralSecurity\n    |                                `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n196 |   .Core {\n197 |     switch error {\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:183:1: error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027BidirectionalErrorMapper\u0027\n181 | }\n182 | \n183 | extension SecurityErrorMapper: BidirectionalErrorMapper {\n    | `- error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027BidirectionalErrorMapper\u0027\n184 |   /// Maps from source to target error type\n185 |   /// - Parameter error: The source error\n\nSources/ErrorHandling/Mapping/ErrorMapper.swift:20:18: note: protocol requires nested type \u0027ErrorTypeA\u0027; add nested type \u0027ErrorTypeA\u0027 for conformance\n18 | public protocol BidirectionalErrorMapper\u003cErrorTypeA, ErrorTypeB\u003e: ErrorMapper {\n19 |   /// The first error type\n20 |   associatedtype ErrorTypeA: Error\n   |                  `- note: protocol requires nested type \u0027ErrorTypeA\u0027; add nested type \u0027ErrorTypeA\u0027 for conformance\n21 | \n22 |   /// The second error type\n23 |   associatedtype ErrorTypeB: Error\n   |                  `- note: protocol requires nested type \u0027ErrorTypeB\u0027; add nested type \u0027ErrorTypeB\u0027 for conformance\n24 | \n25 |   /// Maps from ErrorTypeA to ErrorTypeB\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:240:11: error: cannot find type \u0027ErrorMapperRegistry\u0027 in scope\n238 | \n239 | /// Error registry extension for registering the security error mapper\n240 | extension ErrorMapperRegistry {\n    |           `- error: cannot find type \u0027ErrorMapperRegistry\u0027 in scope\n241 |   /// Register the security error mapper with the registry\n242 |   public func registerSecurityErrorMapper() {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:63:78: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 61 |   /// - Parameter error: The source error\n 62 |   /// - Returns: The mapped error\n 63 |   public func mapSecurityError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                                                              `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 64 |   .SecurityError {\n 65 |     securityMapper.mapError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:63:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 61 |   /// - Parameter error: The source error\n 62 |   /// - Returns: The mapped error\n 63 |   public func mapSecurityError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 64 |   .SecurityError {\n 65 |     securityMapper.mapError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:74:8: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 72 |     _ error: UmbraErrors.Security\n 73 |       .Protocols\n 74 |   ) -\u003e ErrorHandlingTypes.SecurityError {\n    |        `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 75 |     .domainProtocolError(error)\n 76 |   }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:72:14: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 70 |   /// - Returns: The mapped error\n 71 |   public func mapSecurityProtocolsError(\n 72 |     _ error: UmbraErrors.Security\n    |              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 73 |       .Protocols\n 74 |   ) -\u003e ErrorHandlingTypes.SecurityError {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:81:73: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 79 |   /// - Parameter error: The source error\n 80 |   /// - Returns: The mapped error\n 81 |   public func mapSecurityXPCError(_ error: UmbraErrors.Security.XPC) -\u003e ErrorHandlingTypes\n    |                                                                         `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 82 |   .SecurityError {\n 83 |     .domainXPCError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:81:44: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 79 |   /// - Parameter error: The source error\n 80 |   /// - Returns: The mapped error\n 81 |   public func mapSecurityXPCError(_ error: UmbraErrors.Security.XPC) -\u003e ErrorHandlingTypes\n    |                                            `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 82 |   .SecurityError {\n 83 |     .domainXPCError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:89:79: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 87 |   /// - Parameter error: The source error\n 88 |   /// - Returns: The mapped error\n 89 |   public func mapToSecurityCore(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors\n    |                                                                               `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 90 |   .GeneralSecurity.Core {\n 91 |     securityMapper.mapBtoA(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:89:42: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 87 |   /// - Parameter error: The source error\n 88 |   /// - Returns: The mapped error\n 89 |   public func mapToSecurityCore(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors\n    |                                          `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 90 |   .GeneralSecurity.Core {\n 91 |     securityMapper.mapBtoA(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:97:53: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 95 |   /// - Parameter error: Any error\n 96 |   /// - Returns: The mapped error if conversion is possible, nil otherwise\n 97 |   public func mapToSecurityError(_ error: Error) -\u003e ErrorHandlingTypes.SecurityError? {\n    |                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 98 |     securityMapper.mapToSecurityError(error)\n 99 |   }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:106:81: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n104 |   /// - Parameter error: The source error\n105 |   /// - Returns: The mapped error\n106 |   public func mapDatabaseStorageError(_ error: UmbraErrors.Storage.Database) -\u003e ErrorHandlingTypes\n    |                                                                                 `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n107 |   .StorageError {\n108 |     switch error {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:106:48: error: cannot find type \u0027UmbraErrors\u0027 in scope\n104 |   /// - Parameter error: The source error\n105 |   /// - Returns: The mapped error\n106 |   public func mapDatabaseStorageError(_ error: UmbraErrors.Storage.Database) -\u003e ErrorHandlingTypes\n    |                                                `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n107 |   .StorageError {\n108 |     switch error {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:136:8: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n134 |     _ error: UmbraErrors.Storage\n135 |       .FileSystem\n136 |   ) -\u003e ErrorHandlingTypes.StorageError {\n    |        `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n137 |     switch error {\n138 |       case let .fileNotFound(path):\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:134:14: error: cannot find type \u0027UmbraErrors\u0027 in scope\n132 |   /// - Returns: The mapped error\n133 |   public func mapFileSystemStorageError(\n134 |     _ error: UmbraErrors.Storage\n    |              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n135 |       .FileSystem\n136 |   ) -\u003e ErrorHandlingTypes.StorageError {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:174:69: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n172 |   /// - Parameter error: The source error\n173 |   /// - Returns: The mapped error\n174 |   public func mapNetworkError(_ error: UmbraErrors.Network.Core) -\u003e ErrorHandlingTypes\n    |                                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n175 |   .NetworkError {\n176 |     // Use string descriptions to avoid pattern matching errors with non-existent enum members\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:174:40: error: cannot find type \u0027UmbraErrors\u0027 in scope\n172 |   /// - Parameter error: The source error\n173 |   /// - Returns: The mapped error\n174 |   public func mapNetworkError(_ error: UmbraErrors.Network.Core) -\u003e ErrorHandlingTypes\n    |                                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n175 |   .NetworkError {\n176 |     // Use string descriptions to avoid pattern matching errors with non-existent enum members\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:201:41: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n199 |   /// - Parameter error: The source error\n200 |   /// - Returns: The mapped error\n201 |   public func mapToNetworkCore(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                         `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n202 |     // Return a generic error to avoid issues with UmbraErrors.Network.Core members\n203 |     let description: String\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:252:44: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n250 |   /// - Parameter error: The source error\n251 |   /// - Returns: The mapped error\n252 |   public func mapNetworkBaseError(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                            `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n253 |     // Return a generic error to avoid issues with UmbraErrors.Network.Base members\n254 |     let description\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:267:66: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n265 |   /// - Parameter error: The source error\n266 |   /// - Returns: The mapped error\n267 |   public func mapHTTPError(_ error: UmbraErrors.Network.HTTP) -\u003e ErrorHandlingTypes.NetworkError {\n    |                                                                  `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n268 |     // Convert HTTP domain errors to network errors using string descriptions\n269 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:267:37: error: cannot find type \u0027UmbraErrors\u0027 in scope\n265 |   /// - Parameter error: The source error\n266 |   /// - Returns: The mapped error\n267 |   public func mapHTTPError(_ error: UmbraErrors.Network.HTTP) -\u003e ErrorHandlingTypes.NetworkError {\n    |                                     `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n268 |     // Convert HTTP domain errors to network errors using string descriptions\n269 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:289:39: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n287 |   /// - Parameter error: The source error\n288 |   /// - Returns: The mapped error\n289 |   public func mapToHTTPError(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                       `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n290 |     // Return a generic error since we\u0027re having issues with HTTP error types\n291 |     let description: String\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:341:77: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n339 |   /// - Parameter error: The source error\n340 |   /// - Returns: The mapped error\n341 |   public func mapApplicationError(_ error: UmbraErrors.Application.Core) -\u003e ErrorHandlingTypes\n    |                                                                             `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n342 |   .ApplicationError {\n343 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:341:44: error: cannot find type \u0027UmbraErrors\u0027 in scope\n339 |   /// - Parameter error: The source error\n340 |   /// - Returns: The mapped error\n341 |   public func mapApplicationError(_ error: UmbraErrors.Application.Core) -\u003e ErrorHandlingTypes\n    |                                            `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n342 |   .ApplicationError {\n343 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:365:77: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n363 |   /// - Parameter error: The source error\n364 |   /// - Returns: The mapped error\n365 |   public func mapUIApplicationError(_ error: UmbraErrors.Application.UI) -\u003e ErrorHandlingTypes\n    |                                                                             `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n366 |   .ApplicationError {\n367 |     // Use string descriptions to avoid pattern matching errors\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:365:46: error: cannot find type \u0027UmbraErrors\u0027 in scope\n363 |   /// - Parameter error: The source error\n364 |   /// - Returns: The mapped error\n365 |   public func mapUIApplicationError(_ error: UmbraErrors.Application.UI) -\u003e ErrorHandlingTypes\n    |                                              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n366 |   .ApplicationError {\n367 |     // Use string descriptions to avoid pattern matching errors\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:390:8: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n388 |     _ error: UmbraErrors.Application\n389 |       .Lifecycle\n390 |   ) -\u003e ErrorHandlingTypes.ApplicationError {\n    |        `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n391 |     let errorDescription\u003dString(describing: error)\n392 |     return .internalError(reason: \"Lifecycle error: \\(errorDescription)\")\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:388:14: error: cannot find type \u0027UmbraErrors\u0027 in scope\n386 |   /// - Returns: The mapped error\n387 |   public func mapLifecycleApplicationError(\n388 |     _ error: UmbraErrors.Application\n    |              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n389 |       .Lifecycle\n390 |   ) -\u003e ErrorHandlingTypes.ApplicationError {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:400:43: error: cannot find type \u0027UmbraErrors\u0027 in scope\n398 |   /// - Parameter error: The source error\n399 |   /// - Returns: The mapped error\n400 |   public func mapRepositoryError(_ error: UmbraErrors.Repository.Core) -\u003e Error {\n    |                                           `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n401 |     // Simplify to a generic error since we\u0027re having issues with the RepositoryErrorType\n402 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:416:45: error: cannot find type \u0027UmbraErrors\u0027 in scope\n414 |   /// - Parameter error: The source error\n415 |   /// - Returns: The mapped error\n416 |   public func mapResourceFileError(_ error: UmbraErrors.Resource.File) -\u003e Error {\n    |                                             `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n417 |     // Simplify to return a basic error with description since ResourceErrorType doesn\u0027t exist\n418 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:430:45: error: cannot find type \u0027UmbraErrors\u0027 in scope\n428 |   /// - Parameter error: The source error\n429 |   /// - Returns: The mapped error\n430 |   public func mapResourcePoolError(_ error: UmbraErrors.Resource.Pool) -\u003e Error {\n    |                                             `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n431 |     // Simplify to return a basic error with description since ResourceErrorType doesn\u0027t exist\n432 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:444:40: error: cannot find type \u0027UmbraErrors\u0027 in scope\n442 |   /// - Parameter error: The source error\n443 |   /// - Returns: The mapped error\n444 |   public func mapLoggingError(_ error: UmbraErrors.Logging.Core) -\u003e Error {\n    |                                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n445 |     // Return a generic error since LoggingError doesn\u0027t exist in ErrorHandlingTypes\n446 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:458:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n456 |   /// - Parameter error: The source error\n457 |   /// - Returns: The mapped error\n458 |   public func mapBookmarkError(_ error: UmbraErrors.Bookmark.Core) -\u003e Error {\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n459 |     // Return a generic error since BookmarkError doesn\u0027t exist in ErrorHandlingTypes\n460 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:472:40: error: cannot find type \u0027UmbraErrors\u0027 in scope\n470 |   /// - Parameter error: The source error\n471 |   /// - Returns: The mapped error\n472 |   public func mapXPCCoreError(_ error: UmbraErrors.XPC.Core) -\u003e Error {\n    |                                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n473 |     // Return a generic error since XPCError doesn\u0027t exist in ErrorHandlingTypes\n474 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:488:39: error: cannot find type \u0027UmbraErrors\u0027 in scope\n486 |   /// - Parameter error: The source error\n487 |   /// - Returns: The mapped error\n488 |   public func mapCryptoError(_ error: UmbraErrors.Crypto.Core) -\u003e Error {\n    |                                       `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n489 |     // Simplify to a generic error since we\u0027re having issues with the specific CryptoError type\n490 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:502:44: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n500 |   /// - Parameter error: The source error\n501 |   /// - Returns: The mapped error\n502 |   public func mapFromNetworkError(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                            `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n503 |     // Return a generic error instead of a specific SecurityError type to avoid ambiguity\n504 |     let description\u003dswitch error {\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:7:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  5 | \n  6 | /// Error domain namespace\n  7 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 |   /// Security domain\n  9 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:17:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:27:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:54:66: error: cannot find type \u0027ApplicationError\u0027 in scope\n 52 |   /// - Parameter error: The source error\n 53 |   /// - Returns: The mapped target error\n 54 |   public func mapError(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                                                  `- error: cannot find type \u0027ApplicationError\u0027 in scope\n 55 |     mapFromTyped(error)\n 56 |   }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:54:33: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 52 |   /// - Parameter error: The source error\n 53 |   /// - Returns: The mapped target error\n 54 |   public func mapError(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                 `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 55 |     mapFromTyped(error)\n 56 |   }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:61:45: error: cannot find type \u0027ApplicationError\u0027 in scope\n 59 |   /// - Parameter error: Any error\n 60 |   /// - Returns: An ApplicationError or nil if the error is not mappable\n 61 |   public func mapFromAny(_ error: Error) -\u003e ApplicationError? {\n    |                                             `- error: cannot find type \u0027ApplicationError\u0027 in scope\n 62 |     // Get the error type name as a string\n 63 |     let errorType\u003dString(describing: type(of: error))\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:99:70: error: cannot find type \u0027ApplicationError\u0027 in scope\n 97 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n 98 |   /// - Returns: The mapped ApplicationError\n 99 |   public func mapFromTyped(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                                                      `- error: cannot find type \u0027ApplicationError\u0027 in scope\n100 |     // Simplify the mapping to avoid issues with mismatched enum cases\n101 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:99:37: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 97 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n 98 |   /// - Returns: The mapped ApplicationError\n 99 |   public func mapFromTyped(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                     `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n100 |     // Simplify the mapping to avoid issues with mismatched enum cases\n101 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:123:66: error: cannot find type \u0027ApplicationError\u0027 in scope\n121 |   /// - Parameter error: The source UmbraErrors.Application.UI error\n122 |   /// - Returns: The mapped ApplicationError\n123 |   private func mapFromUI(_ error: UmbraErrors.Application.UI) -\u003e ApplicationError {\n    |                                                                  `- error: cannot find type \u0027ApplicationError\u0027 in scope\n124 |     // Use string descriptions to avoid pattern matching problems\n125 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:123:35: error: cannot find type \u0027UmbraErrors\u0027 in scope\n121 |   /// - Parameter error: The source UmbraErrors.Application.UI error\n122 |   /// - Returns: The mapped ApplicationError\n123 |   private func mapFromUI(_ error: UmbraErrors.Application.UI) -\u003e ApplicationError {\n    |                                   `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n124 |     // Use string descriptions to avoid pattern matching problems\n125 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:142:80: error: cannot find type \u0027ApplicationError\u0027 in scope\n140 |   /// - Parameter error: The source UmbraErrors.Application.Lifecycle error\n141 |   /// - Returns: The mapped ApplicationError\n142 |   private func mapFromLifecycle(_ error: UmbraErrors.Application.Lifecycle) -\u003e ApplicationError {\n    |                                                                                `- error: cannot find type \u0027ApplicationError\u0027 in scope\n143 |     // Use string description to avoid pattern matching problems with enum cases\n144 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:142:42: error: cannot find type \u0027UmbraErrors\u0027 in scope\n140 |   /// - Parameter error: The source UmbraErrors.Application.Lifecycle error\n141 |   /// - Returns: The mapped ApplicationError\n142 |   private func mapFromLifecycle(_ error: UmbraErrors.Application.Lifecycle) -\u003e ApplicationError {\n    |                                          `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n143 |     // Use string description to avoid pattern matching problems with enum cases\n144 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:169:74: error: cannot find type \u0027ApplicationError\u0027 in scope\n167 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n168 |   /// - Returns: The mapped ApplicationError\n169 |   private func mapFromSettings(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                                                          `- error: cannot find type \u0027ApplicationError\u0027 in scope\n170 |     // Use string descriptions to categorize settings-related errors\n171 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:169:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n167 |   /// - Parameter error: The source UmbraErrors.Application.Core error\n168 |   /// - Returns: The mapped ApplicationError\n169 |   private func mapFromSettings(_ error: UmbraErrors.Application.Core) -\u003e ApplicationError {\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n170 |     // Use string descriptions to categorize settings-related errors\n171 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:44:14: error: type \u0027ApplicationErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 42 | \n 43 | /// Maps application errors from different sources to a consolidated ApplicationError\n 44 | public class ApplicationErrorMapper: ErrorMapper {\n    |              `- error: type \u0027ApplicationErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 45 |   /// The domain this mapper handles\n 46 |   public let domain\u003d\"Application\"\n\nSources/ErrorHandling/Mapping/ErrorMapper.swift:6:18: note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 4 | public protocol ErrorMapper\u003cSourceType, TargetType\u003e {\n 5 |   /// The source error type\n 6 |   associatedtype SourceType: Error\n   |                  `- note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 7 | \n 8 |   /// The target error type\n 9 |   associatedtype TargetType: Error\n   |                  `- note: protocol requires nested type \u0027TargetType\u0027; add nested type \u0027TargetType\u0027 for conformance\n10 | \n11 |   /// Maps from the source error type to the target error type\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:67:35: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 65 |     // Core application errors\n 66 |     if errorType.contains(\"UmbraErrors.Application.Core\") {\n 67 |       if let typedError\u003derror as? UmbraErrors.Application.Core {\n    |                                   `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 68 |         return mapFromTyped(typedError)\n 69 |       }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:74:35: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 72 |     // UI errors\n 73 |     else if errorType.contains(\"UmbraErrors.Application.UI\") {\n 74 |       if let typedError\u003derror as? UmbraErrors.Application.UI {\n    |                                   `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 75 |         return mapFromUI(typedError)\n 76 |       }\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:81:35: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 79 |     // Lifecycle errors\n 80 |     else if errorType.contains(\"UmbraErrors.Application.Lifecycle\") {\n 81 |       if let typedError\u003derror as? UmbraErrors.Application.Lifecycle {\n    |                                   `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 82 |         return mapFromLifecycle(typedError)\n 83 |       }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:7:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  5 | \n  6 | /// Error domain namespace\n  7 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 |   /// Security domain\n  9 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:17:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:27:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:74:70: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 72 |   /// - Parameter error: The source error\n 73 |   /// - Returns: The mapped target error\n 74 |   public func mapError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                                                      `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 75 |   .SecurityError {\n 76 |     .domainCoreError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:74:33: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 72 |   /// - Parameter error: The source error\n 73 |   /// - Returns: The mapped target error\n 74 |   public func mapError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                 `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 75 |   .SecurityError {\n 76 |     .domainCoreError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:82:53: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 80 |   /// - Parameter error: The source error\n 81 |   /// - Returns: The mapped SecurityError if applicable, or nil if not mappable\n 82 |   public func mapToSecurityError(_ error: Error) -\u003e ErrorHandlingTypes.SecurityError? {\n    |                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 83 |     if let securityCoreError\u003derror as? UmbraErrors.GeneralSecurity.Core {\n 84 |       return .domainCoreError(securityCoreError)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:124:49: error: cannot find type \u0027UmbraErrors\u0027 in scope\n122 |   /// - Parameter error: The source error\n123 |   /// - Returns: The mapped core error if applicable, or nil if not mappable\n124 |   public func mapToCoreError(_ error: Error) -\u003e UmbraErrors.GeneralSecurity.Core? {\n    |                                                 `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n125 |     // Direct mapping if already a core error\n126 |     if let coreError\u003derror as? UmbraErrors.GeneralSecurity.Core {\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:67:15: error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 65 | /// - When adding new error cases, update both mapping functions\n 66 | /// - Use descriptive reasons when mapping to provide context for the error\n 67 | public struct SecurityErrorMapper: ErrorMapper {\n    |               `- error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027ErrorMapper\u0027\n 68 |   /// Initialises a new mapper\n 69 |   public init() {}\n\nSources/ErrorHandling/Mapping/ErrorMapper.swift:6:18: note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 4 | public protocol ErrorMapper\u003cSourceType, TargetType\u003e {\n 5 |   /// The source error type\n 6 |   associatedtype SourceType: Error\n   |                  `- note: protocol requires nested type \u0027SourceType\u0027; add nested type \u0027SourceType\u0027 for conformance\n 7 | \n 8 |   /// The target error type\n 9 |   associatedtype TargetType: Error\n   |                  `- note: protocol requires nested type \u0027TargetType\u0027; add nested type \u0027TargetType\u0027 for conformance\n10 | \n11 |   /// Maps from the source error type to the target error type\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:187:69: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n185 |   /// - Parameter error: The source error\n186 |   /// - Returns: The mapped error\n187 |   public func mapAtoB(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n188 |   .SecurityError {\n189 |     mapError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:187:32: error: cannot find type \u0027UmbraErrors\u0027 in scope\n185 |   /// - Parameter error: The source error\n186 |   /// - Returns: The mapped error\n187 |   public func mapAtoB(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n188 |   .SecurityError {\n189 |     mapError(error)\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:195:69: error: cannot find type \u0027UmbraErrors\u0027 in scope\n193 |   /// - Parameter error: The target error\n194 |   /// - Returns: The mapped source error\n195 |   public func mapBtoA(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors.GeneralSecurity\n    |                                                                     `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n196 |   .Core {\n197 |     switch error {\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:195:32: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n193 |   /// - Parameter error: The target error\n194 |   /// - Returns: The mapped source error\n195 |   public func mapBtoA(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors.GeneralSecurity\n    |                                `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n196 |   .Core {\n197 |     switch error {\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:183:1: error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027BidirectionalErrorMapper\u0027\n181 | }\n182 | \n183 | extension SecurityErrorMapper: BidirectionalErrorMapper {\n    | `- error: type \u0027SecurityErrorMapper\u0027 does not conform to protocol \u0027BidirectionalErrorMapper\u0027\n184 |   /// Maps from source to target error type\n185 |   /// - Parameter error: The source error\n\nSources/ErrorHandling/Mapping/ErrorMapper.swift:20:18: note: protocol requires nested type \u0027ErrorTypeA\u0027; add nested type \u0027ErrorTypeA\u0027 for conformance\n18 | public protocol BidirectionalErrorMapper\u003cErrorTypeA, ErrorTypeB\u003e: ErrorMapper {\n19 |   /// The first error type\n20 |   associatedtype ErrorTypeA: Error\n   |                  `- note: protocol requires nested type \u0027ErrorTypeA\u0027; add nested type \u0027ErrorTypeA\u0027 for conformance\n21 | \n22 |   /// The second error type\n23 |   associatedtype ErrorTypeB: Error\n   |                  `- note: protocol requires nested type \u0027ErrorTypeB\u0027; add nested type \u0027ErrorTypeB\u0027 for conformance\n24 | \n25 |   /// Maps from ErrorTypeA to ErrorTypeB\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:240:11: error: cannot find type \u0027ErrorMapperRegistry\u0027 in scope\n238 | \n239 | /// Error registry extension for registering the security error mapper\n240 | extension ErrorMapperRegistry {\n    |           `- error: cannot find type \u0027ErrorMapperRegistry\u0027 in scope\n241 |   /// Register the security error mapper with the registry\n242 |   public func registerSecurityErrorMapper() {\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:83:40: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 81 |   /// - Returns: The mapped SecurityError if applicable, or nil if not mappable\n 82 |   public func mapToSecurityError(_ error: Error) -\u003e ErrorHandlingTypes.SecurityError? {\n 83 |     if let securityCoreError\u003derror as? UmbraErrors.GeneralSecurity.Core {\n    |                                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 84 |       return .domainCoreError(securityCoreError)\n 85 |     }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:87:37: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 85 |     }\n 86 | \n 87 |     if let protocolsError\u003derror as? UmbraErrors.Security.Protocols {\n    |                                     `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 88 |       return .domainProtocolError(protocolsError)\n 89 |     }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:91:31: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 89 |     }\n 90 | \n 91 |     if let xpcError\u003derror as? UmbraErrors.Security.XPC {\n    |                               `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 92 |       return .domainXPCError(xpcError)\n 93 |     }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:126:32: error: cannot find type \u0027UmbraErrors\u0027 in scope\n124 |   public func mapToCoreError(_ error: Error) -\u003e UmbraErrors.GeneralSecurity.Core? {\n125 |     // Direct mapping if already a core error\n126 |     if let coreError\u003derror as? UmbraErrors.GeneralSecurity.Core {\n    |                                `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n127 |       return coreError\n128 |     }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Mapping/ApplicationErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/SecurityErrorMapper.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:63:78: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 61 |   /// - Parameter error: The source error\n 62 |   /// - Returns: The mapped error\n 63 |   public func mapSecurityError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                                                              `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 64 |   .SecurityError {\n 65 |     securityMapper.mapError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:63:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 61 |   /// - Parameter error: The source error\n 62 |   /// - Returns: The mapped error\n 63 |   public func mapSecurityError(_ error: UmbraErrors.GeneralSecurity.Core) -\u003e ErrorHandlingTypes\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 64 |   .SecurityError {\n 65 |     securityMapper.mapError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:74:8: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 72 |     _ error: UmbraErrors.Security\n 73 |       .Protocols\n 74 |   ) -\u003e ErrorHandlingTypes.SecurityError {\n    |        `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 75 |     .domainProtocolError(error)\n 76 |   }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:72:14: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 70 |   /// - Returns: The mapped error\n 71 |   public func mapSecurityProtocolsError(\n 72 |     _ error: UmbraErrors.Security\n    |              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 73 |       .Protocols\n 74 |   ) -\u003e ErrorHandlingTypes.SecurityError {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:81:73: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 79 |   /// - Parameter error: The source error\n 80 |   /// - Returns: The mapped error\n 81 |   public func mapSecurityXPCError(_ error: UmbraErrors.Security.XPC) -\u003e ErrorHandlingTypes\n    |                                                                         `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 82 |   .SecurityError {\n 83 |     .domainXPCError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:81:44: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 79 |   /// - Parameter error: The source error\n 80 |   /// - Returns: The mapped error\n 81 |   public func mapSecurityXPCError(_ error: UmbraErrors.Security.XPC) -\u003e ErrorHandlingTypes\n    |                                            `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 82 |   .SecurityError {\n 83 |     .domainXPCError(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:89:79: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 87 |   /// - Parameter error: The source error\n 88 |   /// - Returns: The mapped error\n 89 |   public func mapToSecurityCore(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors\n    |                                                                               `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 90 |   .GeneralSecurity.Core {\n 91 |     securityMapper.mapBtoA(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:89:42: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 87 |   /// - Parameter error: The source error\n 88 |   /// - Returns: The mapped error\n 89 |   public func mapToSecurityCore(_ error: ErrorHandlingTypes.SecurityError) -\u003e UmbraErrors\n    |                                          `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 90 |   .GeneralSecurity.Core {\n 91 |     securityMapper.mapBtoA(error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:97:53: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 95 |   /// - Parameter error: Any error\n 96 |   /// - Returns: The mapped error if conversion is possible, nil otherwise\n 97 |   public func mapToSecurityError(_ error: Error) -\u003e ErrorHandlingTypes.SecurityError? {\n    |                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n 98 |     securityMapper.mapToSecurityError(error)\n 99 |   }\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:106:81: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n104 |   /// - Parameter error: The source error\n105 |   /// - Returns: The mapped error\n106 |   public func mapDatabaseStorageError(_ error: UmbraErrors.Storage.Database) -\u003e ErrorHandlingTypes\n    |                                                                                 `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n107 |   .StorageError {\n108 |     switch error {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:106:48: error: cannot find type \u0027UmbraErrors\u0027 in scope\n104 |   /// - Parameter error: The source error\n105 |   /// - Returns: The mapped error\n106 |   public func mapDatabaseStorageError(_ error: UmbraErrors.Storage.Database) -\u003e ErrorHandlingTypes\n    |                                                `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n107 |   .StorageError {\n108 |     switch error {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:136:8: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n134 |     _ error: UmbraErrors.Storage\n135 |       .FileSystem\n136 |   ) -\u003e ErrorHandlingTypes.StorageError {\n    |        `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n137 |     switch error {\n138 |       case let .fileNotFound(path):\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:134:14: error: cannot find type \u0027UmbraErrors\u0027 in scope\n132 |   /// - Returns: The mapped error\n133 |   public func mapFileSystemStorageError(\n134 |     _ error: UmbraErrors.Storage\n    |              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n135 |       .FileSystem\n136 |   ) -\u003e ErrorHandlingTypes.StorageError {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:174:69: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n172 |   /// - Parameter error: The source error\n173 |   /// - Returns: The mapped error\n174 |   public func mapNetworkError(_ error: UmbraErrors.Network.Core) -\u003e ErrorHandlingTypes\n    |                                                                     `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n175 |   .NetworkError {\n176 |     // Use string descriptions to avoid pattern matching errors with non-existent enum members\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:174:40: error: cannot find type \u0027UmbraErrors\u0027 in scope\n172 |   /// - Parameter error: The source error\n173 |   /// - Returns: The mapped error\n174 |   public func mapNetworkError(_ error: UmbraErrors.Network.Core) -\u003e ErrorHandlingTypes\n    |                                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n175 |   .NetworkError {\n176 |     // Use string descriptions to avoid pattern matching errors with non-existent enum members\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:201:41: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n199 |   /// - Parameter error: The source error\n200 |   /// - Returns: The mapped error\n201 |   public func mapToNetworkCore(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                         `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n202 |     // Return a generic error to avoid issues with UmbraErrors.Network.Core members\n203 |     let description: String\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:252:44: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n250 |   /// - Parameter error: The source error\n251 |   /// - Returns: The mapped error\n252 |   public func mapNetworkBaseError(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                            `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n253 |     // Return a generic error to avoid issues with UmbraErrors.Network.Base members\n254 |     let description\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:267:66: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n265 |   /// - Parameter error: The source error\n266 |   /// - Returns: The mapped error\n267 |   public func mapHTTPError(_ error: UmbraErrors.Network.HTTP) -\u003e ErrorHandlingTypes.NetworkError {\n    |                                                                  `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n268 |     // Convert HTTP domain errors to network errors using string descriptions\n269 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:267:37: error: cannot find type \u0027UmbraErrors\u0027 in scope\n265 |   /// - Parameter error: The source error\n266 |   /// - Returns: The mapped error\n267 |   public func mapHTTPError(_ error: UmbraErrors.Network.HTTP) -\u003e ErrorHandlingTypes.NetworkError {\n    |                                     `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n268 |     // Convert HTTP domain errors to network errors using string descriptions\n269 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:289:39: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n287 |   /// - Parameter error: The source error\n288 |   /// - Returns: The mapped error\n289 |   public func mapToHTTPError(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                       `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n290 |     // Return a generic error since we\u0027re having issues with HTTP error types\n291 |     let description: String\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:341:77: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n339 |   /// - Parameter error: The source error\n340 |   /// - Returns: The mapped error\n341 |   public func mapApplicationError(_ error: UmbraErrors.Application.Core) -\u003e ErrorHandlingTypes\n    |                                                                             `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n342 |   .ApplicationError {\n343 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:341:44: error: cannot find type \u0027UmbraErrors\u0027 in scope\n339 |   /// - Parameter error: The source error\n340 |   /// - Returns: The mapped error\n341 |   public func mapApplicationError(_ error: UmbraErrors.Application.Core) -\u003e ErrorHandlingTypes\n    |                                            `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n342 |   .ApplicationError {\n343 |     let errorDescription\u003dString(describing: error)\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:365:77: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n363 |   /// - Parameter error: The source error\n364 |   /// - Returns: The mapped error\n365 |   public func mapUIApplicationError(_ error: UmbraErrors.Application.UI) -\u003e ErrorHandlingTypes\n    |                                                                             `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n366 |   .ApplicationError {\n367 |     // Use string descriptions to avoid pattern matching errors\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:365:46: error: cannot find type \u0027UmbraErrors\u0027 in scope\n363 |   /// - Parameter error: The source error\n364 |   /// - Returns: The mapped error\n365 |   public func mapUIApplicationError(_ error: UmbraErrors.Application.UI) -\u003e ErrorHandlingTypes\n    |                                              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n366 |   .ApplicationError {\n367 |     // Use string descriptions to avoid pattern matching errors\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:390:8: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n388 |     _ error: UmbraErrors.Application\n389 |       .Lifecycle\n390 |   ) -\u003e ErrorHandlingTypes.ApplicationError {\n    |        `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n391 |     let errorDescription\u003dString(describing: error)\n392 |     return .internalError(reason: \"Lifecycle error: \\(errorDescription)\")\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:388:14: error: cannot find type \u0027UmbraErrors\u0027 in scope\n386 |   /// - Returns: The mapped error\n387 |   public func mapLifecycleApplicationError(\n388 |     _ error: UmbraErrors.Application\n    |              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n389 |       .Lifecycle\n390 |   ) -\u003e ErrorHandlingTypes.ApplicationError {\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:400:43: error: cannot find type \u0027UmbraErrors\u0027 in scope\n398 |   /// - Parameter error: The source error\n399 |   /// - Returns: The mapped error\n400 |   public func mapRepositoryError(_ error: UmbraErrors.Repository.Core) -\u003e Error {\n    |                                           `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n401 |     // Simplify to a generic error since we\u0027re having issues with the RepositoryErrorType\n402 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:416:45: error: cannot find type \u0027UmbraErrors\u0027 in scope\n414 |   /// - Parameter error: The source error\n415 |   /// - Returns: The mapped error\n416 |   public func mapResourceFileError(_ error: UmbraErrors.Resource.File) -\u003e Error {\n    |                                             `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n417 |     // Simplify to return a basic error with description since ResourceErrorType doesn\u0027t exist\n418 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:430:45: error: cannot find type \u0027UmbraErrors\u0027 in scope\n428 |   /// - Parameter error: The source error\n429 |   /// - Returns: The mapped error\n430 |   public func mapResourcePoolError(_ error: UmbraErrors.Resource.Pool) -\u003e Error {\n    |                                             `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n431 |     // Simplify to return a basic error with description since ResourceErrorType doesn\u0027t exist\n432 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:444:40: error: cannot find type \u0027UmbraErrors\u0027 in scope\n442 |   /// - Parameter error: The source error\n443 |   /// - Returns: The mapped error\n444 |   public func mapLoggingError(_ error: UmbraErrors.Logging.Core) -\u003e Error {\n    |                                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n445 |     // Return a generic error since LoggingError doesn\u0027t exist in ErrorHandlingTypes\n446 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:458:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n456 |   /// - Parameter error: The source error\n457 |   /// - Returns: The mapped error\n458 |   public func mapBookmarkError(_ error: UmbraErrors.Bookmark.Core) -\u003e Error {\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n459 |     // Return a generic error since BookmarkError doesn\u0027t exist in ErrorHandlingTypes\n460 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:472:40: error: cannot find type \u0027UmbraErrors\u0027 in scope\n470 |   /// - Parameter error: The source error\n471 |   /// - Returns: The mapped error\n472 |   public func mapXPCCoreError(_ error: UmbraErrors.XPC.Core) -\u003e Error {\n    |                                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n473 |     // Return a generic error since XPCError doesn\u0027t exist in ErrorHandlingTypes\n474 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:488:39: error: cannot find type \u0027UmbraErrors\u0027 in scope\n486 |   /// - Parameter error: The source error\n487 |   /// - Returns: The mapped error\n488 |   public func mapCryptoError(_ error: UmbraErrors.Crypto.Core) -\u003e Error {\n    |                                       `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n489 |     // Simplify to a generic error since we\u0027re having issues with the specific CryptoError type\n490 |     NSError(\n\nSources/ErrorHandling/Mapping/UmbraErrorMapper.swift:502:44: error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n500 |   /// - Parameter error: The source error\n501 |   /// - Returns: The mapped error\n502 |   public func mapFromNetworkError(_ error: ErrorHandlingTypes.NetworkError) -\u003e Error {\n    |                                            `- error: cannot find type \u0027ErrorHandlingTypes\u0027 in scope\n503 |     // Return a generic error instead of a specific SecurityError type to avoid ambiguity\n504 |     let description\u003dswitch error {\n"}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Mapping/Mapping.swiftmodule","label":"//Sources/ErrorHandling/Mapping:Mapping","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":150}},"children":[{"progress":{"opaqueCount":151}},{"namedSet":{"id":"88"}}],"progress":{}}
{"id":{"namedSet":{"id":"88"}},"namedSetOfFiles":{"files":[{"name":"Sources/XPCProtocolsCore/Sources/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"33524ec5db8582ab83dc4ea62b0b109e131f484e0b424fafab376ba6ce0c10b2","length":"4140"},{"name":"Sources/XPCProtocolsCore/Sources/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"394365f627d6aaeaaf04d8a85a85f6968cac0ec3687093fefccc34f3229762dc","length":"20216"},{"name":"Sources/XPCProtocolsCore/Sources/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b6d2746c8772d64b34918490f0520df9be24002c09f60d2a606d319480cd91e0","length":"4944"},{"name":"Sources/XPCProtocolsCore/Sources/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4bf66075c2be3bcb630531003c1d8addb6f75bcaece6bf1f90f2cebc294c1484","length":"31800"}]}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"88"}]}]}}
{"id":{"progress":{"opaqueCount":151}},"children":[{"progress":{"opaqueCount":152}},{"namedSet":{"id":"89"}}],"progress":{"stderr":"[560 / 669] Compiling Swift module //Sources/CoreTypesInterfaces/Tests:Tests; 4s disk-cache, worker ... (12 actions, 5 running)\n"}}
{"id":{"namedSet":{"id":"89"}},"namedSetOfFiles":{"files":[{"name":"Sources/XPCProtocolsCore/Sources/Modern/Modern.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Modern/Modern.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"25b59f73e63e1e8ddce6d96ba228d00961a626f8048a15c5d38d2a5f390b1a7d","length":"17344"},{"name":"Sources/XPCProtocolsCore/Sources/Modern/Modern.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Modern/Modern.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"22ed634dd55db9fb1a8679808e035655f58e5b7c28fbbbce0c449a316a7c5e02","length":"81984"},{"name":"Sources/XPCProtocolsCore/Sources/Modern/Modern.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Modern/Modern.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5bd2adc2bd71c3d80c1d197f6e9119dbf5b9e4f8330c2f123acdcf8c453d7ece","length":"24280"},{"name":"Sources/XPCProtocolsCore/Sources/Modern/libModern.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Modern/libModern.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"765efb9a9b20a4995ce82c764a80d44dbf07bb97335eb9533ba52162cd642d0c","length":"283040"}]}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources/Modern:Modern","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"89"}]}]}}
{"id":{"progress":{"opaqueCount":152}},"children":[{"progress":{"opaqueCount":153}},{"namedSet":{"id":"90"}}],"progress":{}}
{"id":{"namedSet":{"id":"90"}},"namedSetOfFiles":{"files":[{"name":"Sources/XPCProtocolsCore/Sources/XPCProtocolsCoreSources.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/XPCProtocolsCoreSources.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5ffa1c8ed0f7bdbc88fb90dc1c5c9b7ca19b7cd95f2dff8e4f23a222880e55be","length":"71124"},{"name":"Sources/XPCProtocolsCore/Sources/XPCProtocolsCoreSources.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/XPCProtocolsCoreSources.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1c302ef6baacd615c120c38d312b5481f78b603541c08788c67a1a2442fb3782","length":"192644"},{"name":"Sources/XPCProtocolsCore/Sources/XPCProtocolsCoreSources.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/XPCProtocolsCoreSources.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2b58789d22904bb90674c757e86fe21d06167183b10a9ae2ea907e698599a44f","length":"78044"},{"name":"Sources/XPCProtocolsCore/Sources/libXPCProtocolsCoreSources.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/libXPCProtocolsCoreSources.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d0201d0ae9a0a8d938f019c304c19092618be3f016ad007e7c0f81994f8d8bfb","length":"1008808"}]}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources:XPCProtocolsCoreSources","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"90"}]}]}}
{"id":{"progress":{"opaqueCount":153}},"children":[{"progress":{"opaqueCount":154}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule","label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule","label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-506"},"label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/ErrorHandling/Recovery:Recovery","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery_objs/ErrorRecovery.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Interfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Recovery","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/ErrorHandling/Recovery/ErrorRecovery.swift","Sources/ErrorHandling/Recovery/RecoveryAction.swift","Sources/ErrorHandling/Recovery/RecoveryOptions.swift","Sources/ErrorHandling/Recovery/SecurityErrorRecovery.swift","Sources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:31.265355Z","endTime":"2025-03-25T22:47:31.265355Z"}}
{"id":{"progress":{"opaqueCount":154}},"children":[{"progress":{"opaqueCount":155}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/ErrorHandling/Recovery/BUILD.bazel:3:20: Compiling Swift module //Sources/ErrorHandling/Recovery:Recovery failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/ErrorHandling/Recovery:Recovery) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":155}},"children":[{"progress":{"opaqueCount":156}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:7:36: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n  5 | \n  6 | /// Represents a potential recovery option for an error\n  7 | public struct ErrorRecoveryOption: RecoveryOption, Sendable {\n    |                                    `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n  8 |   /// A unique identifier for this recovery option\n  9 |   public let id: UUID\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:18:14: warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027ErrorRecoveryOption\u0027 has non-sendable type \u0027@MainActor () -\u003e Void\u0027; this is an error in the Swift 6 language mode\n 16 | \n 17 |   /// The action to execute when this option is selected\n 18 |   public let action: @MainActor () -\u003e Void\n    |              |- warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027ErrorRecoveryOption\u0027 has non-sendable type \u0027@MainActor () -\u003e Void\u0027; this is an error in the Swift 6 language mode\n    |              `- note: a function type must be marked \u0027@Sendable\u0027 to conform to \u0027Sendable\u0027\n 19 | \n 20 |   /// Whether this is the default option\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:46:35: error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n 44 | \n 45 | /// Protocol for errors that provide recovery options\n 46 | public protocol RecoverableError: UmbraError {\n    |                                   `- error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n 47 |   /// Gets available recovery options for this error\n 48 |   /// - Returns: Array of recovery options\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/UmbraError.swift:6:17: note: found this candidate\n 4 | /// A protocol that all UmbraCore errors must conform to.\n 5 | /// This provides a consistent interface for error handling across the codebase.\n 6 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n 7 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n 8 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Interfaces/ErrorInterfaces.swift:5:17: note: found this candidate\n  3 | \n  4 | /// Protocol defining the fundamental error interface\n  5 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n  6 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n  7 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:14:17: note: found this candidate\n 12 | /// A protocol that all UmbraCore errors must conform to.\n 13 | /// This provides a consistent interface for error handling across the codebase.\n 14 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n 15 |   /// Unique identifier for the error\n 16 |   var id: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:50:33: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 48 |   /// - Returns: Array of recovery options\n 49 |   @MainActor\n 50 |   func getRecoveryOptions() -\u003e [RecoveryOption]\n    |                                 `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 51 | }\n 52 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:95:52: error: cannot find type \u0027RecoveryOption\u0027 in scope\n 93 |   /// - Parameter error: The error to provide recovery options for\n 94 |   /// - Returns: Array of recovery options\n 95 |   func recoveryOptions(for error: Error) async -\u003e [RecoveryOption]\n    |                                                    `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n 96 | }\n 97 | \n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:63:49: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 61 |   /// - Returns: Available recovery options\n 62 |   @MainActor\n 63 |   func getRecoveryOptions(for error: Error) -\u003e [RecoveryOption]\n    |                                                 `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 64 | }\n 65 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:164:46: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n162 |   /// - Parameter error: The error to get recovery options for\n163 |   /// - Returns: Array of recovery options\n164 |   func recoveryOptions(for error: Error) -\u003e [RecoveryOption]\n    |                                              `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n165 | }\n166 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:89:59: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 87 |   /// - Returns: Array of recovery options\n 88 |   @MainActor\n 89 |   public func recoveryOptions(for error: Error) async -\u003e [RecoveryOption] {\n    |                                                           `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 90 |     // Get the error domain\n 91 |     let domain\u003dString(describing: type(of: error))\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:109:67: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n107 |   /// - Returns: Array of default recovery options\n108 |   @MainActor\n109 |   private func createDefaultRecoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                                   `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n110 |     // Create default options based on the error type\n111 |     var options: [RecoveryOption]\u003d[]\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:175:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n173 |   }\n174 | \n175 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n176 |     // Security-specific recovery options\n177 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:189:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n187 |   }\n188 | \n189 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n190 |     // Network-specific recovery options\n191 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:203:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n201 |   }\n202 | \n203 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n204 |     // Filesystem-specific recovery options\n205 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:217:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n215 |   }\n216 | \n217 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n218 |     // User-specific recovery options\n219 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryAction.swift:18:14: warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027RecoveryAction\u0027 has non-sendable type \u0027() async throws -\u003e Void\u0027; this is an error in the Swift 6 language mode\n 16 | \n 17 |   /// The action to take when this recovery is chosen\n 18 |   public let action: () async throws -\u003e Void\n    |              |- warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027RecoveryAction\u0027 has non-sendable type \u0027() async throws -\u003e Void\u0027; this is an error in the Swift 6 language mode\n    |              `- note: a function type must be marked \u0027@Sendable\u0027 to conform to \u0027Sendable\u0027\n 19 | \n 20 |   /// Whether this is the default/recommended action\n\nSources/ErrorHandling/Recovery/RecoveryAction.swift:102:46: error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n100 | \n101 | /// Protocol for errors that can provide their own recovery actions\n102 | public protocol RecoverableErrorWithActions: UmbraError {\n    |                                              `- error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n103 |   /// Get recovery actions for this error\n104 |   /// - Returns: Array of recovery actions\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/UmbraError.swift:6:17: note: found this candidate\n 4 | /// A protocol that all UmbraCore errors must conform to.\n 5 | /// This provides a consistent interface for error handling across the codebase.\n 6 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n 7 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n 8 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Interfaces/ErrorInterfaces.swift:5:17: note: found this candidate\n  3 | \n  4 | /// Protocol defining the fundamental error interface\n  5 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n  6 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n  7 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:14:17: note: found this candidate\n 12 | /// A protocol that all UmbraCore errors must conform to.\n 13 | /// This provides a consistent interface for error handling across the codebase.\n 14 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n 15 |   /// Unique identifier for the error\n 16 |   var id: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryAction.swift:134:15: warning: stored property \u0027providers\u0027 of \u0027Sendable\u0027-conforming class \u0027RecoveryActionManager\u0027 is mutable; this is an error in the Swift 6 language mode\n132 | \n133 |   /// Registered providers\n134 |   private var providers: [RecoveryActionProvider] \u003d []\n    |               `- warning: stored property \u0027providers\u0027 of \u0027Sendable\u0027-conforming class \u0027RecoveryActionManager\u0027 is mutable; this is an error in the Swift 6 language mode\n135 | \n136 |   /// Private initializer to enforce singleton pattern\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:7:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  5 | \n  6 | /// Error domain namespace\n  7 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 |   /// Security domain\n  9 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:17:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:20:17: note: found this candidate\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:27:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:10:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 | \n  9 | /// Error domain namespace\n 10 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n 11 |   /// Security domain\n 12 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:20:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:30:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n    :\n 28 | \n 29 | /// Base error context implementation\n 30 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 31 |   /// Domain of the error\n 32 |   public let domain: String\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:30:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 | \n 29 | /// Base error context implementation\n 30 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 31 |   /// Domain of the error\n 32 |   public let domain: String\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:80:28: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 78 | public struct SecurityCoreErrorWrapper: Error, Sendable {\n 79 |   /// The wrapped error\n 80 |   public let wrappedError: UmbraErrors.GeneralSecurity.Core\n    |                            `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 81 | \n 82 |   /// Initialise with a security error\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:84:24: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 82 |   /// Initialise with a security error\n 83 |   /// - Parameter error: The error to wrap\n 84 |   public init(_ error: UmbraErrors.GeneralSecurity.Core) {\n    |                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 85 |     wrappedError\u003derror\n 86 |   }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:90:39: error: cannot find type \u0027RecoveryOption\u0027 in scope\n 88 | \n 89 | /// A recovery option implementation for security-related errors\n 90 | public struct SecurityRecoveryOption: RecoveryOption, Sendable {\n    |                                       `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n 91 |   /// A unique identifier for this recovery option\n 92 |   public let id: UUID\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:158:59: error: cannot find type \u0027RecoveryOption\u0027 in scope\n156 | \n157 |   /// Implement RecoveryOptionsProvider protocol\n158 |   public func recoveryOptions(for error: Error) async -\u003e [RecoveryOption] {\n    |                                                           `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n159 |     if isDebug {\n160 |       print(\"Finding security recovery options for \\(String(describing: error))\")\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:173:79: error: cannot find type \u0027RecoveryOption\u0027 in scope\n171 | \n172 |   /// Creates recovery options for a security error\n173 |   private func createRecoveryOptions(for error: SecurityCoreErrorWrapper) -\u003e [RecoveryOption] {\n    |                                                                               `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n174 |     // Create appropriate actions based on the error type\n175 |     var options: [RecoveryOption]\u003d[]\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:472:46: error: cannot find type \u0027UmbraErrors\u0027 in scope\n470 |   /// - Parameter error: The error to get the title and message for\n471 |   /// - Returns: A tuple containing the title and message\n472 |   private func getTitleAndMessage(for error: UmbraErrors.GeneralSecurity.Core) -\u003e (String, String) {\n    |                                              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n473 |     switch error {\n474 |       case .encryptionFailed:\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:505:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n503 |   /// Print an example of recovery options for a security error\n504 |   /// - Parameter sampleError: A sample error to get recovery options for\n505 |   public func exampleUsage(sampleError: UmbraErrors.GeneralSecurity.Core) async {\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n506 |     let options\u003dawait recoveryOptions(for: sampleError)\n507 | \n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:20:17: note: found this candidate\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:51:41: error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 49 |   /// Recovery providers registered with this service\n 50 |   /// Made private(set) to maintain Sendable conformance\n 51 |   private let providers\u003dAtomicArray\u003cany ErrorHandlingInterfaces.RecoveryOptionsProvider\u003e()\n    |                                         `- error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 52 | \n 53 |   /// Private initialiser to enforce singleton pattern\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:71:48: error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 69 |   /// Register a provider of recovery options\n 70 |   /// - Parameter provider: The provider to register\n 71 |   public func registerProvider(_ provider: any ErrorHandlingInterfaces.RecoveryOptionsProvider) {\n    |                                                `- error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 72 |     providers.append(provider)\n 73 |   }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:78:65: error: cannot find type \u0027RecoveryOption\u0027 in scope\n 76 |   /// - Parameter error: The error to get recovery options for\n 77 |   /// - Returns: Available recovery options\n 78 |   public func getRecoveryOptions(for error: some Error) -\u003e [any RecoveryOption] {\n    |                                                                 `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n 79 |     // If it\u0027s not a security error, return no options\n 80 |     guard checkIsSecurity(error: error) else {\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:135:41: error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n133 | // MARK: - RecoveryOptionsProvider Protocol Conformance (ErrorHandlingInterfaces)\n134 | \n135 | extension SecurityErrorRecoveryService: ErrorHandlingInterfaces.RecoveryOptionsProvider {\n    |                                         `- error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n136 |   /// Provides recovery options for an error (ErrorHandlingInterfaces version)\n137 |   /// - Parameter error: The error to provide recovery options for\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:139:62: error: cannot find type \u0027RecoveryOption\u0027 in scope\n137 |   /// - Parameter error: The error to provide recovery options for\n138 |   /// - Returns: Array of recovery options\n139 |   public func recoveryOptions(for error: some Error) -\u003e [any RecoveryOption] {\n    |                                                              `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n140 |     // If it\u0027s not a security error, return empty array\n141 |     guard checkIsSecurity(error: error) else {\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:280:70: error: cannot find type \u0027RecoveryOption\u0027 in scope\n278 |   /// - Parameter error: The error to get recovery options for\n279 |   /// - Returns: The default recovery options\n280 |   private func defaultRecoveryOptions(for error: some Error) -\u003e [any RecoveryOption] {\n    |                                                                      `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n281 |     let errorString\u003dString(describing: error).lowercased()\n282 | \nSources/ErrorHandling/Recovery/ErrorRecovery.swift:7:36: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n  5 | \n  6 | /// Represents a potential recovery option for an error\n  7 | public struct ErrorRecoveryOption: RecoveryOption, Sendable {\n    |                                    `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n  8 |   /// A unique identifier for this recovery option\n  9 |   public let id: UUID\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:18:14: warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027ErrorRecoveryOption\u0027 has non-sendable type \u0027@MainActor () -\u003e Void\u0027; this is an error in the Swift 6 language mode\n 16 | \n 17 |   /// The action to execute when this option is selected\n 18 |   public let action: @MainActor () -\u003e Void\n    |              |- warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027ErrorRecoveryOption\u0027 has non-sendable type \u0027@MainActor () -\u003e Void\u0027; this is an error in the Swift 6 language mode\n    |              `- note: a function type must be marked \u0027@Sendable\u0027 to conform to \u0027Sendable\u0027\n 19 | \n 20 |   /// Whether this is the default option\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:46:35: error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n 44 | \n 45 | /// Protocol for errors that provide recovery options\n 46 | public protocol RecoverableError: UmbraError {\n    |                                   `- error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n 47 |   /// Gets available recovery options for this error\n 48 |   /// - Returns: Array of recovery options\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/UmbraError.swift:6:17: note: found this candidate\n 4 | /// A protocol that all UmbraCore errors must conform to.\n 5 | /// This provides a consistent interface for error handling across the codebase.\n 6 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n 7 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n 8 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Interfaces/ErrorInterfaces.swift:5:17: note: found this candidate\n  3 | \n  4 | /// Protocol defining the fundamental error interface\n  5 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n  6 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n  7 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:14:17: note: found this candidate\n 12 | /// A protocol that all UmbraCore errors must conform to.\n 13 | /// This provides a consistent interface for error handling across the codebase.\n 14 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n 15 |   /// Unique identifier for the error\n 16 |   var id: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:50:33: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 48 |   /// - Returns: Array of recovery options\n 49 |   @MainActor\n 50 |   func getRecoveryOptions() -\u003e [RecoveryOption]\n    |                                 `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 51 | }\n 52 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:95:52: error: cannot find type \u0027RecoveryOption\u0027 in scope\n 93 |   /// - Parameter error: The error to provide recovery options for\n 94 |   /// - Returns: Array of recovery options\n 95 |   func recoveryOptions(for error: Error) async -\u003e [RecoveryOption]\n    |                                                    `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n 96 | }\n 97 | \n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:63:49: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 61 |   /// - Returns: Available recovery options\n 62 |   @MainActor\n 63 |   func getRecoveryOptions(for error: Error) -\u003e [RecoveryOption]\n    |                                                 `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 64 | }\n 65 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:164:46: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n162 |   /// - Parameter error: The error to get recovery options for\n163 |   /// - Returns: Array of recovery options\n164 |   func recoveryOptions(for error: Error) -\u003e [RecoveryOption]\n    |                                              `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n165 | }\n166 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:89:59: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 87 |   /// - Returns: Array of recovery options\n 88 |   @MainActor\n 89 |   public func recoveryOptions(for error: Error) async -\u003e [RecoveryOption] {\n    |                                                           `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n 90 |     // Get the error domain\n 91 |     let domain\u003dString(describing: type(of: error))\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:109:67: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n107 |   /// - Returns: Array of default recovery options\n108 |   @MainActor\n109 |   private func createDefaultRecoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                                   `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n110 |     // Create default options based on the error type\n111 |     var options: [RecoveryOption]\u003d[]\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:175:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n173 |   }\n174 | \n175 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n176 |     // Security-specific recovery options\n177 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:189:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n187 |   }\n188 | \n189 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n190 |     // Network-specific recovery options\n191 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:203:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n201 |   }\n202 | \n203 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n204 |     // Filesystem-specific recovery options\n205 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:217:53: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n215 |   }\n216 | \n217 |   public func recoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n    |                                                     `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n218 |     // User-specific recovery options\n219 |     []\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:94:31: error: value of type \u0027AtomicArray\u003cany DomainRecoveryProvider\u003e\u0027 has no member \u0027elements\u0027\n 92 | \n 93 |     // Look for a provider that can handle this domain\n 94 |     for provider in providers.elements {\n    |                               `- error: value of type \u0027AtomicArray\u003cany DomainRecoveryProvider\u003e\u0027 has no member \u0027elements\u0027\n 95 |       if provider.canHandle(domain: domain) {\n 96 |         // Get recovery options from this provider\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:111:19: error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n109 |   private func createDefaultRecoveryOptions(for error: Error) -\u003e [RecoveryOption] {\n110 |     // Create default options based on the error type\n111 |     var options: [RecoveryOption]\u003d[]\n    |                   `- error: \u0027RecoveryOption\u0027 is ambiguous for type lookup in this context\n112 | \n113 |     // Add retry option\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/ErrorRecovery.swift:25:17: note: found this candidate\n23 | \n24 | /// Protocol for error recovery options\n25 | public protocol RecoveryOption: Sendable {\n   |                 `- note: found this candidate\n26 |   /// A unique identifier for this recovery option\n27 |   var id: UUID { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:111:17: note: found this candidate\n109 | \n110 | /// Protocol for recovery options that can be presented to the user\n111 | public protocol RecoveryOption: Sendable {\n    |                 `- note: found this candidate\n112 |   /// Descriptive title for the recovery option\n113 |   var title: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryAction.swift:18:14: warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027RecoveryAction\u0027 has non-sendable type \u0027() async throws -\u003e Void\u0027; this is an error in the Swift 6 language mode\n 16 | \n 17 |   /// The action to take when this recovery is chosen\n 18 |   public let action: () async throws -\u003e Void\n    |              |- warning: stored property \u0027action\u0027 of \u0027Sendable\u0027-conforming struct \u0027RecoveryAction\u0027 has non-sendable type \u0027() async throws -\u003e Void\u0027; this is an error in the Swift 6 language mode\n    |              `- note: a function type must be marked \u0027@Sendable\u0027 to conform to \u0027Sendable\u0027\n 19 | \n 20 |   /// Whether this is the default/recommended action\n\nSources/ErrorHandling/Recovery/RecoveryAction.swift:102:46: error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n100 | \n101 | /// Protocol for errors that can provide their own recovery actions\n102 | public protocol RecoverableErrorWithActions: UmbraError {\n    |                                              `- error: \u0027UmbraError\u0027 is ambiguous for type lookup in this context\n103 |   /// Get recovery actions for this error\n104 |   /// - Returns: Array of recovery actions\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Core/UmbraError.swift:6:17: note: found this candidate\n 4 | /// A protocol that all UmbraCore errors must conform to.\n 5 | /// This provides a consistent interface for error handling across the codebase.\n 6 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n 7 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n 8 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Interfaces/ErrorInterfaces.swift:5:17: note: found this candidate\n  3 | \n  4 | /// Protocol defining the fundamental error interface\n  5 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n  6 |   /// The domain that this error belongs to, e.g., \"Security\", \"Repository\"\n  7 |   var domain: String { get }\n\n/Users/mpy/.bazel/execroot/_main/Sources/ErrorHandling/Protocols/ErrorHandlingProtocol.swift:14:17: note: found this candidate\n 12 | /// A protocol that all UmbraCore errors must conform to.\n 13 | /// This provides a consistent interface for error handling across the codebase.\n 14 | public protocol UmbraError: Error, Sendable, CustomStringConvertible {\n    |                 `- note: found this candidate\n 15 |   /// Unique identifier for the error\n 16 |   var id: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryAction.swift:134:15: warning: stored property \u0027providers\u0027 of \u0027Sendable\u0027-conforming class \u0027RecoveryActionManager\u0027 is mutable; this is an error in the Swift 6 language mode\n132 | \n133 |   /// Registered providers\n134 |   private var providers: [RecoveryActionProvider] \u003d []\n    |               `- warning: stored property \u0027providers\u0027 of \u0027Sendable\u0027-conforming class \u0027RecoveryActionManager\u0027 is mutable; this is an error in the Swift 6 language mode\n135 | \n136 |   /// Private initializer to enforce singleton pattern\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:7:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  5 | \n  6 | /// Error domain namespace\n  7 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 |   /// Security domain\n  9 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:17:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:20:17: note: found this candidate\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:27:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:115:10: error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027retry\u0027\n113 |     RecoveryOptions(\n114 |       actions: [\n115 |         .retry(handler: retryHandler),\n    |          `- error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027retry\u0027\n116 |         .cancel(handler: cancelHandler)\n117 |       ],\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:116:10: error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027cancel\u0027\n114 |       actions: [\n115 |         .retry(handler: retryHandler),\n116 |         .cancel(handler: cancelHandler)\n    |          `- error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027cancel\u0027\n117 |       ],\n118 |       title: title,\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:140:10: error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027retry\u0027\n138 |     RecoveryOptions(\n139 |       actions: [\n140 |         .retry(handler: retryHandler),\n    |          `- error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027retry\u0027\n141 |         .ignore(handler: ignoreHandler),\n142 |         .cancel(handler: cancelHandler)\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:141:10: error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027ignore\u0027\n139 |       actions: [\n140 |         .retry(handler: retryHandler),\n141 |         .ignore(handler: ignoreHandler),\n    |          `- error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027ignore\u0027\n142 |         .cancel(handler: cancelHandler)\n143 |       ],\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:142:10: error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027cancel\u0027\n140 |         .retry(handler: retryHandler),\n141 |         .ignore(handler: ignoreHandler),\n142 |         .cancel(handler: cancelHandler)\n    |          `- error: type \u0027Array\u003cRecoveryAction\u003e.ArrayLiteralElement\u0027 (aka \u0027RecoveryAction\u0027) has no member \u0027cancel\u0027\n143 |       ],\n144 |       title: title,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:10:13: error: invalid redeclaration of \u0027ErrorDomain\u0027\n  8 | \n  9 | /// Error domain namespace\n 10 | public enum ErrorDomain {\n    |             `- error: invalid redeclaration of \u0027ErrorDomain\u0027\n 11 |   /// Security domain\n 12 |   public static let security\u003d\"Security\"\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:20:17: error: invalid redeclaration of \u0027ErrorContext\u0027\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- error: invalid redeclaration of \u0027ErrorContext\u0027\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:30:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n    :\n 28 | \n 29 | /// Base error context implementation\n 30 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 31 |   /// Domain of the error\n 32 |   public let domain: String\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:30:15: error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 28 | \n 29 | /// Base error context implementation\n 30 | public struct BaseErrorContext: ErrorContext {\n    |               `- error: invalid redeclaration of \u0027BaseErrorContext\u0027\n 31 |   /// Domain of the error\n 32 |   public let domain: String\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:80:28: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 78 | public struct SecurityCoreErrorWrapper: Error, Sendable {\n 79 |   /// The wrapped error\n 80 |   public let wrappedError: UmbraErrors.GeneralSecurity.Core\n    |                            `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 81 | \n 82 |   /// Initialise with a security error\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:84:24: error: cannot find type \u0027UmbraErrors\u0027 in scope\n 82 |   /// Initialise with a security error\n 83 |   /// - Parameter error: The error to wrap\n 84 |   public init(_ error: UmbraErrors.GeneralSecurity.Core) {\n    |                        `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n 85 |     wrappedError\u003derror\n 86 |   }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:90:39: error: cannot find type \u0027RecoveryOption\u0027 in scope\n 88 | \n 89 | /// A recovery option implementation for security-related errors\n 90 | public struct SecurityRecoveryOption: RecoveryOption, Sendable {\n    |                                       `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n 91 |   /// A unique identifier for this recovery option\n 92 |   public let id: UUID\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:158:59: error: cannot find type \u0027RecoveryOption\u0027 in scope\n156 | \n157 |   /// Implement RecoveryOptionsProvider protocol\n158 |   public func recoveryOptions(for error: Error) async -\u003e [RecoveryOption] {\n    |                                                           `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n159 |     if isDebug {\n160 |       print(\"Finding security recovery options for \\(String(describing: error))\")\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:173:79: error: cannot find type \u0027RecoveryOption\u0027 in scope\n171 | \n172 |   /// Creates recovery options for a security error\n173 |   private func createRecoveryOptions(for error: SecurityCoreErrorWrapper) -\u003e [RecoveryOption] {\n    |                                                                               `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n174 |     // Create appropriate actions based on the error type\n175 |     var options: [RecoveryOption]\u003d[]\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:472:46: error: cannot find type \u0027UmbraErrors\u0027 in scope\n470 |   /// - Parameter error: The error to get the title and message for\n471 |   /// - Returns: A tuple containing the title and message\n472 |   private func getTitleAndMessage(for error: UmbraErrors.GeneralSecurity.Core) -\u003e (String, String) {\n    |                                              `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n473 |     switch error {\n474 |       case .encryptionFailed:\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:505:41: error: cannot find type \u0027UmbraErrors\u0027 in scope\n503 |   /// Print an example of recovery options for a security error\n504 |   /// - Parameter sampleError: A sample error to get recovery options for\n505 |   public func exampleUsage(sampleError: UmbraErrors.GeneralSecurity.Core) async {\n    |                                         `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n506 |     let options\u003dawait recoveryOptions(for: sampleError)\n507 | \n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:164:36: error: cannot find type \u0027UmbraErrors\u0027 in scope\n162 | \n163 |     // Check for our specific security error types\n164 |     if let securityError\u003derror as? UmbraErrors.GeneralSecurity.Core {\n    |                                    `- error: cannot find type \u0027UmbraErrors\u0027 in scope\n165 |       return createRecoveryOptions(for: SecurityCoreErrorWrapper(securityError))\n166 |     }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:175:19: error: cannot find type \u0027RecoveryOption\u0027 in scope\n173 |   private func createRecoveryOptions(for error: SecurityCoreErrorWrapper) -\u003e [RecoveryOption] {\n174 |     // Create appropriate actions based on the error type\n175 |     var options: [RecoveryOption]\u003d[]\n    |                   `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n176 | \n177 |     // Get the title and message for the error\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:27:33: error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n    :\n 25 | \n 26 | /// Base error context implementation\n 27 | public struct BaseErrorContext: ErrorContext {\n    |                                 `- error: \u0027ErrorContext\u0027 is ambiguous for type lookup in this context\n 28 |   /// Domain of the error\n 29 |   public let domain: String\n\nSources/ErrorHandling/Recovery/RecoveryOptions.swift:17:17: note: found this candidate\n 15 | \n 16 | /// Error context protocol\n 17 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 18 |   /// Domain of the error\n 19 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecovery.swift:20:17: note: found this candidate\n 18 | \n 19 | /// Error context protocol\n 20 | public protocol ErrorContext {\n    |                 `- note: found this candidate\n 21 |   /// Domain of the error\n 22 |   var domain: String { get }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:51:41: error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 49 |   /// Recovery providers registered with this service\n 50 |   /// Made private(set) to maintain Sendable conformance\n 51 |   private let providers\u003dAtomicArray\u003cany ErrorHandlingInterfaces.RecoveryOptionsProvider\u003e()\n    |                                         `- error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 52 | \n 53 |   /// Private initialiser to enforce singleton pattern\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:71:48: error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 69 |   /// Register a provider of recovery options\n 70 |   /// - Parameter provider: The provider to register\n 71 |   public func registerProvider(_ provider: any ErrorHandlingInterfaces.RecoveryOptionsProvider) {\n    |                                                `- error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n 72 |     providers.append(provider)\n 73 |   }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:78:65: error: cannot find type \u0027RecoveryOption\u0027 in scope\n 76 |   /// - Parameter error: The error to get recovery options for\n 77 |   /// - Returns: Available recovery options\n 78 |   public func getRecoveryOptions(for error: some Error) -\u003e [any RecoveryOption] {\n    |                                                                 `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n 79 |     // If it\u0027s not a security error, return no options\n 80 |     guard checkIsSecurity(error: error) else {\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:135:41: error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n133 | // MARK: - RecoveryOptionsProvider Protocol Conformance (ErrorHandlingInterfaces)\n134 | \n135 | extension SecurityErrorRecoveryService: ErrorHandlingInterfaces.RecoveryOptionsProvider {\n    |                                         `- error: cannot find type \u0027ErrorHandlingInterfaces\u0027 in scope\n136 |   /// Provides recovery options for an error (ErrorHandlingInterfaces version)\n137 |   /// - Parameter error: The error to provide recovery options for\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:139:62: error: cannot find type \u0027RecoveryOption\u0027 in scope\n137 |   /// - Parameter error: The error to provide recovery options for\n138 |   /// - Returns: Array of recovery options\n139 |   public func recoveryOptions(for error: some Error) -\u003e [any RecoveryOption] {\n    |                                                              `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n140 |     // If it\u0027s not a security error, return empty array\n141 |     guard checkIsSecurity(error: error) else {\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:280:70: error: cannot find type \u0027RecoveryOption\u0027 in scope\n278 |   /// - Parameter error: The error to get recovery options for\n279 |   /// - Returns: The default recovery options\n280 |   private func defaultRecoveryOptions(for error: some Error) -\u003e [any RecoveryOption] {\n    |                                                                      `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n281 |     let errorString\u003dString(describing: error).lowercased()\n282 | \n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:62:5: error: cannot find \u0027ErrorRecoveryRegistry\u0027 in scope\n 60 |   public static func initialize() {\n 61 |     // Register shared instance with the registry\n 62 |     ErrorRecoveryRegistry.shared.register(shared)\n    |     `- error: cannot find \u0027ErrorRecoveryRegistry\u0027 in scope\n 63 |   }\n 64 | }\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:85:26: error: cannot find type \u0027RecoveryOption\u0027 in scope\n 83 | \n 84 |     // Collect options from all providers\n 85 |     var allOptions: [any RecoveryOption]\u003d[]\n    |                          `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n 86 | \n 87 |     // Add options from registered providers\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:147:23: error: cannot find type \u0027RecoveryOption\u0027 in scope\n145 |     // Map strings to recovery options\n146 |     let errorString\u003dString(describing: error).lowercased()\n147 |     var options: [any RecoveryOption]\u003d[]\n    |                       `- error: cannot find type \u0027RecoveryOption\u0027 in scope\n148 | \n149 |     if errorString.contains(\"authentication\") {\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:151:28: error: extra arguments at positions #3, #4 in call\n149 |     if errorString.contains(\"authentication\") {\n150 |       options.append(\n151 |         ErrorRecoveryOption(\n    |                            `- error: extra arguments at positions #3, #4 in call\n152 |           title: \"Try Again\",\n153 |           description: \"Retry with different credentials\",\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:156:9: error: missing argument for parameter \u0027action\u0027 in call\n154 |           isDisruptive: true,\n155 |           recoveryAction: { /* Implementation to retry authentication */ }\n156 |         )\n    |         `- error: missing argument for parameter \u0027action\u0027 in call\n157 |       )\n158 |     } else if errorString.contains(\"certificate\") {\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:160:28: error: extra arguments at positions #3, #4 in call\n158 |     } else if errorString.contains(\"certificate\") {\n159 |       options.append(\n160 |         ErrorRecoveryOption(\n    |                            `- error: extra arguments at positions #3, #4 in call\n161 |           title: \"Trust Certificate\",\n162 |           description: \"Trust this certificate for this session\",\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:165:9: error: missing argument for parameter \u0027action\u0027 in call\n163 |           isDisruptive: true,\n164 |           recoveryAction: { /* Implementation to trust certificate */ }\n165 |         )\n    |         `- error: missing argument for parameter \u0027action\u0027 in call\n166 |       )\n167 |     } else {\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:170:28: error: extra arguments at positions #3, #4 in call\n168 |       // Generic security error\n169 |       options.append(\n170 |         ErrorRecoveryOption(\n    |                            `- error: extra arguments at positions #3, #4 in call\n171 |           title: \"Retry\",\n172 |           description: \"Try the operation again\",\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:175:9: error: missing argument for parameter \u0027action\u0027 in call\n173 |           isDisruptive: false,\n174 |           recoveryAction: { /* Generic retry implementation */ }\n175 |         )\n    |         `- error: missing argument for parameter \u0027action\u0027 in call\n176 |       )\n177 | \n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:179:28: error: extra arguments at positions #3, #4 in call\n177 | \n178 |       options.append(\n179 |         ErrorRecoveryOption(\n    |                            `- error: extra arguments at positions #3, #4 in call\n180 |           title: \"Cancel\",\n181 |           description: \"Cancel the operation\",\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:184:9: error: missing argument for parameter \u0027action\u0027 in call\n182 |           isDisruptive: false,\n183 |           recoveryAction: { /* Cancel implementation */ }\n184 |         )\n    |         `- error: missing argument for parameter \u0027action\u0027 in call\n185 |       )\n186 |     }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:214:23: error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n212 |       message\u003d\"You need to re-authenticate to continue\"\n213 |       actions\u003d[\n214 |         RecoveryAction(\n    |                       `- error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n215 |           id: \"retry-auth\",\n216 |           title: \"Try Again\",\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:226:23: error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n224 |       message\u003d\"There\u0027s a problem with the security certificate\"\n225 |       actions\u003d[\n226 |         RecoveryAction(\n    |                       `- error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n227 |           id: \"trust-cert\",\n228 |           title: \"Trust Certificate\",\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:239:23: error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n237 |       message\u003d\"A security error has occurred\"\n238 |       actions\u003d[\n239 |         RecoveryAction(\n    |                       `- error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n240 |           id: \"retry\",\n241 |           title: \"Retry\",\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:246:23: error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n244 |           handler: { /* Generic retry implementation */ }\n245 |         ),\n246 |         RecoveryAction(\n    |                       `- error: incorrect argument label in call (have \u0027id:title:description:isDefault:handler:\u0027, expected \u0027id:title:description:isDefault:action:\u0027)\n247 |           id: \"cancel\",\n248 |           title: \"Cancel\",\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:303:24: error: extra arguments at positions #3, #4 in call\n301 |   /// - Returns: The recovery option\n302 |   private func createRetryAuthenticationOption() -\u003e ErrorRecoveryOption {\n303 |     ErrorRecoveryOption(\n    |                        `- error: extra arguments at positions #3, #4 in call\n304 |       title: \"Try Again\",\n305 |       description: \"Retry with different credentials\",\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:311:5: error: missing argument for parameter \u0027action\u0027 in call\n309 |         // Implementation not provided\n310 |       }\n311 |     )\n    |     `- error: missing argument for parameter \u0027action\u0027 in call\n312 |   }\n313 | \n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:317:24: error: extra arguments at positions #3, #4 in call\n315 |   /// - Returns: The recovery option\n316 |   private func createBypassCertificateOption() -\u003e ErrorRecoveryOption {\n317 |     ErrorRecoveryOption(\n    |                        `- error: extra arguments at positions #3, #4 in call\n318 |       title: \"Trust Certificate\",\n319 |       description: \"Trust the server\u0027s certificate for this session\",\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n\nSources/ErrorHandling/Recovery/SecurityErrorRecoveryService.swift:325:5: error: missing argument for parameter \u0027action\u0027 in call\n323 |         // Implementation not provided\n324 |       }\n325 |     )\n    |     `- error: missing argument for parameter \u0027action\u0027 in call\n326 |   }\n327 | }\n\nSources/ErrorHandling/Recovery/ErrorRecovery.swift:30:10: note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 28 |   ///   - isDefault: Whether this is the default option (defaults to false)\n 29 |   ///   - action: The action to perform when selected\n 30 |   public init(\n    |          `- note: \u0027init(id:title:description:isDefault:action:)\u0027 declared here\n 31 |     id: UUID\u003dUUID(),\n 32 |     title: String,\n"}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Notification:Notification","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule","label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":156}},"children":[{"progress":{"opaqueCount":157}},{"namedSet":{"id":"91"}}],"progress":{}}
{"id":{"namedSet":{"id":"91"}},"namedSetOfFiles":{"files":[{"name":"Sources/ErrorHandling/Tests/Tests.test-runner.sh","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Tests/Tests.test-runner.sh","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c71b6c41445a80e9653f74e3bd0991dfca12c271f33cac0c44dbbbf28f535e64","length":"3552"}]}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule","label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Logging/Logging.swiftmodule","label":"//Sources/ErrorHandling/Logging:Logging","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"outputGroup":[{"name":"default","fileSets":[{"id":"91"}],"incomplete":true}],"tag":["medium","moderate","noflaky","nolocal"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule","label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/ErrorHandling/Utilities:Utilities","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling/Recovery/Recovery.swiftmodule","label":"//Sources/ErrorHandling/Recovery:Recovery","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":157}},"children":[{"progress":{"opaqueCount":158}},{"namedSet":{"id":"92"}}],"progress":{}}
{"id":{"namedSet":{"id":"92"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Bridge/Base/Adapters.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Base/Adapters.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"29a76f922993a41a36937ac66fb8da6d36b1d1760c5a9f51123435eb8a1325e4","length":"412"},{"name":"Sources/Security/Adapters/Bridge/Base/Adapters.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Base/Adapters.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7a9df66c9861bd7797de3f326c6c4a0a422c5ca37f2ed59e82aa55a51bc73143","length":"16624"},{"name":"Sources/Security/Adapters/Bridge/Base/Adapters.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Base/Adapters.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6f4dd6639e2aea2f82c2bc43413999f4c80dc0530d9899d55a63366b25cb6f98","length":"1024"},{"name":"Sources/Security/Adapters/Bridge/Base/libAdapters.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Base/libAdapters.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"25b9d1ac0f3472a3e70cc9f2355a8560551dc94f51e4cceceeaa1c0bfe4c5f1b","length":"9592"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/Base:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"92"}]}]}}
{"id":{"progress":{"opaqueCount":158}},"children":[{"progress":{"opaqueCount":159}},{"namedSet":{"id":"93"}}],"progress":{}}
{"id":{"namedSet":{"id":"93"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Tests/Tests.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Tests/Tests.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"01407eecc9d983473f49f04f795e3a4a0b7af162c3d354acb9e3d98c7cf91421","length":"936"},{"name":"Sources/CoreDTOs/Tests/Tests.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Tests/Tests.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0684312443a83e237053bd5419741013504463f3510f58be8ddaafeb23115493","length":"18068"},{"name":"Sources/CoreDTOs/Tests/Tests.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Tests/Tests.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"82a9cd682b10e3b9eaefa71a6d7da2bd44e04e2e4e9a1dfd1e777870ffffc504","length":"1252"},{"name":"Sources/CoreDTOs/Tests/libTests.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Tests/libTests.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3364904f1961f264bd329ec6480da8d65bcded9b316db6b118963ae9c729ce9b","length":"13152"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"93"}]}]}}
{"id":{"progress":{"opaqueCount":159}},"children":[{"progress":{"opaqueCount":160}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests.swiftmodule","label":"//Sources/CoreTypesInterfaces/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests.swiftmodule","label":"//Sources/CoreTypesInterfaces/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-434"},"label":"//Sources/CoreTypesInterfaces/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/CoreTypesInterfaces/Tests:Tests","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests_objs/ByteArrayTests.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-F__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/Library/Frameworks","-I__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/usr/lib","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Tests","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/CoreTypesInterfaces/Tests/ByteArrayTests.swift","Sources/CoreTypesInterfaces/Tests/SecureDataTests.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:28.236356Z","endTime":"2025-03-25T22:47:28.236356Z"}}
{"id":{"targetCompleted":{"label":"//Sources/CoreTypesInterfaces/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests.swiftmodule","label":"//Sources/CoreTypesInterfaces/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":160}},"children":[{"progress":{"opaqueCount":161}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc.swiftmodule","label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/CoreTypesInterfaces/Tests/BUILD.bazel:3:20: Compiling Swift module //Sources/CoreTypesInterfaces/Tests:Tests failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/CoreTypesInterfaces/Tests:Tests) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Tests/Tests.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nSources/CoreTypesInterfaces/Tests/SecureDataTests.swift:77:20: error: cannot find \u0027BinaryData\u0027 in scope\n75 |     // Test the BinaryData typealias\n76 |     let bytes: [UInt8]\u003d[1, 2, 3, 4, 5]\n77 |     let binaryData\u003dBinaryData(bytes: bytes)\n   |                    `- error: cannot find \u0027BinaryData\u0027 in scope\n78 | \n79 |     XCTAssertEqual(binaryData.rawBytes, bytes)\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc.swiftmodule","label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-518"},"label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc_objs/SecurityProtocolsCoreDocumentationPackage.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Documentation.docc","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityProtocolsCore/Documentation.docc/SecurityProtocolsCoreDocumentationPackage.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:32.159377Z","endTime":"2025-03-25T22:47:32.159377Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc.swiftmodule","label":"//Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":161}},"children":[{"progress":{"opaqueCount":162}},{"namedSet":{"id":"94"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityProtocolsCore/Documentation.docc/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityProtocolsCore/Documentation.docc:Documentation.docc) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Documentation.docc/Documentation.docc.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: module name \"Documentation.docc\" is not a valid identifier\n"}}
{"id":{"namedSet":{"id":"94"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Core/Types/Bridge/Bridge.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/Bridge/Bridge.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a4a730a8e7b6308c1792f637425b146726966f7f1a4c5e77263700e024500c7b","length":"9912"},{"name":"Sources/Security/Core/Types/Bridge/Bridge.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/Bridge/Bridge.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"3b2c5c5c31cc80ecbb792b0d7b78e7c8e2aba5f9b80215a13814626956cc8850","length":"58776"},{"name":"Sources/Security/Core/Types/Bridge/Bridge.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/Bridge/Bridge.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"baad99943ecf4dc9a4dd816de3cab1e6432ea8e77479c9b77a13311203e407bc","length":"13368"},{"name":"Sources/Security/Core/Types/Bridge/libBridge.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types/Bridge/libBridge.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ba10fa0eff17c99a30797503f4ac8b97a7f754c68905d6409158377491a60e2b","length":"101712"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Core/Types/Bridge:Bridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"94"}]}]}}
{"id":{"progress":{"opaqueCount":162}},"children":[{"progress":{"opaqueCount":163}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/Sources_CoreErrors_Tests_CoreErrorsTests.swiftmodule","label":"//Sources/CoreErrors/Tests:CoreErrorsTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/Sources_CoreErrors_Tests_CoreErrorsTests.swiftmodule","label":"//Sources/CoreErrors/Tests:CoreErrorsTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-489"},"label":"//Sources/CoreErrors/Tests:CoreErrorsTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/CoreErrors/Tests:CoreErrorsTests","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/CoreErrorsTests.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/Sources_CoreErrors_Tests_CoreErrorsTests.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/CoreErrorsTests_objs/CoreErrorsDefinitionTests.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-F__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/Library/Frameworks","-I__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/usr/lib","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/CoreErrorsTests.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Sources_CoreErrors_Tests_CoreErrorsTests","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-enable-testing","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/CoreErrors/Tests/CoreErrorsDefinitionTests.swift","Sources/CoreErrors/Tests/ErrorConsolidationTests.swift","Sources/CoreErrors/Tests/ErrorMappingTests.swift","Sources/CoreErrors/Tests/ErrorPropagationTests.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:30.521311Z","endTime":"2025-03-25T22:47:30.521311Z"}}
{"id":{"progress":{"opaqueCount":163}},"children":[{"progress":{"opaqueCount":164}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/CoreErrors/Tests/BUILD.bazel:8:11: Compiling Swift module //Sources/CoreErrors/Tests:CoreErrorsTests failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/CoreErrors/Tests:CoreErrorsTests) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/Sources_CoreErrors_Tests_CoreErrorsTests.swiftmodule-0.params)\n# Configuration: f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":164}},"children":[{"progress":{"opaqueCount":165}}],"progress":{"stderr":"Sources/CoreErrors/Tests/CoreErrorsDefinitionTests.swift:10:33: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 8 |   func testSecurityErrorProperties() {\n 9 |     // Test all cases have proper descriptions\n10 |     let testCases: [UmbraErrors.Security.Core]\u003d[\n   |                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n11 |       .invalidKey(reason: \"Test reason\"),\n12 |       .invalidContext(reason: \"Test reason\"),\n\nSources/CoreErrors/Tests/CoreErrorsDefinitionTests.swift:25:21: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n23 |       XCTAssertNotNil(canonicalError, \"Should convert to canonical form\")\n24 | \n25 |       let roundTrip\u003dUmbraErrors.Security.Core.fromCanonicalError(canonicalError)\n   |                     `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n26 |       XCTAssertNotNil(roundTrip, \"Should convert back from canonical form\")\n27 |     }\n\nSources/CoreErrors/Tests/CoreErrorsDefinitionTests.swift:32:15: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n30 |   func testSecurityErrorCanonicalMapping() {\n31 |     // Test specific mappings to ensure correctness\n32 |     let error\u003dUmbraErrors.Security.Core.invalidKey(reason: \"Bad key\")\n   |               `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n33 |     let canonical\u003derror.toCanonicalError()\n34 | \n\nSources/CoreErrors/Tests/CoreErrorsDefinitionTests.swift:36:20: error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n34 | \n35 |     XCTAssertTrue(\n36 |       canonical is ErrorHandlingDomains.UmbraErrors.GeneralSecurity.Core,\n   |                    `- error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n37 |       \"Should map to expected canonical type\"\n38 |     )\n\nSources/CoreErrors/Tests/CoreErrorsDefinitionTests.swift:40:41: error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n38 |     )\n39 | \n40 |     if let canonicalError\u003dcanonical as? ErrorHandlingDomains.UmbraErrors.GeneralSecurity.Core {\n   |                                         `- error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n41 |       if case let .invalidKey(reason)\u003dcanonicalError {\n42 |         XCTAssertEqual(reason, \"Bad key\", \"Reason should be preserved in mapping\")\n\nSources/CoreErrors/Tests/CoreErrorsDefinitionTests.swift:53:21: error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n51 |   func testCryptoErrorLocalisation() {\n52 |     // Test error descriptions are properly localised\n53 |     let testCases: [CryptoError]\u003d[\n   |                     `- error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n54 |       .invalidKeyLength(expected: 32, got: 16),\n55 |       .invalidIVLength(expected: 16, got: 8),\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreErrors/CryptoError.swift:4:15: note: found this candidate\n 2 | \n 3 | /// Crypto error type for CoreErrors module\n 4 | public struct CryptoError: Error, Equatable {\n   |               `- note: found this candidate\n 5 |   /// Error type\n 6 |   public enum ErrorType: Equatable {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/CryptoErrorDomain.swift:31:15: note: found this candidate\n 29 | \n 30 | /// Enhanced implementation of a CryptoError\n 31 | public struct CryptoError: UmbraError {\n    |               `- note: found this candidate\n 32 |   /// Domain identifier\n 33 |   public let domain: String\u003dCryptoErrorDomain.domain\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:13:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 11 | \n 12 |     // Create a security error\n 13 |     let securityError\u003dUmbraErrors.Security.Core.invalidKey(reason: \"Test reason\")\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 14 | \n 15 |     // Convert to canonical form\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:21:37: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 19 |     XCTAssertNotNil(canonicalError, \"Should convert to canonical form\")\n 20 |     XCTAssertFalse(\n 21 |       canonicalError is UmbraErrors.Security.Core,\n    |                                     `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 22 |       \"Canonical error should be different from original SecurityError\"\n 23 |     )\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:26:33: error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n 24 | \n 25 |     // Create a crypto error\n 26 |     let cryptoError\u003dCryptoError.encryptionFailed(reason: \"Algorithm failure\")\n    |                                 `- error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n 27 | \n 28 |     // Convert to canonical form\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:34:26: error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n 32 |     XCTAssertNotNil(cryptoCanonical, \"Should convert to canonical form\")\n 33 |     XCTAssertFalse(\n 34 |       cryptoCanonical is CryptoError,\n    |                          `- error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n 35 |       \"Canonical error should be different from original CryptoError\"\n 36 |     )\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreErrors/CryptoError.swift:4:15: note: found this candidate\n 2 | \n 3 | /// Crypto error type for CoreErrors module\n 4 | public struct CryptoError: Error, Equatable {\n   |               `- note: found this candidate\n 5 |   /// Error type\n 6 |   public enum ErrorType: Equatable {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/CryptoErrorDomain.swift:31:15: note: found this candidate\n 29 | \n 30 | /// Enhanced implementation of a CryptoError\n 31 | public struct CryptoError: UmbraError {\n    |               `- note: found this candidate\n 32 |   /// Domain identifier\n 33 |   public let domain: String\u003dCryptoErrorDomain.domain\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:43:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 41 | \n 42 |     // Create a security error\n 43 |     let securityError\u003dUmbraErrors.Security.Core.operationFailed(\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 44 |       operation: \"key_generation\",\n 45 |       reason: \"Insufficient entropy\"\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:58:33: error: reference to member \u0027keyGenerationFailed\u0027 cannot be resolved without a contextual type\n 56 | \n 57 |     // Create a crypto error that would result from such a propagation\n 58 |     let cryptoError\u003dCryptoError.keyGenerationFailed\n    |                                 `- error: reference to member \u0027keyGenerationFailed\u0027 cannot be resolved without a contextual type\n 59 | \n 60 |     // Verify the propagated error maintains critical information\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:72:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 70 | \n 71 |     // Start with a security error\n 72 |     let originalError\u003dUmbraErrors.Security.Core.invalidContext(reason: \"Missing parameters\")\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 73 | \n 74 |     // Convert to canonical form\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:93:7: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 91 | \n 92 |     let testErrors: [Error]\u003d[\n 93 |       UmbraErrors.Security.Core.invalidKey(reason: \"Test\"),\n    |       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 94 |       CryptoError.encryptionFailed(reason: \"Test\")\n 95 |     ]\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:94:19: error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n 92 |     let testErrors: [Error]\u003d[\n 93 |       UmbraErrors.Security.Core.invalidKey(reason: \"Test\"),\n 94 |       CryptoError.encryptionFailed(reason: \"Test\")\n    |                   `- error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n 95 |     ]\n 96 | \n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:110:24: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n108 | \n109 |     // Create errors of different types within the same domain\n110 |     let operationError\u003dUmbraErrors.Security.Core.operationFailed(\n    |                        `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n111 |       operation: \"authentication\",\n112 |       reason: \"Invalid credentials\"\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:114:18: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n112 |       reason: \"Invalid credentials\"\n113 |     )\n114 |     let keyError\u003dUmbraErrors.Security.Core.invalidKey(reason: \"Invalid format\")\n    |                  `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n115 | \n116 |     // Test that they\u0027re part of the same error family\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:147:7: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n145 |     // Create various errors\n146 |     let errors: [Error]\u003d[\n147 |       UmbraErrors.Security.Core.invalidKey(reason: \"Test\"),\n    |       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n148 |       UmbraErrors.Security.Core.operationFailed(operation: \"encrypt\", reason: \"Test\"),\n149 |       CryptoError.encryptionFailed(reason: \"Test\"),\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:148:7: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n146 |     let errors: [Error]\u003d[\n147 |       UmbraErrors.Security.Core.invalidKey(reason: \"Test\"),\n148 |       UmbraErrors.Security.Core.operationFailed(operation: \"encrypt\", reason: \"Test\"),\n    |       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n149 |       CryptoError.encryptionFailed(reason: \"Test\"),\n150 |       CryptoError.decryptionFailed(reason: \"Test\")\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:149:19: error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n147 |       UmbraErrors.Security.Core.invalidKey(reason: \"Test\"),\n148 |       UmbraErrors.Security.Core.operationFailed(operation: \"encrypt\", reason: \"Test\"),\n149 |       CryptoError.encryptionFailed(reason: \"Test\"),\n    |                   `- error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n150 |       CryptoError.decryptionFailed(reason: \"Test\")\n151 |     ]\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:150:19: error: type \u0027CryptoError\u0027 has no member \u0027decryptionFailed\u0027\n148 |       UmbraErrors.Security.Core.operationFailed(operation: \"encrypt\", reason: \"Test\"),\n149 |       CryptoError.encryptionFailed(reason: \"Test\"),\n150 |       CryptoError.decryptionFailed(reason: \"Test\")\n    |                   `- error: type \u0027CryptoError\u0027 has no member \u0027decryptionFailed\u0027\n151 |     ]\n152 | \n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:175:7: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n173 |     // Create a serializable error (assigned to _ since we\u0027re only testing the serialization format\n174 |     // itself)\n175 |     _\u003dUmbraErrors.Security.Core.operationFailed(\n    |       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n176 |       operation: \"key_generation\",\n177 |       reason: \"Insufficient entropy\"\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:211:7: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n209 | \n210 |     // Create an error for test purposes (not directly used as we\u0027re simulating serialisation)\n211 |     _\u003dUmbraErrors.Security.Core.operationFailed(\n    |       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n212 |       operation: \"authentication\",\n213 |       reason: \"User not found\"\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:255:27: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n253 |   private func extractErrorDomainInfo(from error: Error) -\u003e (domain: String, category: String)? {\n254 |     switch error {\n255 |       case is UmbraErrors.Security.Core:\n    |                           `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n256 |         return (\"Security\", \"Core\")\n257 |       case is CryptoError:\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:257:15: error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n255 |       case is UmbraErrors.Security.Core:\n256 |         return (\"Security\", \"Core\")\n257 |       case is CryptoError:\n    |               `- error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n258 |         return (\"Crypto\", \"Core\")\n259 |       default:\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreErrors/CryptoError.swift:4:15: note: found this candidate\n 2 | \n 3 | /// Crypto error type for CoreErrors module\n 4 | public struct CryptoError: Error, Equatable {\n   |               `- note: found this candidate\n 5 |   /// Error type\n 6 |   public enum ErrorType: Equatable {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/CryptoErrorDomain.swift:31:15: note: found this candidate\n 29 | \n 30 | /// Enhanced implementation of a CryptoError\n 31 | public struct CryptoError: UmbraError {\n    |               `- note: found this candidate\n 32 |   /// Domain identifier\n 33 |   public let domain: String\u003dCryptoErrorDomain.domain\n\nSources/CoreErrors/Tests/ErrorConsolidationTests.swift:296:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n294 | \n295 |     // Create various errors\n296 |     let securityError\u003dUmbraErrors.Security.Core.operationFailed(\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n297 |       operation: \"encryption\",\n298 |       reason: \"Key size mismatch\"\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:10:22: error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n  8 |   func testCryptoErrorToCanonicalMapping() {\n  9 |     // Test mapping from legacy CryptoError to canonical UmbraErrors.Crypto.Core\n 10 |     let testCases: [(CryptoError, String)]\u003d[\n    |                      `- error: \u0027CryptoError\u0027 is ambiguous for type lookup in this context\n 11 |       (.invalidKeyLength(expected: 32, got: 16), \"invalid_parameters\"),\n 12 |       (.invalidIVLength(expected: 16, got: 8), \"invalid_parameters\"),\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreErrors/CryptoError.swift:4:15: note: found this candidate\n 2 | \n 3 | /// Crypto error type for CoreErrors module\n 4 | public struct CryptoError: Error, Equatable {\n   |               `- note: found this candidate\n 5 |   /// Error type\n 6 |   public enum ErrorType: Equatable {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/CryptoErrorDomain.swift:31:15: note: found this candidate\n 29 | \n 30 | /// Enhanced implementation of a CryptoError\n 31 | public struct CryptoError: UmbraError {\n    |               `- note: found this candidate\n 32 |   /// Domain identifier\n 33 |   public let domain: String\u003dCryptoErrorDomain.domain\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:24:60: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 22 |       XCTAssertNotNil(canonicalError, \"Should convert to canonical error\")\n 23 | \n 24 |       if let canonicalError\u003dcanonicalError as? UmbraErrors.Crypto.Core {\n    |                                                            `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 25 |         // Use reflection to verify we mapped to the expected case type\n 26 |         let errorCase\u003dString(describing: canonicalError)\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:40:34: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 38 |     // Test mapping from canonical UmbraErrors.Crypto.Core to legacy CryptoError\n 39 |     // Using the function type for testing rather than the case type\n 40 |     let testCases: [(UmbraErrors.Crypto.Core, String)]\u003d[\n    |                                  `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 41 |       (.encryptionFailed(algorithm: \"AES\", reason: \"Test\"), \"encryptionFailed\"),\n 42 |       (.decryptionFailed(algorithm: \"AES\", reason: \"Test\"), \"decryptionFailed\"),\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:49:41: error: type \u0027CryptoErrorMapper\u0027 has no member \u0027mapToLegacyError\u0027\n 47 | \n 48 |     for (canonicalError, expectedCaseName) in testCases {\n 49 |       let legacyError\u003dCryptoErrorMapper.mapToLegacyError(canonicalError)\n    |                                         `- error: type \u0027CryptoErrorMapper\u0027 has no member \u0027mapToLegacyError\u0027\n 50 | \n 51 |       // Verify mapping produces expected error type using string comparison\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:56:34: error: cannot infer contextual base in reference to member \u0027whitespaces\u0027\n 54 |       // Extract just the case name from the error description\n 55 |       let caseName\u003derrorDescription.split(separator: \"(\").first?\n 56 |         .trimmingCharacters(in: .whitespaces) ?? \"\"\n    |                                  `- error: cannot infer contextual base in reference to member \u0027whitespaces\u0027\n 57 |       XCTAssertEqual(\n 58 |         caseName,\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:72:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 70 | \n 71 |     // Test forward conversion: SecurityError -\u003e UmbraErrors.GeneralSecurity.Core\n 72 |     let securityError\u003dUmbraErrors.Security.Core.invalidKey(reason: \"Test key\")\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 73 |     let canonicalError\u003dsecurityError.toCanonicalError()\n 74 | \n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:76:25: error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n 74 | \n 75 |     XCTAssertTrue(\n 76 |       canonicalError is ErrorHandlingDomains.UmbraErrors.GeneralSecurity.Core,\n    |                         `- error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n 77 |       \"Should convert to canonical form\"\n 78 |     )\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:80:46: error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n 78 |     )\n 79 | \n 80 |     if let canonicalError\u003dcanonicalError as? ErrorHandlingDomains.UmbraErrors.GeneralSecurity.Core {\n    |                                              `- error: cannot find type \u0027ErrorHandlingDomains\u0027 in scope\n 81 |       if case let .invalidKey(reason)\u003dcanonicalError {\n 82 |         XCTAssertEqual(reason, \"Test key\", \"Should preserve parameters\")\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:89:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 87 | \n 88 |     // Test reverse conversion: UmbraErrors.GeneralSecurity.Core -\u003e SecurityError\n 89 |     let reversedError\u003dUmbraErrors.Security.Core.fromCanonicalError(canonicalError)\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 90 |     XCTAssertNotNil(reversedError, \"Should convert back from canonical form\")\n 91 | \n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:93:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 91 | \n 92 |     // Verify at least one known case preserves its identity\n 93 |     let internalError\u003dUmbraErrors.Security.Core.internalError(description: \"Test error\")\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 94 |     let canonical\u003dinternalError.toCanonicalError()\n 95 |     let roundTrip\u003dUmbraErrors.Security.Core.fromCanonicalError(canonical)\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:95:19: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 93 |     let internalError\u003dUmbraErrors.Security.Core.internalError(description: \"Test error\")\n 94 |     let canonical\u003dinternalError.toCanonicalError()\n 95 |     let roundTrip\u003dUmbraErrors.Security.Core.fromCanonicalError(canonical)\n    |                   `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 96 | \n 97 |     if let roundTrip {\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:109:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n107 |   func testErrorMapping_BetweenDomains() {\n108 |     // Test mapping errors between different domains (e.g., security to crypto)\n109 |     let securityError\u003dUmbraErrors.Security.Core.operationFailed(\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n110 |       operation: \"encryption\",\n111 |       reason: \"Invalid key\"\n\nSources/CoreErrors/Tests/ErrorMappingTests.swift:116:33: error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n114 |     // Simulate cross-domain mapping (e.g., what might happen at service boundaries)\n115 |     let canonicalError\u003dsecurityError.toCanonicalError()\n116 |     let cryptoError\u003dCryptoError.encryptionFailed(reason: \"Mapped from security error\")\n    |                                 `- error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n117 | \n118 |     XCTAssertNotEqual(\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:16:38: error: value of type \u0027CryptoError\u0027 has no member \u0027toCanonical\u0027\n 14 | \n 15 |     // Convert to canonical form (as would happen at module boundary)\n 16 |     let canonicalError\u003doriginalError.toCanonical()\n    |                                      `- error: value of type \u0027CryptoError\u0027 has no member \u0027toCanonical\u0027\n 17 | \n 18 |     // Simulate passing through a boundary by type erasure and recovery\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:23:51: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 21 |     // Different module recovers the error\n 22 |     if\n 23 |       let recoveredError\u003danyError as? UmbraErrors.Crypto.Core,\n    |                                                   `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 24 |       case let .invalidParameters(_, parameter, reason)\u003drecoveredError\n 25 |     {\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:42:33: error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n 40 | \n 41 |     // Create errors from different domains\n 42 |     let cryptoError\u003dCryptoError.encryptionFailed(reason: \"Bad key\")\n    |                                 `- error: type \u0027CryptoError\u0027 has no member \u0027encryptionFailed\u0027\n 43 |     let securityError\u003dUmbraErrors.Security.Core.invalidKey(reason: \"Malformed key\")\n 44 | \n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:43:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 41 |     // Create errors from different domains\n 42 |     let cryptoError\u003dCryptoError.encryptionFailed(reason: \"Bad key\")\n 43 |     let securityError\u003dUmbraErrors.Security.Core.invalidKey(reason: \"Malformed key\")\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 44 | \n 45 |     // Convert both to canonical formats\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:51:42: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 49 |     // Verify we can extract consistent information regardless of source\n 50 |     func extractErrorInfo(_ error: Any) -\u003e (domain: String, message: String)? {\n 51 |       if let error\u003derror as? UmbraErrors.Crypto.Core {\n    |                                          `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 52 |         return (\"Crypto\", String(describing: error))\n 53 |       } else if let error\u003derror as? UmbraErrors.Security.Core {\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:53:49: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 51 |       if let error\u003derror as? UmbraErrors.Crypto.Core {\n 52 |         return (\"Crypto\", String(describing: error))\n 53 |       } else if let error\u003derror as? UmbraErrors.Security.Core {\n    |                                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 54 |         return (\"Security\", String(describing: error))\n 55 |       }\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:75:35: error: value of type \u0027CryptoError\u0027 has no member \u0027errorDescription\u0027\n 73 | \n 74 |     // Verify the error is properly localised\n 75 |     XCTAssertNotNil(originalError.errorDescription, \"Error should have localised description\")\n    |                                   `- error: value of type \u0027CryptoError\u0027 has no member \u0027errorDescription\u0027\n 76 |     XCTAssertTrue(\n 77 |       originalError.errorDescription?.contains(\"32\") ?? false,\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:77:21: error: value of type \u0027CryptoError\u0027 has no member \u0027errorDescription\u0027\n 75 |     XCTAssertNotNil(originalError.errorDescription, \"Error should have localised description\")\n 76 |     XCTAssertTrue(\n 77 |       originalError.errorDescription?.contains(\"32\") ?? false,\n    |                     `- error: value of type \u0027CryptoError\u0027 has no member \u0027errorDescription\u0027\n 78 |       \"Localised description should contain the expected value\"\n 79 |     )\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:81:21: error: value of type \u0027CryptoError\u0027 has no member \u0027errorDescription\u0027\n 79 |     )\n 80 |     XCTAssertTrue(\n 81 |       originalError.errorDescription?.contains(\"16\") ?? false,\n    |                     `- error: value of type \u0027CryptoError\u0027 has no member \u0027errorDescription\u0027\n 82 |       \"Localised description should contain the actual value\"\n 83 |     )\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:86:38: error: value of type \u0027CryptoError\u0027 has no member \u0027toCanonical\u0027\n 84 | \n 85 |     // Convert to canonical form and check localisation is maintained\n 86 |     let canonicalError\u003doriginalError.toCanonical()\n    |                                      `- error: value of type \u0027CryptoError\u0027 has no member \u0027toCanonical\u0027\n 87 | \n 88 |     if\n\nSources/CoreErrors/Tests/ErrorPropagationTests.swift:89:57: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 87 | \n 88 |     if\n 89 |       let canonicalError\u003dcanonicalError as? UmbraErrors.Crypto.Core,\n    |                                                         `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 90 |       case let .invalidParameters(_, _, reason)\u003dcanonicalError\n 91 |     {\n"}}
{"id":{"progress":{"opaqueCount":165}},"children":[{"progress":{"opaqueCount":166}},{"namedSet":{"id":"95"}}],"progress":{}}
{"id":{"namedSet":{"id":"95"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreErrors/Tests/CoreErrorsTests.test-runner.sh","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/CoreErrorsTests.test-runner.sh","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4d8f38aef06553dc8317217ffd56566adf6aa1ef8c8634968a8fe21d4b137d4c","length":"3559"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreErrors/Tests:CoreErrorsTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors/Tests/Sources_CoreErrors_Tests_CoreErrorsTests.swiftmodule","label":"//Sources/CoreErrors/Tests:CoreErrorsTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"completed":{"outputGroup":[{"name":"default","fileSets":[{"id":"95"}],"incomplete":true}],"tag":["medium","moderate","noflaky","nolocal"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":166}},"children":[{"progress":{"opaqueCount":167}},{"namedSet":{"id":"96"}}],"progress":{}}
{"id":{"namedSet":{"id":"96"}},"namedSetOfFiles":{"files":[{"name":"Sources/XPCProtocolsCore/Sources/Adapters/Adapters.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Adapters/Adapters.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"29a76f922993a41a36937ac66fb8da6d36b1d1760c5a9f51123435eb8a1325e4","length":"412"},{"name":"Sources/XPCProtocolsCore/Sources/Adapters/Adapters.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Adapters/Adapters.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7558dc6b64eedf32041033e6e9edf5101f45042cabc5d72afb965d7830e45bff","length":"16624"},{"name":"Sources/XPCProtocolsCore/Sources/Adapters/Adapters.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Adapters/Adapters.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"def7ad5348139a93ddc487f44b396877ed8baec7da80a9d487f934a51a2c88e9","length":"696"},{"name":"Sources/XPCProtocolsCore/Sources/Adapters/libAdapters.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Adapters/libAdapters.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a6f09ab2df483a4eb468f730c8081f7c1634765ff271c7558a47cad8211d213d","length":"3296"}]}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Sources/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"96"}]}]}}
{"id":{"progress":{"opaqueCount":167}},"children":[{"progress":{"opaqueCount":168}},{"namedSet":{"id":"97"}}],"progress":{"stderr":"[588 / 669] [Sched] Compiling Swift module //Sources/UmbraCoreTypes/Tests:Tests ... (12 actions, 5 running)\nINFO: From Compiling Swift module //Sources/Security/Core/Protocols:Protocols:\nSources/Security/Core/Protocols/CryptoServiceProtocol.swift:43:19: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n41 |   /// Converts this protocol implementation to a CryptoServiceDTO\n42 |   /// - Returns: A CryptoServiceDTO representing this service\n43 |   func toDTO() -\u003e CryptoServiceDTO {\n   |                   |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                   `- note: use \u0027CryptoServiceDto\u0027 instead\n44 |     CryptoServiceDTO(\n45 |       encrypt: { data, key in\n\nSources/Security/Core/Protocols/CryptoServiceProtocol.swift:62:18: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n60 | \n61 | /// Extension to create a CryptoServiceProtocol from a DTO\n62 | public extension CryptoServiceDTO {\n   |                  |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                  `- note: use \u0027CryptoServiceDto\u0027 instead\n63 |   /// Creates a protocol-conforming object from this DTO\n64 |   /// - Returns: An object that conforms to CryptoServiceProtocol\n\nSources/Security/Core/Protocols/CryptoServiceProtocol.swift:67:16: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n65 |   func toProtocol() -\u003e some CryptoServiceProtocol {\n66 |     struct ProtocolAdapter: CryptoServiceProtocol {\n67 |       let dto: CryptoServiceDTO\n   |                |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                `- note: use \u0027CryptoServiceDto\u0027 instead\n68 |       \n69 |       func encrypt(data: SecureBytes, using key: SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e {\nSources/Security/Core/Protocols/CryptoServiceProtocol.swift:43:19: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n41 |   /// Converts this protocol implementation to a CryptoServiceDTO\n42 |   /// - Returns: A CryptoServiceDTO representing this service\n43 |   func toDTO() -\u003e CryptoServiceDTO {\n   |                   |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                   `- note: use \u0027CryptoServiceDto\u0027 instead\n44 |     CryptoServiceDTO(\n45 |       encrypt: { data, key in\n\nSources/Security/Core/Protocols/CryptoServiceProtocol.swift:62:18: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n60 | \n61 | /// Extension to create a CryptoServiceProtocol from a DTO\n62 | public extension CryptoServiceDTO {\n   |                  |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                  `- note: use \u0027CryptoServiceDto\u0027 instead\n63 |   /// Creates a protocol-conforming object from this DTO\n64 |   /// - Returns: An object that conforms to CryptoServiceProtocol\n\nSources/Security/Core/Protocols/CryptoServiceProtocol.swift:44:5: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n42 |   /// - Returns: A CryptoServiceDTO representing this service\n43 |   func toDTO() -\u003e CryptoServiceDTO {\n44 |     CryptoServiceDTO(\n   |     |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |     `- note: use \u0027CryptoServiceDto\u0027 instead\n45 |       encrypt: { data, key in\n46 |         await self.encrypt(data: data, using: key)\n\nSources/Security/Core/Protocols/CryptoServiceProtocol.swift:67:16: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n65 |   func toProtocol() -\u003e some CryptoServiceProtocol {\n66 |     struct ProtocolAdapter: CryptoServiceProtocol {\n67 |       let dto: CryptoServiceDTO\n   |                |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                `- note: use \u0027CryptoServiceDto\u0027 instead\n68 |       \n69 |       func encrypt(data: SecureBytes, using key: SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e {\n"}}
{"id":{"namedSet":{"id":"97"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Bridge/Protocol/ProtocolAdapters.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Protocol/ProtocolAdapters.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"90d0c81efddabcb1173f87514e6762d0c1a46924c3dbc7c8988373f3bd784342","length":"420"},{"name":"Sources/Security/Adapters/Bridge/Protocol/ProtocolAdapters.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Protocol/ProtocolAdapters.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"284ccce847e078cbb92b47e537cd1c8f13bff9a1234555b23301acee216c5fa3","length":"16640"},{"name":"Sources/Security/Adapters/Bridge/Protocol/ProtocolAdapters.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Protocol/ProtocolAdapters.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0d8237b6debbbea8e8af9ccce67301bf80f08295ca171d8f0092df09a4bd5aa8","length":"1464"},{"name":"Sources/Security/Adapters/Bridge/Protocol/libProtocolAdapters.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Protocol/libProtocolAdapters.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"7d733c326e2db4a41057a9d3910c122d0fe8cfea1dceb0553c0cd949a5a7b5ce","length":"16152"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/Protocol:ProtocolAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"97"}]}]}}
{"id":{"progress":{"opaqueCount":168}},"children":[{"progress":{"opaqueCount":169}},{"namedSet":{"id":"98"}}],"progress":{}}
{"id":{"namedSet":{"id":"98"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/DateTime/DateTime.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/DateTime/DateTime.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"93b50ece72913ee76658483b8106c4c8a43478a34087ec63b3f09ea02b178442","length":"18756"},{"name":"Sources/CoreDTOs/Sources/DateTime/DateTime.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/DateTime/DateTime.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"600728c0598a1bfb03cc84560ee02654d0b8f1e52d9789f773347b2ecc7bc62e","length":"75028"},{"name":"Sources/CoreDTOs/Sources/DateTime/DateTime.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/DateTime/DateTime.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"04ef704eb9c239ac76f8a60c028032edf7ca05c2ff86e33eb3696e9d357298a9","length":"20552"},{"name":"Sources/CoreDTOs/Sources/DateTime/libDateTime.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/DateTime/libDateTime.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2eb0fb2c2c2721876223f8d26e09412d1c73dc0b7f5b556d58652e945170ec61","length":"220376"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/DateTime:DateTime","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"98"}]}]}}
{"id":{"progress":{"opaqueCount":169}},"children":[{"progress":{"opaqueCount":170}},{"namedSet":{"id":"99"}}],"progress":{}}
{"id":{"namedSet":{"id":"99"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/RepositoryManagement/RepositoryManagement.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/RepositoryManagement/RepositoryManagement.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4e3c2569f2ce563eb3ce0c2068a6ca6aeb6bc3eb7168b3278e50918cc5e9faab","length":"12248"},{"name":"Sources/CoreDTOs/Sources/RepositoryManagement/RepositoryManagement.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/RepositoryManagement/RepositoryManagement.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"355c05090a98f49420dc210001c57618504ad32e396afb8356d65667ac4e4e58","length":"32092"},{"name":"Sources/CoreDTOs/Sources/RepositoryManagement/RepositoryManagement.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/RepositoryManagement/RepositoryManagement.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6359375e1600ee0ac1d29aaf2eab09db18b25a4f0251771e0d5be043a33b8207","length":"10444"},{"name":"Sources/CoreDTOs/Sources/RepositoryManagement/libRepositoryManagement.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/RepositoryManagement/libRepositoryManagement.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"80eb2077c7f5cefe192e30674a2ad52e8aa1120ed5ce047adef098fa6df8a5b4","length":"50632"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/RepositoryManagement:RepositoryManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"99"}]}]}}
{"id":{"progress":{"opaqueCount":170}},"children":[{"progress":{"opaqueCount":171}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Sources_UmbraCoreTypes_Tests_Tests.swiftmodule","label":"//Sources/UmbraCoreTypes/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Sources_UmbraCoreTypes_Tests_Tests.swiftmodule","label":"//Sources/UmbraCoreTypes/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-528"},"label":"//Sources/UmbraCoreTypes/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/UmbraCoreTypes/Tests:Tests","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Tests.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Sources_UmbraCoreTypes_Tests_Tests.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Tests_objs/ResourceLocatorTests.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-F__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/Library/Frameworks","-I__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/usr/lib","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Tests.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Sources_UmbraCoreTypes_Tests_Tests","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-enable-testing","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/UmbraCoreTypes/Tests/ResourceLocatorTests.swift","Sources/UmbraCoreTypes/Tests/SecureBytesTests.swift","Sources/UmbraCoreTypes/Tests/UmbraErrorsMappingTests.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:33.515083Z","endTime":"2025-03-25T22:47:33.515083Z"}}
{"id":{"progress":{"opaqueCount":171}},"children":[{"progress":{"opaqueCount":172}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/UmbraCoreTypes/Tests/BUILD.bazel:3:11: Compiling Swift module //Sources/UmbraCoreTypes/Tests:Tests failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/UmbraCoreTypes/Tests:Tests) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Sources_UmbraCoreTypes_Tests_Tests.swiftmodule-0.params)\n# Configuration: f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":172}},"children":[{"progress":{"opaqueCount":173}}],"progress":{"stderr":"Sources/UmbraCoreTypes/Tests/ResourceLocatorTests.swift:23:30: error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n 21 |     // Then it should throw invalidPath error\n 22 |     XCTAssertThrowsError(try ResourceLocator(scheme: \"file\", path: \"\")) { error in\n 23 |       XCTAssertTrue(error is ResourceLocatorError)\n    |                              `- error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n 24 |       XCTAssertEqual(error as? ResourceLocatorError, ResourceLocatorError.invalidPath)\n 25 |     }\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraCoreTypes/Sources/ResourceLocator.swift:138:13: note: found this candidate\n136 | \n137 | /// Error types specific to ResourceLocator operations\n138 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n139 |   /// The path is invalid or empty\n140 |   case invalidPath\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/ResourceLocatorErrorDomain.swift:26:13: note: found this candidate\n 24 | \n 25 | /// Error types specific to UmbraCore ResourceLocator operations\n 26 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n 27 |   /// The path is invalid or empty\n 28 |   case invalidPath\n\nSources/UmbraCoreTypes/Tests/ResourceLocatorTests.swift:97:34: error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n 95 |       // Then it should throw resourceNotFound\n 96 |       XCTAssertThrowsError(try locator.validate()) { error in\n 97 |         XCTAssertEqual(error as? ResourceLocatorError, ResourceLocatorError.resourceNotFound)\n    |                                  `- error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n 98 |       }\n 99 |     } catch {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraCoreTypes/Sources/ResourceLocator.swift:138:13: note: found this candidate\n136 | \n137 | /// Error types specific to ResourceLocator operations\n138 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n139 |   /// The path is invalid or empty\n140 |   case invalidPath\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/ResourceLocatorErrorDomain.swift:26:13: note: found this candidate\n 24 | \n 25 | /// Error types specific to UmbraCore ResourceLocator operations\n 26 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n 27 |   /// The path is invalid or empty\n 28 |   case invalidPath\n\nSources/UmbraCoreTypes/Tests/ResourceLocatorTests.swift:112:34: error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n110 |       // Then it should throw accessDenied\n111 |       XCTAssertThrowsError(try locator.validate()) { error in\n112 |         XCTAssertEqual(error as? ResourceLocatorError, ResourceLocatorError.accessDenied)\n    |                                  `- error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n113 |       }\n114 |     } catch {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraCoreTypes/Sources/ResourceLocator.swift:138:13: note: found this candidate\n136 | \n137 | /// Error types specific to ResourceLocator operations\n138 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n139 |   /// The path is invalid or empty\n140 |   case invalidPath\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/ResourceLocatorErrorDomain.swift:26:13: note: found this candidate\n 24 | \n 25 | /// Error types specific to UmbraCore ResourceLocator operations\n 26 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n 27 |   /// The path is invalid or empty\n 28 |   case invalidPath\n\nSources/UmbraCoreTypes/Tests/ResourceLocatorTests.swift:123:18: error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n121 |   func testResourceLocatorErrorToUmbraError() {\n122 |     // Given ResourceLocatorError values\n123 |     let errors: [ResourceLocatorError]\u003d[\n    |                  `- error: \u0027ResourceLocatorError\u0027 is ambiguous for type lookup in this context\n124 |       .invalidPath,\n125 |       .resourceNotFound,\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraCoreTypes/Sources/ResourceLocator.swift:138:13: note: found this candidate\n136 | \n137 | /// Error types specific to ResourceLocator operations\n138 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n139 |   /// The path is invalid or empty\n140 |   case invalidPath\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/ResourceLocatorErrorDomain.swift:26:13: note: found this candidate\n 24 | \n 25 | /// Error types specific to UmbraCore ResourceLocator operations\n 26 | public enum ResourceLocatorError: Error, Equatable, Sendable {\n    |             `- note: found this candidate\n 27 |   /// The path is invalid or empty\n 28 |   case invalidPath\n\nSources/UmbraCoreTypes/Tests/SecureBytesTests.swift:55:19: error: value of type \u0027SecureBytes\u0027 has no member \u0027hexEncodedString\u0027\n 53 |   func testHexEncoding() {\n 54 |     let bytes\u003dSecureBytes(bytes: [0xDE, 0xAD, 0xBE, 0xEF])\n 55 |     let hex\u003dbytes.hexEncodedString()\n    |                   `- error: value of type \u0027SecureBytes\u0027 has no member \u0027hexEncodedString\u0027\n 56 |     XCTAssertEqual(hex, \"deadbeef\")\n 57 |   }\n\nSources/UmbraCoreTypes/Tests/SecureBytesTests.swift:61:11: error: value of type \u0027SecureBytes\u0027 has no member \u0027append\u0027\n 59 |   func testAppend() {\n 60 |     var bytes\u003dSecureBytes(bytes: [1, 2, 3])\n 61 |     bytes.append(4)\n    |           `- error: value of type \u0027SecureBytes\u0027 has no member \u0027append\u0027\n 62 |     bytes.append(SecureBytes(bytes: [5, 6]))\n 63 | \n\nSources/UmbraCoreTypes/Tests/SecureBytesTests.swift:62:11: error: value of type \u0027SecureBytes\u0027 has no member \u0027append\u0027\n 60 |     var bytes\u003dSecureBytes(bytes: [1, 2, 3])\n 61 |     bytes.append(4)\n 62 |     bytes.append(SecureBytes(bytes: [5, 6]))\n    |           `- error: value of type \u0027SecureBytes\u0027 has no member \u0027append\u0027\n 63 | \n 64 |     XCTAssertEqual(bytes.count, 6)\n\nSources/UmbraCoreTypes/Tests/SecureBytesTests.swift:74:25: error: binary operator \u0027+\u0027 cannot be applied to two \u0027SecureBytes\u0027 operands\n 72 |     let bytes2\u003dSecureBytes(bytes: [4, 5, 6])\n 73 | \n 74 |     let combined\u003dbytes1 + bytes2\n    |                         `- error: binary operator \u0027+\u0027 cannot be applied to two \u0027SecureBytes\u0027 operands\n 75 |     XCTAssertEqual(combined.count, 6)\n 76 |     for i in 0..\u003c6 {\n\nSources/UmbraCoreTypes/Tests/SecureBytesTests.swift:118:11: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n116 |     let bytes\u003dSecureBytes(bytes: [10, 20, 30, 40, 50])\n117 | \n118 |     bytes.withUnsafeBytes { buffer in\n    |           `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n119 |       XCTAssertEqual(buffer.count, 5)\n120 |       for i in 0..\u003c5 {\n\nSources/UmbraCoreTypes/Tests/SecureBytesTests.swift:129:11: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeMutableBytes\u0027\n127 |     var bytes\u003dSecureBytes(bytes: [10, 20, 30, 40, 50])\n128 | \n129 |     bytes.withUnsafeMutableBytes { buffer in\n    |           `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeMutableBytes\u0027\n130 |       for i in 0..\u003cbuffer.count {\n131 |         buffer[i]\u003dbuffer[i] + 5\n\nSources/UmbraCoreTypes/Tests/SecureBytesTests.swift:143:28: error: cannot convert value of type \u0027[Int]\u0027 to specified type \u0027SecureBytes\u0027\n141 | \n142 |   func testArrayLiteralInitializer() {\n143 |     let bytes: SecureBytes\u003d[1, 2, 3, 4, 5]\n    |                            `- error: cannot convert value of type \u0027[Int]\u0027 to specified type \u0027SecureBytes\u0027\n144 | \n145 |     XCTAssertEqual(bytes.count, 5)\n\nSources/UmbraCoreTypes/Tests/UmbraErrorsMappingTests.swift:17:40: error: ambiguous use of \u0027invalidHexString\u0027\n15 |   func testSecureBytesErrorToUmbraError() {\n16 |     // Test mapping to UmbraErrors\n17 |     let originalError\u003dSecureBytesError.invalidHexString\n   |                                        `- error: ambiguous use of \u0027invalidHexString\u0027\n18 |     let mappedError\u003doriginalError.toUmbraError()\n19 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraCoreTypes/Sources/SecureBytes.swift:371:8: note: found this candidate in module \u0027UmbraCoreTypes\u0027\n369 |   \n370 |   /// The provided hex string was invalid\n371 |   case invalidHexString\n    |        `- note: found this candidate in module \u0027UmbraCoreTypes\u0027\n372 |   \n373 |   /// General error with message\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecureBytesErrorDomain.swift:22:8: note: found this candidate in module \u0027Domains\u0027\n 20 | public enum SecureBytesError: Error, Equatable, Sendable {\n 21 |   /// The provided hexadecimal string is invalid or malformed\n 22 |   case invalidHexString\n    |        `- note: found this candidate in module \u0027Domains\u0027\n 23 | \n 24 |   /// The operation attempted to access memory outside the valid bounds\n\nSources/UmbraCoreTypes/Tests/UmbraErrorsMappingTests.swift:28:41: error: type \u0027Equatable\u0027 has no member \u0027invalidResource\u0027\n26 |     // Check specific properties\n27 |     XCTAssertEqual(resourceError.code, SecureBytesErrorDomain.invalidHexString.rawValue)\n28 |     XCTAssertEqual(resourceError.type, .invalidResource)\n   |                                         `- error: type \u0027Equatable\u0027 has no member \u0027invalidResource\u0027\n29 |   }\n30 | \n\nSources/UmbraCoreTypes/Tests/UmbraErrorsMappingTests.swift:35:44: error: ambiguous use of \u0027resourceNotFound\u0027\n33 |   func testResourceLocatorErrorToUmbraError() {\n34 |     // Test mapping to UmbraErrors\n35 |     let originalError\u003dResourceLocatorError.resourceNotFound\n   |                                            `- error: ambiguous use of \u0027resourceNotFound\u0027\n36 |     let mappedError\u003doriginalError.toUmbraError()\n37 | \n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraCoreTypes/Sources/ResourceLocator.swift:143:8: note: found this candidate in module \u0027UmbraCoreTypes\u0027\n141 |   \n142 |   /// The requested resource does not exist\n143 |   case resourceNotFound\n    |        `- note: found this candidate in module \u0027UmbraCoreTypes\u0027\n144 |   \n145 |   /// Access to the resource is denied\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/ResourceLocatorErrorDomain.swift:31:8: note: found this candidate in module \u0027Domains\u0027\n 29 | \n 30 |   /// The requested resource does not exist\n 31 |   case resourceNotFound\n    |        `- note: found this candidate in module \u0027Domains\u0027\n 32 | \n 33 |   /// Access to the resource is denied\n\nSources/UmbraCoreTypes/Tests/UmbraErrorsMappingTests.swift:46:41: error: type \u0027Equatable\u0027 has no member \u0027notFound\u0027\n44 |     // Check specific properties\n45 |     XCTAssertEqual(resourceError.code, ResourceLocatorErrorDomain.resourceNotFound.rawValue)\n46 |     XCTAssertEqual(resourceError.type, .notFound)\n   |                                         `- error: type \u0027Equatable\u0027 has no member \u0027notFound\u0027\n47 |   }\n48 | \n"}}
{"id":{"progress":{"opaqueCount":173}},"children":[{"progress":{"opaqueCount":174}},{"namedSet":{"id":"100"}}],"progress":{}}
{"id":{"namedSet":{"id":"100"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraCoreTypes/Tests/Tests.test-runner.sh","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Tests.test-runner.sh","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"367978ffcac497e991585ab4578fe014b11aba2290b4bc3eb210115ba0e0e777","length":"3553"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraCoreTypes/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Tests/Sources_UmbraCoreTypes_Tests_Tests.swiftmodule","label":"//Sources/UmbraCoreTypes/Tests:Tests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}}],"completed":{"outputGroup":[{"name":"default","fileSets":[{"id":"100"}],"incomplete":true}],"tag":["medium","moderate","noflaky","nolocal"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":174}},"children":[{"progress":{"opaqueCount":175}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.swiftmodule","label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.swiftmodule","label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-531"},"label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation_objs/CoreTypesImplementation.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","CoreTypesImplementation","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.swift","Sources/CoreTypesImplementation/Sources/DefaultCoreProvider.swift","Sources/CoreTypesImplementation/Sources/ErrorAdapters.swift","Sources/CoreTypesImplementation/Sources/SecureDataAdapters.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:33.687719Z","endTime":"2025-03-25T22:47:33.687719Z"}}
{"id":{"progress":{"opaqueCount":175}},"children":[{"progress":{"opaqueCount":176}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/CoreTypesImplementation/Sources/BUILD.bazel:3:20: Compiling Swift module //Sources/CoreTypesImplementation/Sources:CoreTypesImplementation failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/CoreTypesImplementation/Sources:CoreTypesImplementation) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":176}},"children":[{"progress":{"opaqueCount":177}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:38:55: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 36 | /// - Parameter error: Any error from an external domain\n 37 | /// - Returns: The equivalent SecurityError\n 38 | public func mapExternalToCoreError(_ error: Error) -\u003e SecurityError {\n    |                                                       `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 39 |   // If already the correct type, return as is\n 40 |   if let securityError \u003d error as? SecurityError {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:56:45: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 54 | /// - Parameter error: Error of type SecurityError\n 55 | /// - Returns: An appropriate external error\n 56 | public func mapCoreToExternalError(_ error: SecurityError) -\u003e Error {\n    |                                             `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 57 |   // For now, simply wrap in the ExternalError type\n 58 |   ExternalError(reason: \"Core error: \\(error)\")\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:68:69: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 66 | /// - Parameter error: The SecureBytesError to convert\n 67 | /// - Returns: An equivalent SecurityError\n 68 | public func mapSecureBytesToCoreError(_ error: SecureBytesError) -\u003e SecurityError {\n    |                                                                     `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 69 |   // For now, simply map to an internal error\n 70 |   SecurityError.internalError(reason: \"SecureBytesError: \\(error)\")\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:81:14: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 79 | /// - Returns: A Result with SecurityError\n 80 | public func mapToSecurityResult\u003cT\u003e(_ result: Result\u003cT, Error\u003e)\n 81 | -\u003e Result\u003cT, SecurityError\u003e {\n    |              `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 82 |   switch result {\n 83 |     case let .success(value):\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:93:57: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 91 | /// - Parameter error: The external error to map\n 92 | /// - Returns: A SecurityError\n 93 | public func externalErrorToCoreError(_ error: Error) -\u003e SecurityError {\n    |                                                         `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 94 |   if let securityError \u003d error as? SecurityError {\n 95 |     return securityError\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:38:55: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 36 | /// - Parameter error: Any error from an external domain\n 37 | /// - Returns: The equivalent SecurityError\n 38 | public func mapExternalToCoreError(_ error: Error) -\u003e SecurityError {\n    |                                                       `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 39 |   // If already the correct type, return as is\n 40 |   if let securityError \u003d error as? SecurityError {\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:56:45: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 54 | /// - Parameter error: Error of type SecurityError\n 55 | /// - Returns: An appropriate external error\n 56 | public func mapCoreToExternalError(_ error: SecurityError) -\u003e Error {\n    |                                             `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 57 |   // For now, simply wrap in the ExternalError type\n 58 |   ExternalError(reason: \"Core error: \\(error)\")\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:68:69: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 66 | /// - Parameter error: The SecureBytesError to convert\n 67 | /// - Returns: An equivalent SecurityError\n 68 | public func mapSecureBytesToCoreError(_ error: SecureBytesError) -\u003e SecurityError {\n    |                                                                     `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 69 |   // For now, simply map to an internal error\n 70 |   SecurityError.internalError(reason: \"SecureBytesError: \\(error)\")\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:81:14: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 79 | /// - Returns: A Result with SecurityError\n 80 | public func mapToSecurityResult\u003cT\u003e(_ result: Result\u003cT, Error\u003e)\n 81 | -\u003e Result\u003cT, SecurityError\u003e {\n    |              `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 82 |   switch result {\n 83 |     case let .success(value):\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:93:57: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 91 | /// - Parameter error: The external error to map\n 92 | /// - Returns: A SecurityError\n 93 | public func externalErrorToCoreError(_ error: Error) -\u003e SecurityError {\n    |                                                         `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 94 |   if let securityError \u003d error as? SecurityError {\n 95 |     return securityError\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:40:36: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 38 | public func mapExternalToCoreError(_ error: Error) -\u003e SecurityError {\n 39 |   // If already the correct type, return as is\n 40 |   if let securityError \u003d error as? SecurityError {\n    |                                    `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 41 |     return securityError\n 42 |   }\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n\nSources/CoreTypesImplementation/Sources/ErrorAdapters.swift:94:36: error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 92 | /// - Returns: A SecurityError\n 93 | public func externalErrorToCoreError(_ error: Error) -\u003e SecurityError {\n 94 |   if let securityError \u003d error as? SecurityError {\n    |                                    `- error: \u0027SecurityError\u0027 is ambiguous for type lookup in this context\n 95 |     return securityError\n 96 |   }\n\n/Users/mpy/.bazel/execroot/_main/Sources/UmbraErrors/Domains/SecurityErrorDomain.swift:46:15: note: found this candidate\n 44 | \n 45 | /// Enhanced implementation of a SecurityError\n 46 | public struct SecurityError: UmbraError {\n    |               `- note: found this candidate\n 47 |   /// Domain identifier\n 48 |   public let domain: String\u003dSecurityErrorDomain.domain\n\n/Users/mpy/.bazel/execroot/_main/Sources/CoreTypesInterfaces/Sources/ErrorTypes.swift:41:17: note: found this candidate\n39 | \n40 | /// Base protocol for all security-related errors\n41 | public protocol SecurityError: Error, Sendable, CustomStringConvertible {\n   |                 `- note: found this candidate\n42 |   /// A descriptive error code\n43 |   var errorCode: Int { get }\n"}}
{"id":{"targetCompleted":{"label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.swiftmodule","label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/CoreTypesImplementation/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesImplementation/Sources/CoreTypesImplementation.swiftmodule","label":"//Sources/CoreTypesImplementation/Sources:CoreTypesImplementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":177}},"children":[{"progress":{"opaqueCount":178}},{"namedSet":{"id":"101"}}],"progress":{}}
{"id":{"namedSet":{"id":"101"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Bridge/SecurityBridge.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/SecurityBridge.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4a6c34de6e677ea15d5d56e12069d964d2fbaf4e01fb878c07d3cb32b1993013","length":"420"},{"name":"Sources/Security/Adapters/Bridge/SecurityBridge.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/SecurityBridge.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0d68de4fed3e96d0f7c0757cb46a52fc9ddeebc582b4015745112c2637658024","length":"16640"},{"name":"Sources/Security/Adapters/Bridge/SecurityBridge.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/SecurityBridge.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"146361d941ae63d2e0f8fd631a197ffe3b0c9c34a65c50cc121e2035d8321f42","length":"872"},{"name":"Sources/Security/Adapters/Bridge/libSecurityBridge.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/libSecurityBridge.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cdbdc457523f10c59d5e0dd32f65255245281e2480974b1895faf6b19049de8b","length":"6464"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge:SecurityBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"101"}]}]}}
{"id":{"progress":{"opaqueCount":178}},"children":[{"progress":{"opaqueCount":179}},{"namedSet":{"id":"102"}}],"progress":{}}
{"id":{"namedSet":{"id":"102"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraErrors/Tests/Tests.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Tests/Tests.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ffe1e4483468aca6847a9151fa55344f5edf26847655aaf9e1657da9285ee1ea","length":"952"},{"name":"Sources/UmbraErrors/Tests/Tests.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Tests/Tests.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"f9f1a9644f68b72be91027cf3cadb2e1331ec27f9430990183a001ff34e52bf8","length":"18092"},{"name":"Sources/UmbraErrors/Tests/Tests.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Tests/Tests.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"18a9e961942e8c1f658401c8ebc31df4e519ceabc3021e25c5e8b50b059a71da","length":"1272"},{"name":"Sources/UmbraErrors/Tests/libTests.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Tests/libTests.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cbc4dde6ecf5266c542899e66acfa59bd2b006e531a01db96cd673b401fe679c","length":"13280"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraErrors/Tests:Tests","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"102"}]}]}}
{"id":{"progress":{"opaqueCount":179}},"children":[{"progress":{"opaqueCount":180}},{"namedSet":{"id":"103"}}],"progress":{}}
{"id":{"namedSet":{"id":"103"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Bridge/XPC/XPCBridge.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/XPC/XPCBridge.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"76334ac4876756b7f049a00242dcfb0485031bd8f2b1b5508558f08b9d640251","length":"416"},{"name":"Sources/Security/Adapters/Bridge/XPC/XPCBridge.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/XPC/XPCBridge.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ff65dcce140bcfe44544f4de6f51481fbf6bd98c4a22de7f6ebc7d7361e2d052","length":"16632"},{"name":"Sources/Security/Adapters/Bridge/XPC/XPCBridge.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/XPC/XPCBridge.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"1e1777741716e40175807dfa1ecbea4cfb12c130506d84c9dae72b3093107769","length":"2524"},{"name":"Sources/Security/Adapters/Bridge/XPC/libXPCBridge.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/XPC/libXPCBridge.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"9f53bc443b1659f404eb4c5187fa2a0f968eef260d8382fcdb87ecf0f69328e5","length":"35160"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/XPC:XPCBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"103"}]}]}}
{"id":{"progress":{"opaqueCount":180}},"children":[{"progress":{"opaqueCount":181}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs.swiftmodule","label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs.swiftmodule","label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-539"},"label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs_objs/SecurityConfigDTO.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Types","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","DTOs","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityProtocolsCore/Sources/DTOs/SecurityConfigDTO.swift","Sources/SecurityProtocolsCore/Sources/DTOs/SecurityResultDTO.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.117135Z","endTime":"2025-03-25T22:47:34.117135Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs.swiftmodule","label":"//Sources/SecurityProtocolsCore/Sources/DTOs:DTOs","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":181}},"children":[{"progress":{"opaqueCount":182}},{"namedSet":{"id":"104"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityProtocolsCore/Sources/DTOs/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityProtocolsCore/Sources/DTOs:DTOs failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityProtocolsCore/Sources/DTOs:DTOs) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/DTOs/DTOs.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityProtocolsCore/Sources/DTOs/SecurityResultDTO.swift:2:8: error: no such module \u0027Errors\u0027\n  1 | import UmbraCoreTypes\n  2 | import Errors\n    |        `- error: no such module \u0027Errors\u0027\n  3 | \n  4 | /// FoundationIndependent representation of a security operation result.\nSources/SecurityProtocolsCore/Sources/DTOs/SecurityResultDTO.swift:2:8: error: no such module \u0027Errors\u0027\n  1 | import UmbraCoreTypes\n  2 | import Errors\n    |        `- error: no such module \u0027Errors\u0027\n  3 | \n  4 | /// FoundationIndependent representation of a security operation result.\n"}}
{"id":{"namedSet":{"id":"104"}},"namedSetOfFiles":{"files":[{"name":"Sources/SecurityProtocolsCore/Sources/Types/Types.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Types/Types.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"108934f62a2b50cf22ace298823c4e7d71a824c0fcf98b25d6c64d5583efadc1","length":"3120"},{"name":"Sources/SecurityProtocolsCore/Sources/Types/Types.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Types/Types.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"a142d02e6beb3f7c3be2075e7361881124ae07045d29064febb43dd449038a54","length":"35372"},{"name":"Sources/SecurityProtocolsCore/Sources/Types/Types.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Types/Types.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"33f5093c9aacc3dc9a43028726448e8d8572894f929b0ec0a31da99ba9d735f4","length":"4140"},{"name":"Sources/SecurityProtocolsCore/Sources/Types/libTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Types/libTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"149f0187862a4cedfbcd7db62b54f88bd00e1387d99e229133d07e7aadd2fb9e","length":"28456"}]}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"104"}]}]}}
{"id":{"progress":{"opaqueCount":182}},"children":[{"progress":{"opaqueCount":183}},{"namedSet":{"id":"105"}}],"progress":{}}
{"id":{"namedSet":{"id":"105"}},"namedSetOfFiles":{"files":[{"name":"Sources/CoreDTOs/Sources/FileSystem/FileSystem.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/FileSystem/FileSystem.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c904eca245bad0a0f56f80c11172ad6e0de3ef26b5b43fba9123858dc2ee5537","length":"9904"},{"name":"Sources/CoreDTOs/Sources/FileSystem/FileSystem.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/FileSystem/FileSystem.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"62d67b2ec19d2b30152fff00a77dd1e7efeeb1defd3e030e7bff84983055f3d6","length":"45856"},{"name":"Sources/CoreDTOs/Sources/FileSystem/FileSystem.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/FileSystem/FileSystem.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8a0d0afdef2f991b628a108cbff08c69360bd1c68815e3aa3140ad9dab25bb90","length":"11448"},{"name":"Sources/CoreDTOs/Sources/FileSystem/libFileSystem.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/FileSystem/libFileSystem.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"4955346ba27e44348fea1fb596fe18f5e2178ecbb53f1981d45300abdf6c8c3b","length":"125376"}]}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/FileSystem:FileSystem","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"105"}]}]}}
{"id":{"progress":{"opaqueCount":183}},"children":[{"progress":{"opaqueCount":184}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-538"},"label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric_objs/AsymmetricCrypto.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Asymmetric","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/CryptoServices/Asymmetric/AsymmetricCrypto.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.046322Z","endTime":"2025-03-25T22:47:34.046322Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":184}},"children":[{"progress":{"opaqueCount":185}},{"namedSet":{"id":"106"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/CryptoServices/Asymmetric/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation/CryptoServices/Asymmetric:Asymmetric) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Asymmetric/Asymmetric.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nSources/Security/Implementation/CryptoServices/Asymmetric/AsymmetricCrypto.swift:125:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n123 |     return SecurityResultDTO(\n124 |       status: .failure,\n125 |       error: SecurityProtocolError.operationFailed(\"Decryption failed\"),\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n126 |       metadata: [\"details\": \"Decryption failed\"]\n127 |     )\n"}}
{"id":{"namedSet":{"id":"106"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Core/Protocols/Protocols.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols/Protocols.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"815b247d67199a64fc78abf8c157dc0f8d3a8afb3862d348c8aeb8153370bd85","length":"26708"},{"name":"Sources/Security/Core/Protocols/Protocols.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols/Protocols.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"06db71f81c63412dd6cecd6eae4a35ccf25faa01fd22490a6b38fd42725ef670","length":"41916"},{"name":"Sources/Security/Core/Protocols/Protocols.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols/Protocols.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"246d6ce8c267df8f55afc7cd1cdb682167e91d424e7b8837a65ba51c88b8561c","length":"26356"},{"name":"Sources/Security/Core/Protocols/libProtocols.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols/libProtocols.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"35a183821342e42d7b7535725df53bdb003d1a9fa1fdd96a13d5bb0cda5c14bf","length":"185096"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Core/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"106"}]}]}}
{"id":{"progress":{"opaqueCount":185}},"children":[{"progress":{"opaqueCount":186}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols.swiftmodule","label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols.swiftmodule","label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-541"},"label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols_objs/CryptoServiceProtocol.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Types","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Protocols","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityProtocolsCore/Sources/Protocols/CryptoServiceProtocol.swift","Sources/SecurityProtocolsCore/Sources/Protocols/CryptoServiceProtocolExtensions.swift","Sources/SecurityProtocolsCore/Sources/Protocols/KeyManagementProtocol.swift","Sources/SecurityProtocolsCore/Sources/Protocols/SecureStorageProtocol.swift","Sources/SecurityProtocolsCore/Sources/Protocols/SecurityProviderBase.swift","Sources/SecurityProtocolsCore/Sources/Protocols/SecurityProviderProtocol.swift","Sources/SecurityProtocolsCore/Sources/Protocols/XPCServiceProtocolCore.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.237007Z","endTime":"2025-03-25T22:47:34.237007Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols.swiftmodule","label":"//Sources/SecurityProtocolsCore/Sources/Protocols:Protocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":186}},"children":[{"progress":{"opaqueCount":187}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols.swiftmodule","label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityProtocolsCore/Sources/Protocols/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityProtocolsCore/Sources/Protocols:Protocols failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityProtocolsCore/Sources/Protocols:Protocols) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources/Protocols/Protocols.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityProtocolsCore/Sources/Protocols/CryptoServiceProtocol.swift:2:8: error: no such module \u0027Errors\u0027\n  1 | import UmbraCoreTypes\n  2 | import Errors\n    |        `- error: no such module \u0027Errors\u0027\n  3 | \n  4 | /// Protocol defining cryptographic operations in a FoundationIndependent manner.\nSources/SecurityProtocolsCore/Sources/Protocols/CryptoServiceProtocol.swift:2:8: error: no such module \u0027Errors\u0027\n  1 | import UmbraCoreTypes\n  2 | import Errors\n    |        `- error: no such module \u0027Errors\u0027\n  3 | \n  4 | /// Protocol defining cryptographic operations in a FoundationIndependent manner.\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols.swiftmodule","label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-542"},"label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols_objs/SecurityProviderProtocol.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreTypesInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","SecurityInterfacesProtocols","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.238936Z","endTime":"2025-03-25T22:47:34.238936Z"}}
{"id":{"targetCompleted":{"label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols.swiftmodule","label":"//Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":187}},"children":[{"progress":{"opaqueCount":188}},{"namedSet":{"id":"107"}}],"progress":{"stderr":"[620 / 669] [Sched] Compiling Swift module //Sources/Security/Adapters/Bridge/DTO:DTOAdapters ... (12 actions, 5 running)\nERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/SecurityInterfacesProtocols/BUILD.bazel:3:20: Compiling Swift module //Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/SecurityInterfacesProtocols:SecurityInterfacesProtocols) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityInterfacesProtocols/SecurityInterfacesProtocols.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:16:69: error: cannot find type \u0027BinaryData\u0027 in scope\n14 |   /// - Returns: Encrypted data\n15 |   /// - Throws: SecurityProtocolError if encryption fails\n16 |   func encrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                                                     `- error: cannot find type \u0027BinaryData\u0027 in scope\n17 | \n18 |   /// Decrypt binary data using the provider\u0027s decryption mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:16:24: error: cannot find type \u0027BinaryData\u0027 in scope\n14 |   /// - Returns: Encrypted data\n15 |   /// - Throws: SecurityProtocolError if encryption fails\n16 |   func encrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                        `- error: cannot find type \u0027BinaryData\u0027 in scope\n17 | \n18 |   /// Decrypt binary data using the provider\u0027s decryption mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:16:41: error: cannot find type \u0027BinaryData\u0027 in scope\n14 |   /// - Returns: Encrypted data\n15 |   /// - Throws: SecurityProtocolError if encryption fails\n16 |   func encrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                         `- error: cannot find type \u0027BinaryData\u0027 in scope\n17 | \n18 |   /// Decrypt binary data using the provider\u0027s decryption mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:24:69: error: cannot find type \u0027BinaryData\u0027 in scope\n22 |   /// - Returns: Decrypted data\n23 |   /// - Throws: SecurityProtocolError if decryption fails\n24 |   func decrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                                                     `- error: cannot find type \u0027BinaryData\u0027 in scope\n25 | \n26 |   /// Generate a cryptographically secure random key\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:24:24: error: cannot find type \u0027BinaryData\u0027 in scope\n22 |   /// - Returns: Decrypted data\n23 |   /// - Throws: SecurityProtocolError if decryption fails\n24 |   func decrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                        `- error: cannot find type \u0027BinaryData\u0027 in scope\n25 | \n26 |   /// Generate a cryptographically secure random key\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:24:41: error: cannot find type \u0027BinaryData\u0027 in scope\n22 |   /// - Returns: Decrypted data\n23 |   /// - Throws: SecurityProtocolError if decryption fails\n24 |   func decrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                         `- error: cannot find type \u0027BinaryData\u0027 in scope\n25 | \n26 |   /// Generate a cryptographically secure random key\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:30:49: error: cannot find type \u0027BinaryData\u0027 in scope\n28 |   /// - Returns: Generated key\n29 |   /// - Throws: SecurityProtocolError if key generation fails\n30 |   func generateKey(length: Int) async throws -\u003e BinaryData\n   |                                                 `- error: cannot find type \u0027BinaryData\u0027 in scope\n31 | \n32 |   /// Hash data using the provider\u0027s hashing mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:36:49: error: cannot find type \u0027BinaryData\u0027 in scope\n34 |   /// - Returns: Hash of the data\n35 |   /// - Throws: SecurityProtocolError if hashing fails\n36 |   func hash(_ data: BinaryData) async throws -\u003e BinaryData\n   |                                                 `- error: cannot find type \u0027BinaryData\u0027 in scope\n37 | }\n38 | \n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:36:21: error: cannot find type \u0027BinaryData\u0027 in scope\n34 |   /// - Returns: Hash of the data\n35 |   /// - Throws: SecurityProtocolError if hashing fails\n36 |   func hash(_ data: BinaryData) async throws -\u003e BinaryData\n   |                     `- error: cannot find type \u0027BinaryData\u0027 in scope\n37 | }\n38 | \nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:16:69: error: cannot find type \u0027BinaryData\u0027 in scope\n14 |   /// - Returns: Encrypted data\n15 |   /// - Throws: SecurityProtocolError if encryption fails\n16 |   func encrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                                                     `- error: cannot find type \u0027BinaryData\u0027 in scope\n17 | \n18 |   /// Decrypt binary data using the provider\u0027s decryption mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:16:24: error: cannot find type \u0027BinaryData\u0027 in scope\n14 |   /// - Returns: Encrypted data\n15 |   /// - Throws: SecurityProtocolError if encryption fails\n16 |   func encrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                        `- error: cannot find type \u0027BinaryData\u0027 in scope\n17 | \n18 |   /// Decrypt binary data using the provider\u0027s decryption mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:16:41: error: cannot find type \u0027BinaryData\u0027 in scope\n14 |   /// - Returns: Encrypted data\n15 |   /// - Throws: SecurityProtocolError if encryption fails\n16 |   func encrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                         `- error: cannot find type \u0027BinaryData\u0027 in scope\n17 | \n18 |   /// Decrypt binary data using the provider\u0027s decryption mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:24:69: error: cannot find type \u0027BinaryData\u0027 in scope\n22 |   /// - Returns: Decrypted data\n23 |   /// - Throws: SecurityProtocolError if decryption fails\n24 |   func decrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                                                     `- error: cannot find type \u0027BinaryData\u0027 in scope\n25 | \n26 |   /// Generate a cryptographically secure random key\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:24:24: error: cannot find type \u0027BinaryData\u0027 in scope\n22 |   /// - Returns: Decrypted data\n23 |   /// - Throws: SecurityProtocolError if decryption fails\n24 |   func decrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                        `- error: cannot find type \u0027BinaryData\u0027 in scope\n25 | \n26 |   /// Generate a cryptographically secure random key\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:24:41: error: cannot find type \u0027BinaryData\u0027 in scope\n22 |   /// - Returns: Decrypted data\n23 |   /// - Throws: SecurityProtocolError if decryption fails\n24 |   func decrypt(_ data: BinaryData, key: BinaryData) async throws -\u003e BinaryData\n   |                                         `- error: cannot find type \u0027BinaryData\u0027 in scope\n25 | \n26 |   /// Generate a cryptographically secure random key\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:30:49: error: cannot find type \u0027BinaryData\u0027 in scope\n28 |   /// - Returns: Generated key\n29 |   /// - Throws: SecurityProtocolError if key generation fails\n30 |   func generateKey(length: Int) async throws -\u003e BinaryData\n   |                                                 `- error: cannot find type \u0027BinaryData\u0027 in scope\n31 | \n32 |   /// Hash data using the provider\u0027s hashing mechanism\n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:36:49: error: cannot find type \u0027BinaryData\u0027 in scope\n34 |   /// - Returns: Hash of the data\n35 |   /// - Throws: SecurityProtocolError if hashing fails\n36 |   func hash(_ data: BinaryData) async throws -\u003e BinaryData\n   |                                                 `- error: cannot find type \u0027BinaryData\u0027 in scope\n37 | }\n38 | \n\nSources/SecurityInterfacesProtocols/SecurityProviderProtocol.swift:36:21: error: cannot find type \u0027BinaryData\u0027 in scope\n34 |   /// - Returns: Hash of the data\n35 |   /// - Throws: SecurityProtocolError if hashing fails\n36 |   func hash(_ data: BinaryData) async throws -\u003e BinaryData\n   |                     `- error: cannot find type \u0027BinaryData\u0027 in scope\n37 | }\n38 | \n"}}
{"id":{"namedSet":{"id":"107"}},"namedSetOfFiles":{"files":[{"name":"Sources/UmbraSecurityBridge/Sources/UmbraSecurityBridge.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/Sources/UmbraSecurityBridge.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"fe976164c9aaa6dd59b2a6fee80c9a0b5765c6bbb780901e44b1d5b23b8cb6d2","length":"1020"},{"name":"Sources/UmbraSecurityBridge/Sources/UmbraSecurityBridge.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/Sources/UmbraSecurityBridge.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2fac790ffa4e2c0c064230108fc14a99cb8d67f1a2ce4aa6d368a96ebf1c4c57","length":"18188"},{"name":"Sources/UmbraSecurityBridge/Sources/UmbraSecurityBridge.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/Sources/UmbraSecurityBridge.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"0c7db4eac9d902e6cdd616076602d6949625ebc38a75770c88377ebbb50cff03","length":"1340"},{"name":"Sources/UmbraSecurityBridge/Sources/libUmbraSecurityBridge.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge/Sources/libUmbraSecurityBridge.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6143ea0228801b2ba67d7b5761b8ac49a02debba04e1337c97eec91c6476be75","length":"14200"}]}}
{"id":{"targetCompleted":{"label":"//Sources/UmbraSecurityBridge/Sources:UmbraSecurityBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"107"}]}]}}
{"id":{"progress":{"opaqueCount":188}},"children":[{"progress":{"opaqueCount":189}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.swiftmodule","label":"//Sources/Security/Implementation/Provider:Provider","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.swiftmodule","label":"//Sources/Security/Implementation/Provider:Provider","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-547"},"label":"//Sources/Security/Implementation/Provider:Provider","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation/Provider:Provider","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider_objs/ConfigBuilder.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Provider","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/Provider/ConfigBuilder.swift","Sources/Security/Implementation/Provider/OperationsHandler.swift","Sources/Security/Implementation/Provider/SecurityProviderCore.swift","Sources/Security/Implementation/Provider/SecurityProviderImpl.swift","Sources/Security/Implementation/Provider/Utilities.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.500454Z","endTime":"2025-03-25T22:47:34.500454Z"}}
{"id":{"progress":{"opaqueCount":189}},"children":[{"progress":{"opaqueCount":190}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/Provider/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Implementation/Provider:Provider failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation/Provider:Provider) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":190}},"children":[{"progress":{"opaqueCount":191}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Security/Implementation/Provider/ConfigBuilder.swift:64:49: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n62 |    - No input data\n63 |    */\n64 |   func createConfig(options: [String: Any]?) -\u003e SecurityConfigDTO {\n   |                                                 `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n65 |     // Extract options from the dictionary or use defaults\n66 |     let algorithm\u003doptions?[\"algorithm\"] as? String ?? \"AES-GCM\"\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:42:30: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 40 | \n 41 |   /// The crypto service for cryptographic operations\n 42 |   private let cryptoService: CryptoServiceProtocol\n    |                              `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 43 | \n 44 |   /// The key manager for key operations\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:45:27: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 43 | \n 44 |   /// The key manager for key operations\n 45 |   private let keyManager: KeyManagementProtocol\n    |                           `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 46 | \n 47 |   // MARK: - Initialisation\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:53:23: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 51 |   ///   - cryptoService: The crypto service to use\n 52 |   ///   - keyManager: The key manager to use\n 53 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n    |                       `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 54 |     self.cryptoService\u003dcryptoService\n 55 |     self.keyManager\u003dkeyManager\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:53:58: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 51 |   ///   - cryptoService: The crypto service to use\n 52 |   ///   - keyManager: The key manager to use\n 53 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n    |                                                          `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 54 |     self.cryptoService\u003dcryptoService\n 55 |     self.keyManager\u003dkeyManager\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:68:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 66 |     operation: SecurityOperation,\n 67 |     config: SecurityConfigDTO\n 68 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 69 |     switch operation {\n 70 |       case .symmetricEncryption:\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:66:16: error: cannot find type \u0027SecurityOperation\u0027 in scope\n 64 |   /// - Returns: Result of the operation\n 65 |   func handleOperation(\n 66 |     operation: SecurityOperation,\n    |                `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n 67 |     config: SecurityConfigDTO\n 68 |   ) async -\u003e SecurityResultDTO {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:67:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 65 |   func handleOperation(\n 66 |     operation: SecurityOperation,\n 67 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 68 |   ) async -\u003e SecurityResultDTO {\n 69 |     switch operation {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:114:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n112 |   private func handleSymmetricEncryption(\n113 |     config: SecurityConfigDTO\n114 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n115 |     // First check if we need to retrieve a key\n116 |     let keyResult\u003dawait retrieveKeyIfNeeded(config: config)\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:113:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n111 |   /// - Returns: Result of the encryption\n112 |   private func handleSymmetricEncryption(\n113 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n114 |   ) async -\u003e SecurityResultDTO {\n115 |     // First check if we need to retrieve a key\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:144:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n142 |   private func handleSymmetricDecryption(\n143 |     config: SecurityConfigDTO\n144 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n145 |     // First check if we need to retrieve a key\n146 |     let keyResult\u003dawait retrieveKeyIfNeeded(config: config)\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:143:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n141 |   /// - Returns: Result of the decryption\n142 |   private func handleSymmetricDecryption(\n143 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n144 |   ) async -\u003e SecurityResultDTO {\n145 |     // First check if we need to retrieve a key\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:174:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n172 |   private func handleHashing(\n173 |     config: SecurityConfigDTO\n174 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n175 |     // Check if we have input data\n176 |     guard let inputData\u003dconfig.inputData else {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:173:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n171 |   /// - Returns: Result of the hashing\n172 |   private func handleHashing(\n173 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n174 |   ) async -\u003e SecurityResultDTO {\n175 |     // Check if we have input data\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:194:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n192 |   private func handleAsymmetricEncryption(\n193 |     config _: SecurityConfigDTO\n194 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n195 |     // These operations are currently not implemented\n196 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:193:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n191 |   /// - Returns: Result of the encryption\n192 |   private func handleAsymmetricEncryption(\n193 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n194 |   ) async -\u003e SecurityResultDTO {\n195 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:206:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n204 |   private func handleAsymmetricDecryption(\n205 |     config _: SecurityConfigDTO\n206 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n207 |     // These operations are currently not implemented\n208 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:205:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n203 |   /// - Returns: Result of the decryption\n204 |   private func handleAsymmetricDecryption(\n205 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n206 |   ) async -\u003e SecurityResultDTO {\n207 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:218:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n216 |   private func handleMACGeneration(\n217 |     config _: SecurityConfigDTO\n218 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n219 |     // These operations are currently not implemented\n220 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:217:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n215 |   /// - Returns: Result of the MAC generation\n216 |   private func handleMACGeneration(\n217 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n218 |   ) async -\u003e SecurityResultDTO {\n219 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:230:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n228 |   private func handleSignatureGeneration(\n229 |     config _: SecurityConfigDTO\n230 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n231 |     // These operations are currently not implemented\n232 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:229:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n227 |   /// - Returns: Result of the signature generation\n228 |   private func handleSignatureGeneration(\n229 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n230 |   ) async -\u003e SecurityResultDTO {\n231 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:242:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n240 |   private func handleSignatureVerification(\n241 |     config _: SecurityConfigDTO\n242 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n243 |     // These operations are currently not implemented\n244 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:241:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n239 |   /// - Returns: Result of the signature verification\n240 |   private func handleSignatureVerification(\n241 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n242 |   ) async -\u003e SecurityResultDTO {\n243 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:254:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n252 |   private func handleRandomGeneration(\n253 |     config _: SecurityConfigDTO\n254 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n255 |     // These operations are currently not implemented\n256 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:253:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n251 |   /// - Returns: Result of the random generation\n252 |   private func handleRandomGeneration(\n253 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n254 |   ) async -\u003e SecurityResultDTO {\n255 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:269:8: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n267 |     operation _: SecurityOperation,\n268 |     config _: SecurityConfigDTO\n269 |   ) -\u003e SecurityResultDTO {\n    |        `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n270 |     // Key management operations should be performed via the KeyManagement interface\n271 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:267:18: error: cannot find type \u0027SecurityOperation\u0027 in scope\n265 |   /// - Returns: Result of the operation\n266 |   private func handleKeyManagementOperation(\n267 |     operation _: SecurityOperation,\n    |                  `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n268 |     config _: SecurityConfigDTO\n269 |   ) -\u003e SecurityResultDTO {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:268:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n266 |   private func handleKeyManagementOperation(\n267 |     operation _: SecurityOperation,\n268 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n269 |   ) -\u003e SecurityResultDTO {\n270 |     // Key management operations should be performed via the KeyManagement interface\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:285:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n283 |   private func retrieveKeyIfNeeded(\n284 |     config: SecurityConfigDTO\n285 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n286 |     // Check if a key is already provided in the config\n287 |     if let key\u003dconfig.key {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:284:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n282 |   /// - Returns: The key if found, or an error if not found or not specified\n283 |   private func retrieveKeyIfNeeded(\n284 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n285 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n286 |     // Check if a key is already provided in the config\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:42:30: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n40 | \n41 |   /// The crypto service for cryptographic operations\n42 |   private let cryptoService: CryptoServiceProtocol\n   |                              `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n43 | \n44 |   /// The key manager for key operations\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:45:27: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n43 | \n44 |   /// The key manager for key operations\n45 |   private let keyManager: KeyManagementProtocol\n   |                           `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n46 | \n47 |   /// The operations handler for routing security operations\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:59:23: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n57 |   ///   - cryptoService: The crypto service to use\n58 |   ///   - keyManager: The key manager to use\n59 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n   |                       `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n60 |     self.cryptoService \u003d cryptoService\n61 |     self.keyManager \u003d keyManager\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:59:58: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n57 |   ///   - cryptoService: The crypto service to use\n58 |   ///   - keyManager: The key manager to use\n59 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n   |                                                          `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n60 |     self.cryptoService \u003d cryptoService\n61 |     self.keyManager \u003d keyManager\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:79:14: error: cannot find type \u0027SecurityResultDto\u0027 in scope\n77 |     operation: SecurityOperation,\n78 |     config: SecurityConfigDto\n79 |   ) async -\u003e SecurityResultDto {\n   |              `- error: cannot find type \u0027SecurityResultDto\u0027 in scope\n80 |     // Use the operations handler to route the operation\n81 |     await operationsHandler.handleOperation(operation: operation, config: config)\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:77:16: error: cannot find type \u0027SecurityOperation\u0027 in scope\n75 |   /// - Returns: Result of the operation\n76 |   func performSecureOperation(\n77 |     operation: SecurityOperation,\n   |                `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n78 |     config: SecurityConfigDto\n79 |   ) async -\u003e SecurityResultDto {\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:78:13: error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n76 |   func performSecureOperation(\n77 |     operation: SecurityOperation,\n78 |     config: SecurityConfigDto\n   |             `- error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n79 |   ) async -\u003e SecurityResultDto {\n80 |     // Use the operations handler to route the operation\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:87:55: error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n85 |   /// - Parameter options: Optional dictionary of configuration options\n86 |   /// - Returns: A properly configured SecurityConfigDto\n87 |   func createSecureConfig(options: [String: Any]?) -\u003e SecurityConfigDto {\n   |                                                       `- error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n88 |     configBuilder.createConfig(options: options)\n89 |   }\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:10:29: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n  8 | \n  9 |   /// Cryptographic service implementation\n 10 |   public let cryptoService: CryptoServiceProtocol\n    |                             `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 11 | \n 12 |   /// Key management service implementation\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:13:26: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 11 | \n 12 |   /// Key management service implementation\n 13 |   public let keyManager: KeyManagementProtocol\n    |                          `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 14 | \n 15 |   // MARK: - Initialization\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:22:20: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 20 |   ///   - keyManager: Implementation of KeyManagementProtocol\n 21 |   public init(\n 22 |     cryptoService: CryptoServiceProtocol,\n    |                    `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 23 |     keyManager: KeyManagementProtocol\n 24 |   ) {\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:23:17: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 21 |   public init(\n 22 |     cryptoService: CryptoServiceProtocol,\n 23 |     keyManager: KeyManagementProtocol\n    |                 `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 24 |   ) {\n 25 |     self.cryptoService\u003dcryptoService\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:42:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 40 |     operation: SecurityOperation,\n 41 |     config: SecurityConfigDTO\n 42 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 43 |     switch operation {\n 44 |       case .symmetricEncryption:\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:40:16: error: cannot find type \u0027SecurityOperation\u0027 in scope\n 38 | \n 39 |   public func performSecureOperation(\n 40 |     operation: SecurityOperation,\n    |                `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n 41 |     config: SecurityConfigDTO\n 42 |   ) async -\u003e SecurityResultDTO {\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:41:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 39 |   public func performSecureOperation(\n 40 |     operation: SecurityOperation,\n 41 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 42 |   ) async -\u003e SecurityResultDTO {\n 43 |     switch operation {\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:205:62: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n203 |   }\n204 | \n205 |   public func createSecureConfig(options: [String: Any]?) -\u003e SecurityConfigDTO {\n    |                                                              `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n206 |     // Parse options and create appropriate config, defaulting to AES-256 GCM\n207 |     let algorithm\u003d(options?[\"algorithm\"] as? String) ?? \"AES-GCM\"\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:6:42: error: cannot find type \u0027SecurityProviderProtocol\u0027 in scope\n  4 | \n  5 | /// Default implementation of SecurityProviderProtocol using CryptoSwiftFoundationIndependent\n  6 | public final class SecurityProviderImpl: SecurityProviderProtocol {\n    |                                          `- error: cannot find type \u0027SecurityProviderProtocol\u0027 in scope\n  7 |   // MARK: - Properties\n  8 | \nSources/Security/Implementation/Provider/ConfigBuilder.swift:64:49: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n62 |    - No input data\n63 |    */\n64 |   func createConfig(options: [String: Any]?) -\u003e SecurityConfigDTO {\n   |                                                 `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n65 |     // Extract options from the dictionary or use defaults\n66 |     let algorithm\u003doptions?[\"algorithm\"] as? String ?? \"AES-GCM\"\n\nSources/Security/Implementation/Provider/ConfigBuilder.swift:70:16: error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n68 | \n69 |     // Create a basic configuration\n70 |     var config\u003dSecurityConfigDTO(\n   |                `- error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n71 |       algorithm: algorithm,\n72 |       keySizeInBits: keySize\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:42:30: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 40 | \n 41 |   /// The crypto service for cryptographic operations\n 42 |   private let cryptoService: CryptoServiceProtocol\n    |                              `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 43 | \n 44 |   /// The key manager for key operations\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:45:27: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 43 | \n 44 |   /// The key manager for key operations\n 45 |   private let keyManager: KeyManagementProtocol\n    |                           `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 46 | \n 47 |   // MARK: - Initialisation\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:53:23: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 51 |   ///   - cryptoService: The crypto service to use\n 52 |   ///   - keyManager: The key manager to use\n 53 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n    |                       `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 54 |     self.cryptoService\u003dcryptoService\n 55 |     self.keyManager\u003dkeyManager\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:53:58: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 51 |   ///   - cryptoService: The crypto service to use\n 52 |   ///   - keyManager: The key manager to use\n 53 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n    |                                                          `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 54 |     self.cryptoService\u003dcryptoService\n 55 |     self.keyManager\u003dkeyManager\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:68:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 66 |     operation: SecurityOperation,\n 67 |     config: SecurityConfigDTO\n 68 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 69 |     switch operation {\n 70 |       case .symmetricEncryption:\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:66:16: error: cannot find type \u0027SecurityOperation\u0027 in scope\n 64 |   /// - Returns: Result of the operation\n 65 |   func handleOperation(\n 66 |     operation: SecurityOperation,\n    |                `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n 67 |     config: SecurityConfigDTO\n 68 |   ) async -\u003e SecurityResultDTO {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:67:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 65 |   func handleOperation(\n 66 |     operation: SecurityOperation,\n 67 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 68 |   ) async -\u003e SecurityResultDTO {\n 69 |     switch operation {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:114:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n112 |   private func handleSymmetricEncryption(\n113 |     config: SecurityConfigDTO\n114 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n115 |     // First check if we need to retrieve a key\n116 |     let keyResult\u003dawait retrieveKeyIfNeeded(config: config)\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:113:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n111 |   /// - Returns: Result of the encryption\n112 |   private func handleSymmetricEncryption(\n113 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n114 |   ) async -\u003e SecurityResultDTO {\n115 |     // First check if we need to retrieve a key\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:144:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n142 |   private func handleSymmetricDecryption(\n143 |     config: SecurityConfigDTO\n144 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n145 |     // First check if we need to retrieve a key\n146 |     let keyResult\u003dawait retrieveKeyIfNeeded(config: config)\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:143:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n141 |   /// - Returns: Result of the decryption\n142 |   private func handleSymmetricDecryption(\n143 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n144 |   ) async -\u003e SecurityResultDTO {\n145 |     // First check if we need to retrieve a key\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:174:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n172 |   private func handleHashing(\n173 |     config: SecurityConfigDTO\n174 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n175 |     // Check if we have input data\n176 |     guard let inputData\u003dconfig.inputData else {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:173:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n171 |   /// - Returns: Result of the hashing\n172 |   private func handleHashing(\n173 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n174 |   ) async -\u003e SecurityResultDTO {\n175 |     // Check if we have input data\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:194:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n192 |   private func handleAsymmetricEncryption(\n193 |     config _: SecurityConfigDTO\n194 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n195 |     // These operations are currently not implemented\n196 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:193:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n191 |   /// - Returns: Result of the encryption\n192 |   private func handleAsymmetricEncryption(\n193 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n194 |   ) async -\u003e SecurityResultDTO {\n195 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:206:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n204 |   private func handleAsymmetricDecryption(\n205 |     config _: SecurityConfigDTO\n206 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n207 |     // These operations are currently not implemented\n208 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:205:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n203 |   /// - Returns: Result of the decryption\n204 |   private func handleAsymmetricDecryption(\n205 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n206 |   ) async -\u003e SecurityResultDTO {\n207 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:218:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n216 |   private func handleMACGeneration(\n217 |     config _: SecurityConfigDTO\n218 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n219 |     // These operations are currently not implemented\n220 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:217:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n215 |   /// - Returns: Result of the MAC generation\n216 |   private func handleMACGeneration(\n217 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n218 |   ) async -\u003e SecurityResultDTO {\n219 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:230:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n228 |   private func handleSignatureGeneration(\n229 |     config _: SecurityConfigDTO\n230 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n231 |     // These operations are currently not implemented\n232 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:229:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n227 |   /// - Returns: Result of the signature generation\n228 |   private func handleSignatureGeneration(\n229 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n230 |   ) async -\u003e SecurityResultDTO {\n231 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:242:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n240 |   private func handleSignatureVerification(\n241 |     config _: SecurityConfigDTO\n242 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n243 |     // These operations are currently not implemented\n244 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:241:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n239 |   /// - Returns: Result of the signature verification\n240 |   private func handleSignatureVerification(\n241 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n242 |   ) async -\u003e SecurityResultDTO {\n243 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:254:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n252 |   private func handleRandomGeneration(\n253 |     config _: SecurityConfigDTO\n254 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n255 |     // These operations are currently not implemented\n256 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:253:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n251 |   /// - Returns: Result of the random generation\n252 |   private func handleRandomGeneration(\n253 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n254 |   ) async -\u003e SecurityResultDTO {\n255 |     // These operations are currently not implemented\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:269:8: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n267 |     operation _: SecurityOperation,\n268 |     config _: SecurityConfigDTO\n269 |   ) -\u003e SecurityResultDTO {\n    |        `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n270 |     // Key management operations should be performed via the KeyManagement interface\n271 |     SecurityResultDTO.failure(\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:267:18: error: cannot find type \u0027SecurityOperation\u0027 in scope\n265 |   /// - Returns: Result of the operation\n266 |   private func handleKeyManagementOperation(\n267 |     operation _: SecurityOperation,\n    |                  `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n268 |     config _: SecurityConfigDTO\n269 |   ) -\u003e SecurityResultDTO {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:268:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n266 |   private func handleKeyManagementOperation(\n267 |     operation _: SecurityOperation,\n268 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n269 |   ) -\u003e SecurityResultDTO {\n270 |     // Key management operations should be performed via the KeyManagement interface\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:285:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n283 |   private func retrieveKeyIfNeeded(\n284 |     config: SecurityConfigDTO\n285 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n286 |     // Check if a key is already provided in the config\n287 |     if let key\u003dconfig.key {\n\nSources/Security/Implementation/Provider/OperationsHandler.swift:284:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n282 |   /// - Returns: The key if found, or an error if not found or not specified\n283 |   private func retrieveKeyIfNeeded(\n284 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n285 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n286 |     // Check if a key is already provided in the config\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:42:30: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n40 | \n41 |   /// The crypto service for cryptographic operations\n42 |   private let cryptoService: CryptoServiceProtocol\n   |                              `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n43 | \n44 |   /// The key manager for key operations\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:45:27: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n43 | \n44 |   /// The key manager for key operations\n45 |   private let keyManager: KeyManagementProtocol\n   |                           `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n46 | \n47 |   /// The operations handler for routing security operations\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:59:23: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n57 |   ///   - cryptoService: The crypto service to use\n58 |   ///   - keyManager: The key manager to use\n59 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n   |                       `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n60 |     self.cryptoService \u003d cryptoService\n61 |     self.keyManager \u003d keyManager\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:59:58: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n57 |   ///   - cryptoService: The crypto service to use\n58 |   ///   - keyManager: The key manager to use\n59 |   init(cryptoService: CryptoServiceProtocol, keyManager: KeyManagementProtocol) {\n   |                                                          `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n60 |     self.cryptoService \u003d cryptoService\n61 |     self.keyManager \u003d keyManager\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:79:14: error: cannot find type \u0027SecurityResultDto\u0027 in scope\n77 |     operation: SecurityOperation,\n78 |     config: SecurityConfigDto\n79 |   ) async -\u003e SecurityResultDto {\n   |              `- error: cannot find type \u0027SecurityResultDto\u0027 in scope\n80 |     // Use the operations handler to route the operation\n81 |     await operationsHandler.handleOperation(operation: operation, config: config)\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:77:16: error: cannot find type \u0027SecurityOperation\u0027 in scope\n75 |   /// - Returns: Result of the operation\n76 |   func performSecureOperation(\n77 |     operation: SecurityOperation,\n   |                `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n78 |     config: SecurityConfigDto\n79 |   ) async -\u003e SecurityResultDto {\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:78:13: error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n76 |   func performSecureOperation(\n77 |     operation: SecurityOperation,\n78 |     config: SecurityConfigDto\n   |             `- error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n79 |   ) async -\u003e SecurityResultDto {\n80 |     // Use the operations handler to route the operation\n\nSources/Security/Implementation/Provider/SecurityProviderCore.swift:87:55: error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n85 |   /// - Parameter options: Optional dictionary of configuration options\n86 |   /// - Returns: A properly configured SecurityConfigDto\n87 |   func createSecureConfig(options: [String: Any]?) -\u003e SecurityConfigDto {\n   |                                                       `- error: cannot find type \u0027SecurityConfigDto\u0027 in scope\n88 |     configBuilder.createConfig(options: options)\n89 |   }\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:10:29: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n  8 | \n  9 |   /// Cryptographic service implementation\n 10 |   public let cryptoService: CryptoServiceProtocol\n    |                             `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 11 | \n 12 |   /// Key management service implementation\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:13:26: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 11 | \n 12 |   /// Key management service implementation\n 13 |   public let keyManager: KeyManagementProtocol\n    |                          `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 14 | \n 15 |   // MARK: - Initialization\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:22:20: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 20 |   ///   - keyManager: Implementation of KeyManagementProtocol\n 21 |   public init(\n 22 |     cryptoService: CryptoServiceProtocol,\n    |                    `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 23 |     keyManager: KeyManagementProtocol\n 24 |   ) {\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:23:17: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 21 |   public init(\n 22 |     cryptoService: CryptoServiceProtocol,\n 23 |     keyManager: KeyManagementProtocol\n    |                 `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 24 |   ) {\n 25 |     self.cryptoService\u003dcryptoService\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:42:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 40 |     operation: SecurityOperation,\n 41 |     config: SecurityConfigDTO\n 42 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n 43 |     switch operation {\n 44 |       case .symmetricEncryption:\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:40:16: error: cannot find type \u0027SecurityOperation\u0027 in scope\n 38 | \n 39 |   public func performSecureOperation(\n 40 |     operation: SecurityOperation,\n    |                `- error: cannot find type \u0027SecurityOperation\u0027 in scope\n 41 |     config: SecurityConfigDTO\n 42 |   ) async -\u003e SecurityResultDTO {\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:41:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 39 |   public func performSecureOperation(\n 40 |     operation: SecurityOperation,\n 41 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 42 |   ) async -\u003e SecurityResultDTO {\n 43 |     switch operation {\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:205:62: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n203 |   }\n204 | \n205 |   public func createSecureConfig(options: [String: Any]?) -\u003e SecurityConfigDTO {\n    |                                                              `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n206 |     // Parse options and create appropriate config, defaulting to AES-256 GCM\n207 |     let algorithm\u003d(options?[\"algorithm\"] as? String) ?? \"AES-GCM\"\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:6:42: error: cannot find type \u0027SecurityProviderProtocol\u0027 in scope\n  4 | \n  5 | /// Default implementation of SecurityProviderProtocol using CryptoSwiftFoundationIndependent\n  6 | public final class SecurityProviderImpl: SecurityProviderProtocol {\n    |                                          `- error: cannot find type \u0027SecurityProviderProtocol\u0027 in scope\n  7 |   // MARK: - Properties\n  8 | \n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:32:22: error: cannot find \u0027CryptoServiceCore\u0027 in scope\n 30 |   public convenience init() {\n 31 |     self.init(\n 32 |       cryptoService: CryptoServiceCore(),\n    |                      `- error: cannot find \u0027CryptoServiceCore\u0027 in scope\n 33 |       keyManager: KeyManager()\n 34 |     )\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:33:19: error: cannot find \u0027KeyManager\u0027 in scope\n 31 |     self.init(\n 32 |       cryptoService: CryptoServiceCore(),\n 33 |       keyManager: KeyManager()\n    |                   `- error: cannot find \u0027KeyManager\u0027 in scope\n 34 |     )\n 35 |   }\n\nSources/Security/Implementation/Provider/SecurityProviderImpl.swift:31:14: error: argument passed to call that takes no arguments\n 29 |   /// Convenience initializer with default implementations\n 30 |   public convenience init() {\n 31 |     self.init(\n    |              `- error: argument passed to call that takes no arguments\n 32 |       cryptoService: CryptoServiceCore(),\n 33 |       keyManager: KeyManager()\n"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/Provider:Provider","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.swiftmodule","label":"//Sources/Security/Implementation/Provider:Provider","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":191}},"children":[{"progress":{"opaqueCount":192}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.swiftmodule","label":"//Sources/CoreDTOs/Sources/Network:Network","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.swiftmodule","label":"//Sources/CoreDTOs/Sources/Network:Network","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-548"},"label":"//Sources/CoreDTOs/Sources/Network:Network","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/CoreDTOs/Sources/Network:Network","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network_objs/NetworkRequestDTO.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Network","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/CoreDTOs/Sources/Network/NetworkRequestDTO.swift","Sources/CoreDTOs/Sources/Network/NetworkResponseDTO.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.525636Z","endTime":"2025-03-25T22:47:34.525636Z"}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Network:Network","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.swiftmodule","label":"//Sources/CoreDTOs/Sources/Network:Network","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/CoreDTOs/Sources/Converters:Converters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.swiftmodule","label":"//Sources/CoreDTOs/Sources/Network:Network","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":192}},"children":[{"progress":{"opaqueCount":193}},{"namedSet":{"id":"108"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/CoreDTOs/Sources/Network/BUILD.bazel:3:20: Compiling Swift module //Sources/CoreDTOs/Sources/Network:Network failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/CoreDTOs/Sources/Network:Network) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Network/Network.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nSources/CoreDTOs/Sources/Network/NetworkResponseDTO.swift:200:12: error: no exact matches in call to initializer \n198 | \n199 |     // Use native Swift String initializer with byte array\n200 |     return String(bytes: bodyData, encoding: .utf8)\n    |            |- error: no exact matches in call to initializer \n    |            |- note: found candidate with type \u0027(Array\u003c_\u003e, _.Type) -\u003e String\u0027\n    |            `- note: found candidate with type \u0027([UInt8]) -\u003e String\u0027\n201 |   }\n202 | \n"}}
{"id":{"namedSet":{"id":"108"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Bridge/DTO/DTOAdapters.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/DTO/DTOAdapters.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ae841e708a2e5376b4108719d19ec06fa27597031c8550a185c976de385750fa","length":"416"},{"name":"Sources/Security/Adapters/Bridge/DTO/DTOAdapters.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/DTO/DTOAdapters.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8048573718fb20c90f3f719a17dde67c91708c7e144018a0c6ddc2a90464ec6b","length":"16632"},{"name":"Sources/Security/Adapters/Bridge/DTO/DTOAdapters.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/DTO/DTOAdapters.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c2cab983cca52891d7d1be910ba46e1bd5adb0e7aa5d0a62d55e2ca9ebcf8214","length":"1244"},{"name":"Sources/Security/Adapters/Bridge/DTO/libDTOAdapters.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/DTO/libDTOAdapters.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8b9b33dc8b6847d349cac5a78b0a215a6988e5b5d796f9656dd1a809dc2b0467","length":"12856"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/DTO:DTOAdapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"108"}]}]}}
{"id":{"progress":{"opaqueCount":193}},"children":[{"progress":{"opaqueCount":194}},{"namedSet":{"id":"109"}}],"progress":{}}
{"id":{"namedSet":{"id":"109"}},"namedSetOfFiles":{"files":[{"name":"Sources/XPCProtocolsCore/XPCProtocolsCore.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/XPCProtocolsCore.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"cb4c6857b6361411384ac8da91e2a0ee41e43120d4752e9e065a6c4dfebdd0b0","length":"420"},{"name":"Sources/XPCProtocolsCore/XPCProtocolsCore.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/XPCProtocolsCore.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"d1ff6971fa991161ead1c145587394d947581a195181d26ce8869485ef3c7cd2","length":"16828"},{"name":"Sources/XPCProtocolsCore/XPCProtocolsCore.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/XPCProtocolsCore.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"6cf685b4fde5b7dbd3a852f6ff78df6729db3401fee9917ebc5eb3a5ccbd883e","length":"668"},{"name":"Sources/XPCProtocolsCore/libXPCProtocolsCore.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/libXPCProtocolsCore.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"392f402c1c7cde5eae34d9e2eb8e13846340ae0e7ad809007e980916fb30caee","length":"8192"}]}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore:XPCProtocolsCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"109"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/CryptoTypes/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes/Types/Types.swiftmodule","label":"//Sources/CryptoTypes/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":194}},"children":[{"progress":{"opaqueCount":195}}],"progress":{"stderr":"INFO: From Compiling Swift module //Sources/Core/Services/Types:Types:\nSources/Core/Services/Types/CoreServicesTypes.swift:28:11: warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 26 | \n 27 | // Add extensions for Codable, CustomStringConvertible, etc.\n 28 | extension CoreServices.LegacyServiceState: CustomStringConvertible {\n    |           `- warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 29 |   public var description: String {\n 30 |     switch self {\n\nSources/Core/Services/Types/CoreServicesTypes.swift:28:24: warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 26 | \n 27 | // Add extensions for Codable, CustomStringConvertible, etc.\n 28 | extension CoreServices.LegacyServiceState: CustomStringConvertible {\n    |                        `- warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 29 |   public var description: String {\n 30 |     switch self {\n\nSources/Core/Services/Types/CoreServicesTypes.swift:47:11: warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 45 | }\n 46 | \n 47 | extension CoreServices.LegacyServiceState: Codable {\n    |           `- warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 48 |   private enum CodingKeys: String, CodingKey {\n 49 |     case type\n\nSources/Core/Services/Types/CoreServicesTypes.swift:47:24: warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 45 | }\n 46 | \n 47 | extension CoreServices.LegacyServiceState: Codable {\n    |                        `- warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 48 |   private enum CodingKeys: String, CodingKey {\n 49 |     case type\nSources/Core/Services/Types/CoreServicesTypes.swift:28:11: warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 26 | \n 27 | // Add extensions for Codable, CustomStringConvertible, etc.\n 28 | extension CoreServices.LegacyServiceState: CustomStringConvertible {\n    |           `- warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 29 |   public var description: String {\n 30 |     switch self {\n\nSources/Core/Services/Types/CoreServicesTypes.swift:28:24: warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 26 | \n 27 | // Add extensions for Codable, CustomStringConvertible, etc.\n 28 | extension CoreServices.LegacyServiceState: CustomStringConvertible {\n    |                        `- warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 29 |   public var description: String {\n 30 |     switch self {\n\nSources/Core/Services/Types/CoreServicesTypes.swift:47:11: warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 45 | }\n 46 | \n 47 | extension CoreServices.LegacyServiceState: Codable {\n    |           `- warning: \u0027CoreServices\u0027 is deprecated: Use CoreServicesTypes directly\n 48 |   private enum CodingKeys: String, CodingKey {\n 49 |     case type\n\nSources/Core/Services/Types/CoreServicesTypes.swift:47:24: warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 45 | }\n 46 | \n 47 | extension CoreServices.LegacyServiceState: Codable {\n    |                        `- warning: \u0027LegacyServiceState\u0027 is deprecated: Use ServiceState directly instead\n 48 |   private enum CodingKeys: String, CodingKey {\n 49 |     case type\n\nSources/Core/Services/Types/KeyStatus.swift:59:59: warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 57 |     switch self {\n 58 |       case .active:\n 59 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.active, forKey: .type)\n    |                                                           `- warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 60 |       case .compromised:\n 61 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.compromised, forKey: .type)\n\nSources/Core/Services/Types/KeyStatus.swift:61:59: warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 59 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.active, forKey: .type)\n 60 |       case .compromised:\n 61 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.compromised, forKey: .type)\n    |                                                           `- warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 62 |       case .retired:\n 63 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.retired, forKey: .type)\n\nSources/Core/Services/Types/KeyStatus.swift:63:59: warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 61 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.compromised, forKey: .type)\n 62 |       case .retired:\n 63 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.retired, forKey: .type)\n    |                                                           `- warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 64 |       case let .pendingDeletion(date):\n 65 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.pendingDeletion, forKey: .type)\n\nSources/Core/Services/Types/KeyStatus.swift:65:59: warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 63 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.retired, forKey: .type)\n 64 |       case let .pendingDeletion(date):\n 65 |         try container.encode(KeyManagementTypes.KeyStatus.StatusType.pendingDeletion, forKey: .type)\n    |                                                           `- warning: \u0027StatusType\u0027 is deprecated: The internal implementation of StatusType will be unified with KeyManagementTypes in a future version\n 66 |         try container.encode(date, forKey: .deletionDate)\n 67 |     }\n\nSources/Core/Services/Types/SecurityPolicy.swift:49:29: warning: \u0027\u003d\u003d\u0027 is deprecated: Please use the canonical KeyManagementTypes.KeyStatus instead\n47 |     lhs.requiredAuthentication \u003d\u003d rhs.requiredAuthentication \u0026\u0026\n48 |       lhs.requiredStorageLocation \u003d\u003d rhs.requiredStorageLocation \u0026\u0026\n49 |       lhs.requiredKeyStatus \u003d\u003d rhs.requiredKeyStatus\n   |                             `- warning: \u0027\u003d\u003d\u0027 is deprecated: Please use the canonical KeyManagementTypes.KeyStatus instead\n50 |   }\n51 | }\nINFO: From Compiling Swift module //Sources/Security/Adapters/Core/Adapters:Adapters:\n"}}
{"id":{"progress":{"opaqueCount":195}},"children":[{"progress":{"opaqueCount":196}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"Sources/Security/Adapters/Core/Adapters/AnyCryptoService.swift:12:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n10 |   // MARK: - Private Properties\n11 |   \n12 |   private let dto: CryptoServiceDTO\n   |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n13 | \n14 |   // MARK: - Initialization\n\nSources/Security/Adapters/Core/Adapters/AnyCryptoService.swift:18:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n16 |   /// Initializes a new instance with a DTO\n17 |   /// - Parameter dto: The data transfer object containing crypto operations\n18 |   public init(dto: CryptoServiceDTO) {\n   |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n19 |     self.dto \u003d dto\n20 |   }\n\nSources/Security/Adapters/Core/Adapters/CryptoServiceTypeAdapter.swift:85:15: warning: stored property \u0027transformations\u0027 of \u0027Sendable\u0027-conforming generic struct \u0027CryptoServiceTypeAdapter\u0027 has non-sendable type \u0027ServiceTransformations\u0027; this is an error in the Swift 6 language mode\n83 |   // MARK: - Private Properties\n84 |   \n85 |   private var transformations \u003d ServiceTransformations()\n   |               `- warning: stored property \u0027transformations\u0027 of \u0027Sendable\u0027-conforming generic struct \u0027CryptoServiceTypeAdapter\u0027 has non-sendable type \u0027ServiceTransformations\u0027; this is an error in the Swift 6 language mode\n86 | }\n87 | \n88 | /// Contains transformations that can be applied to data passing through the adapter\n89 | private struct ServiceTransformations {\n   |                `- note: consider making struct \u0027ServiceTransformations\u0027 conform to the \u0027Sendable\u0027 protocol\n90 |   /// Optional transformation for input data\n91 |   var transformInputData: ((SecureBytes) -\u003e SecureBytes)?\nSources/Security/Adapters/Core/Adapters/AnyCryptoService.swift:12:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n10 |   // MARK: - Private Properties\n11 |   \n12 |   private let dto: CryptoServiceDTO\n   |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n13 | \n14 |   // MARK: - Initialization\n\nSources/Security/Adapters/Core/Adapters/AnyCryptoService.swift:18:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n16 |   /// Initializes a new instance with a DTO\n17 |   /// - Parameter dto: The data transfer object containing crypto operations\n18 |   public init(dto: CryptoServiceDTO) {\n   |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n19 |     self.dto \u003d dto\n20 |   }\n\nSources/Security/Adapters/Core/Adapters/CryptoServiceTypeAdapter.swift:85:15: warning: stored property \u0027transformations\u0027 of \u0027Sendable\u0027-conforming generic struct \u0027CryptoServiceTypeAdapter\u0027 has non-sendable type \u0027ServiceTransformations\u0027; this is an error in the Swift 6 language mode\n83 |   // MARK: - Private Properties\n84 |   \n85 |   private var transformations \u003d ServiceTransformations()\n   |               `- warning: stored property \u0027transformations\u0027 of \u0027Sendable\u0027-conforming generic struct \u0027CryptoServiceTypeAdapter\u0027 has non-sendable type \u0027ServiceTransformations\u0027; this is an error in the Swift 6 language mode\n86 | }\n87 | \n88 | /// Contains transformations that can be applied to data passing through the adapter\n89 | private struct ServiceTransformations {\n   |                `- note: consider making struct \u0027ServiceTransformations\u0027 conform to the \u0027Sendable\u0027 protocol\n90 |   /// Optional transformation for input data\n91 |   var transformInputData: ((SecureBytes) -\u003e SecureBytes)?\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-554"},"label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation/CryptoServices/Hashing:Hashing","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing_objs/HashingService.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Hashing","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/CryptoServices/Hashing/HashingService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.731722Z","endTime":"2025-03-25T22:47:34.731722Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Hashing:Hashing","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":196}},"children":[{"progress":{"opaqueCount":197}},{"namedSet":{"id":"110"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/CryptoServices/Hashing/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Implementation/CryptoServices/Hashing:Hashing failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation/CryptoServices/Hashing:Hashing) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Hashing/Hashing.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nSources/Security/Implementation/CryptoServices/Hashing/HashingService.swift:82:40: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n 80 |         return SecurityResultDTO(\n 81 |           status: .failure,\n 82 |           error: SecurityProtocolError.operationFailed(\"Hash algorithm not supported: \\(algorithm)\"),\n    |                                        `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n 83 |           metadata: [\"details\": \"The specified hash algorithm is not currently implemented\"]\n 84 |         )\n\nSources/Security/Implementation/CryptoServices/Hashing/HashingService.swift:89:38: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n 87 |       return SecurityResultDTO(\n 88 |         status: .failure,\n 89 |         error: SecurityProtocolError.operationFailed(\"Hashing operation failed: \\(error.localizedDescription)\"),\n    |                                      `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n 90 |         metadata: [\"details\": \"Error during cryptographic hashing: \\(error)\"]\n 91 |       )\n"}}
{"id":{"namedSet":{"id":"110"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Core/Adapters/Adapters.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Adapters/Adapters.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"238cabe991b534de575d5903177f92558a498e5e7d82e882a8d674489a1e8cd6","length":"5200"},{"name":"Sources/Security/Adapters/Core/Adapters/Adapters.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Adapters/Adapters.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"062caf350b64794d7b895bb992a35b4cc30ea087b41a82b13efeb33ab5709ad9","length":"31788"},{"name":"Sources/Security/Adapters/Core/Adapters/Adapters.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Adapters/Adapters.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"8dee932bc7cc6ae9137c52457d284fa78d66959e702986482610f05770d43b9c","length":"5808"},{"name":"Sources/Security/Adapters/Core/Adapters/libAdapters.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Adapters/libAdapters.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"2898d7d8c9813dce460e22d77aa0854e9d94e2b1a2d1ababb9ab2e3235e792d6","length":"101104"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Core/Adapters:Adapters","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"110"}]}]}}
{"id":{"progress":{"opaqueCount":197}},"children":[{"progress":{"opaqueCount":198}},{"namedSet":{"id":"111"}}],"progress":{}}
{"id":{"namedSet":{"id":"111"}},"namedSetOfFiles":{"files":[{"name":"Sources/Core/Services/Types/Types.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Types/Types.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"ed1304efa66b2b00675ad5dc873662faf5c22eb1bf4bc920cf6b2871fae2fc9d","length":"21096"},{"name":"Sources/Core/Services/Types/Types.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Types/Types.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"af2453d6672e836fc55c610d24edb1a800c56588082877532d5bf324c946df4d","length":"128044"},{"name":"Sources/Core/Services/Types/Types.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Types/Types.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"19d0128e0129140d6e123caee2cf74245a89b9f2791b5a9c73529e66cbd570a0","length":"29852"},{"name":"Sources/Core/Services/Types/libTypes.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Types/libTypes.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"608808e69f221a9030cadc6b490f19fbe61d7ce3bbe8612d21de778f6d2bc005","length":"463088"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Core/Services/Types:CoreServicesTypesNoFoundation","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"111"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Core/Services/Types:CoreServicesTypes","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"111"}]}]}}
{"id":{"targetCompleted":{"label":"//Sources/Core/Services/Types:Types","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"111"}]}]}}
{"id":{"progress":{"opaqueCount":198}},"children":[{"progress":{"opaqueCount":199}},{"namedSet":{"id":"112"}}],"progress":{}}
{"id":{"namedSet":{"id":"112"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Implementation/Utils/Utils.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Utils/Utils.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"46ef62045c495003ebd16b2543ad1e9c65e26ab490b3e7e33cf75d3ed08afb0c","length":"7024"},{"name":"Sources/Security/Implementation/Utils/Utils.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Utils/Utils.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"64d6db3d23ef5de2d2120a0fb6295080e49c6770a98060c28bbce8539e2188e7","length":"28220"},{"name":"Sources/Security/Implementation/Utils/Utils.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Utils/Utils.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"00ba406f6977074a17b2613b0e586484415226ae35aecd0ab1634da5c23ae1f3","length":"7676"},{"name":"Sources/Security/Implementation/Utils/libUtils.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Utils/libUtils.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b7b631cb62fa2328c9875143c5b7841b2a603bfd4ca497fd314e20e585139d7c","length":"66032"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/Utils:Utils","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"112"}]}]}}
{"id":{"progress":{"opaqueCount":199}},"children":[{"progress":{"opaqueCount":200}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices:CryptoServices","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices:CryptoServices","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-558"},"label":"//Sources/Security/Implementation/CryptoServices:CryptoServices","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation/CryptoServices:CryptoServices","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices_objs/AsymmetricCrypto.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","CryptoServices","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift","Sources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift","Sources/Security/Implementation/CryptoServices/CryptoWrapper.swift","Sources/Security/Implementation/CryptoServices/HashingService.swift","Sources/Security/Implementation/CryptoServices/KeyManagementService.swift","Sources/Security/Implementation/CryptoServices/SymmetricCrypto.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.908844Z","endTime":"2025-03-25T22:47:34.908844Z"}}
{"id":{"progress":{"opaqueCount":200}},"children":[{"progress":{"opaqueCount":201}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/CryptoServices/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Implementation/CryptoServices:CryptoServices failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation/CryptoServices:CryptoServices) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":201}},"children":[{"progress":{"opaqueCount":202}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:53:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 51 |     publicKey: SecureBytes,\n 52 |     config _: SecurityConfigDTO\n 53 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 54 |     // Input validation\n 55 |     guard !data.isEmpty, !publicKey.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:52:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 50 |     data: SecureBytes,\n 51 |     publicKey: SecureBytes,\n 52 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 53 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n 54 |     // Input validation\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:108:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n106 |     privateKey: SecureBytes,\n107 |     config _: SecurityConfigDTO\n108 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |     // Input validation\n110 |     guard !data.isEmpty, !privateKey.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:107:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n105 |     data: SecureBytes,\n106 |     privateKey: SecureBytes,\n107 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n108 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n109 |     // Input validation\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:19:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n 17 |   \n 18 |   /// The DTO containing function references for crypto operations\n 19 |   private let dto: CryptoServiceDTO\n    |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n    |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n 20 |   \n 21 |   /// Initialises a new crypto service adapter\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:23:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n 21 |   /// Initialises a new crypto service adapter\n 22 |   /// - Parameter dto: The data transfer object with function references\n 23 |   public init(dto: CryptoServiceDTO) {\n    |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n    |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n 24 |     self.dto \u003d dto\n 25 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:37:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 35 |     data: SecureBytes,\n 36 |     using key: SecureBytes\n 37 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 38 |     await dto.encrypt(data, key)\n 39 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:49:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 47 |     data: SecureBytes,\n 48 |     using key: SecureBytes\n 49 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 50 |     await dto.decrypt(data, key)\n 51 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:58:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 56 |   public func hash(\n 57 |     data: SecureBytes\n 58 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 59 |     await dto.hash(data)\n 60 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:70:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 68 |     data: SecureBytes,\n 69 |     expectedHash: SecureBytes\n 70 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 71 |     await dto.verifyHash(data, expectedHash)\n 72 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:78:70: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 76 |   /// Generates a cryptographically secure key\n 77 |   /// - Returns: The generated key or an error\n 78 |   public func generateKey() async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 79 |     // Default implementation - placeholder \n 80 |     let bytes \u003d [UInt8](repeating: 0, count: 32)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:89:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 87 |   public func generateRandomData(\n 88 |     ofLength length: Int\n 89 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 90 |     // Default implementation - placeholder\n 91 |     let bytes \u003d [UInt8](repeating: 0, count: length)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:105:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n103 |     using key: SecureBytes,\n104 |     with config: SecurityConfigDTO\n105 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n106 |     // Use the basic encrypt method as a fallback\n107 |     await encrypt(data: data, using: key)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:120:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n118 |     using key: SecureBytes,\n119 |     with config: SecurityConfigDTO\n120 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n121 |     // Use the basic decrypt method as a fallback\n122 |     await decrypt(data: data, using: key)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:135:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n133 |     using publicKey: SecureBytes,\n134 |     with config: SecurityConfigDTO\n135 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n136 |     // Use the basic encrypt method as a fallback\n137 |     await encrypt(data: data, using: publicKey)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:150:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n148 |     using privateKey: SecureBytes,\n149 |     with config: SecurityConfigDTO\n150 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n151 |     // Use the basic decrypt method as a fallback\n152 |     await decrypt(data: data, using: privateKey)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:163:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n161 |     data: SecureBytes,\n162 |     with config: SecurityConfigDTO\n163 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n164 |     // Use the basic hash method as a fallback\n165 |     await hash(data: data)\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:39:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 37 |   public func hash(\n 38 |     data: SecureBytes\n 39 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 40 |     // Use SHA-256 through CryptoWrapper\n 41 |     let hashedData\u003dCryptoWrapper.sha256(data)\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:53:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 51 |     data: SecureBytes,\n 52 |     against hash: SecureBytes\n 53 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 54 |     // Calculate hash of the provided data\n 55 |     let calculatedHash\u003dCryptoWrapper.sha256(data)\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:80:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 78 |     data: SecureBytes,\n 79 |     config _: SecurityConfigDTO\n 80 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 81 |     // Currently we only support SHA-256, but this function allows for future algorithm selection\n 82 |     // via the config parameter\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:79:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 77 |   public func hash(\n 78 |     data: SecureBytes,\n 79 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 80 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n 81 |     // Currently we only support SHA-256, but this function allows for future algorithm selection\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:101:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 99 |     for data: SecureBytes,\n100 |     using key: SecureBytes\n101 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n102 |     // Input validation\n103 |     guard !data.isEmpty, !key.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:122:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n120 |     for data: SecureBytes,\n121 |     using key: SecureBytes\n122 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n123 |     // Calculate a MAC for the data with the provided key\n124 |     let calculatedMAC\u003dCryptoWrapper.hmacSHA256(data: data, key: key)\n\nSources/Security/Implementation/CryptoServices/KeyManagementService.swift:38:70: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 36 |   /// Generates a cryptographic key suitable for encryption/decryption operations.\n 37 |   /// - Returns: A new cryptographic key as `SecureBytes` or an error.\n 38 |   public func generateKey() async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 39 |     // Generate a random 256-bit (32-byte) key\n 40 |     let key\u003dCryptoWrapper.generateRandomKeySecure()\n\nSources/Security/Implementation/CryptoServices/KeyManagementService.swift:49:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 47 |   public func generateRandomData(\n 48 |     length: Int\n 49 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 50 |     // Input validation\n 51 |     guard length \u003e 0 else {\n\nSources/Security/Implementation/CryptoServices/KeyManagementService.swift:84:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 82 |     iterations: Int\u003d10000,\n 83 |     keyLength: Int\u003d32\n 84 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 85 |     // Input validation\n 86 |     guard !password.isEmpty, !salt.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:48:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 46 |     data: SecureBytes,\n 47 |     using key: SecureBytes\n 48 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 49 |     do {\n 50 |       // Generate a random IV\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:78:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 76 |     data: SecureBytes,\n 77 |     using key: SecureBytes\n 78 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 79 |     do {\n 80 |       // Ensure data is long enough to contain the IV\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:111:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |     key: SecureBytes,\n110 |     config: SecurityConfigDTO\n111 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n112 |     do {\n113 |       // Use IV from config or generate a random one\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:110:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n108 |     data: SecureBytes,\n109 |     key: SecureBytes,\n110 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n111 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n112 |     do {\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:142:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n140 |     key: SecureBytes,\n141 |     config: SecurityConfigDTO\n142 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n143 |     do {\n144 |       let iv: SecureBytes\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:141:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n139 |     data: SecureBytes,\n140 |     key: SecureBytes,\n141 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n142 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n143 |     do {\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:53:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 51 |     publicKey: SecureBytes,\n 52 |     config _: SecurityConfigDTO\n 53 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 54 |     // Input validation\n 55 |     guard !data.isEmpty, !publicKey.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:52:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 50 |     data: SecureBytes,\n 51 |     publicKey: SecureBytes,\n 52 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 53 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n 54 |     // Input validation\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:108:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n106 |     privateKey: SecureBytes,\n107 |     config _: SecurityConfigDTO\n108 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |     // Input validation\n110 |     guard !data.isEmpty, !privateKey.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:107:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n105 |     data: SecureBytes,\n106 |     privateKey: SecureBytes,\n107 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n108 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n109 |     // Input validation\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:121:35: error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n119 |     do {\n120 |       // Extract key length (first 4 bytes)\n121 |       let keyLengthBytes\u003dtry data.slice(from: 0, length: 4)\n    |                                   `- error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n122 |       let keyLength\u003dkeyLengthBytes.withUnsafeBytes {\n123 |         $0.load(as: UInt32.self).bigEndian\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:134:33: error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n132 | \n133 |       // Extract encrypted key\n134 |       let encryptedKey\u003dtry data.slice(from: 4, length: Int(keyLength))\n    |                                 `- error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n135 | \n136 |       // Extract IV (12 bytes after the encrypted key)\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:138:23: error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n136 |       // Extract IV (12 bytes after the encrypted key)\n137 |       let ivOffset\u003d4 + Int(keyLength)\n138 |       let iv\u003dtry data.slice(from: ivOffset, length: 12)\n    |                       `- error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n139 | \n140 |       // Extract encrypted data (everything after the IV)\n\nSources/Security/Implementation/CryptoServices/AsymmetricCrypto.swift:143:34: error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n141 |       let encryptedDataOffset\u003divOffset + 12\n142 |       let encryptedDataLength\u003ddata.count - encryptedDataOffset\n143 |       let encryptedData\u003dtry data.slice(from: encryptedDataOffset, length: encryptedDataLength)\n    |                                  `- error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n144 | \n145 |       // Decrypt the symmetric key with the private key\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:19:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n 17 |   \n 18 |   /// The DTO containing function references for crypto operations\n 19 |   private let dto: CryptoServiceDTO\n    |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n    |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n 20 |   \n 21 |   /// Initialises a new crypto service adapter\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:23:20: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n 21 |   /// Initialises a new crypto service adapter\n 22 |   /// - Parameter dto: The data transfer object with function references\n 23 |   public init(dto: CryptoServiceDTO) {\n    |                    |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n    |                    `- note: use \u0027CryptoServiceDto\u0027 instead\n 24 |     self.dto \u003d dto\n 25 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:37:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 35 |     data: SecureBytes,\n 36 |     using key: SecureBytes\n 37 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 38 |     await dto.encrypt(data, key)\n 39 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:49:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 47 |     data: SecureBytes,\n 48 |     using key: SecureBytes\n 49 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 50 |     await dto.decrypt(data, key)\n 51 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:58:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 56 |   public func hash(\n 57 |     data: SecureBytes\n 58 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 59 |     await dto.hash(data)\n 60 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:70:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 68 |     data: SecureBytes,\n 69 |     expectedHash: SecureBytes\n 70 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 71 |     await dto.verifyHash(data, expectedHash)\n 72 |   }\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:78:70: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 76 |   /// Generates a cryptographically secure key\n 77 |   /// - Returns: The generated key or an error\n 78 |   public func generateKey() async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 79 |     // Default implementation - placeholder \n 80 |     let bytes \u003d [UInt8](repeating: 0, count: 32)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:89:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 87 |   public func generateRandomData(\n 88 |     ofLength length: Int\n 89 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 90 |     // Default implementation - placeholder\n 91 |     let bytes \u003d [UInt8](repeating: 0, count: length)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:105:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n103 |     using key: SecureBytes,\n104 |     with config: SecurityConfigDTO\n105 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n106 |     // Use the basic encrypt method as a fallback\n107 |     await encrypt(data: data, using: key)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:120:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n118 |     using key: SecureBytes,\n119 |     with config: SecurityConfigDTO\n120 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n121 |     // Use the basic decrypt method as a fallback\n122 |     await decrypt(data: data, using: key)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:135:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n133 |     using publicKey: SecureBytes,\n134 |     with config: SecurityConfigDTO\n135 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n136 |     // Use the basic encrypt method as a fallback\n137 |     await encrypt(data: data, using: publicKey)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:150:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n148 |     using privateKey: SecureBytes,\n149 |     with config: SecurityConfigDTO\n150 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n151 |     // Use the basic decrypt method as a fallback\n152 |     await decrypt(data: data, using: privateKey)\n\nSources/Security/Implementation/CryptoServices/CryptoServiceAdapter.swift:163:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n161 |     data: SecureBytes,\n162 |     with config: SecurityConfigDTO\n163 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n164 |     // Use the basic hash method as a fallback\n165 |     await hash(data: data)\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:79:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 77 |     // Validate inputs\n 78 |     guard key.count \u003d\u003d 32 else {\n 79 |       throw UmbraErrors.Security.Protocols.invalidInput(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 80 |         reason: \"Key must be 32 bytes for AES-256\"\n 81 |       )\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:85:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 83 | \n 84 |     guard iv.count \u003d\u003d 12 else {\n 85 |       throw UmbraErrors.Security.Protocols.invalidInput(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n 86 |         reason: \"IV must be 12 bytes for GCM mode\"\n 87 |       )\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:95:46: error: no exact matches in call to initializer \n 93 |     // First, create a deterministic \"ciphertext\" using simple XOR (NOT secure!)\n 94 |     var encryptedBytes\u003d[UInt8](repeating: 0, count: data.count)\n 95 |     let keyBytes\u003dArray(key.withUnsafeBytes { Data($0) })\n    |                                              `- error: no exact matches in call to initializer \n 96 | \n 97 |     for i in 0..\u003cdata.count {\n\nFoundation.Data:16:23: note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(capacity:)\u0027)\n14 |     @inlinable public init\u003cSourceType\u003e(buffer: UnsafeMutableBufferPointer\u003cSourceType\u003e)\n15 |     @inlinable public init(repeating repeatedValue: UInt8, count: Int)\n16 |     @inlinable public init(capacity: Int)\n   |                       `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(capacity:)\u0027)\n17 |     @inlinable public init(count: Int)\n   |                       `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(count:)\u0027)\n18 |     @inlinable public init()\n19 |     @inlinable public init(bytesNoCopy bytes: UnsafeMutableRawPointer, count: Int, deallocator: Data.Deallocator)\n\nFoundation.Data:3:12: note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(referencing:)\u0027)\n1 | @available(macOS 10.10, iOS 8.0, watchOS 2.0, tvOS 9.0, *)\n2 | extension Data {\n3 |     public init(referencing reference: __shared NSData)\n  |            `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(referencing:)\u0027)\n4 | }\n\nFoundation.Data:3:12: note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(from:)\u0027)\n1 | @available(macOS 10.10, iOS 8.0, watchOS 2.0, tvOS 9.0, *)\n2 | extension Data : Codable {\n3 |     public init(from decoder: any Decoder) throws\n  |            `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(from:)\u0027)\n4 |     public func encode(to encoder: any Encoder) throws\n5 | }\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:95:28: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n 93 |     // First, create a deterministic \"ciphertext\" using simple XOR (NOT secure!)\n 94 |     var encryptedBytes\u003d[UInt8](repeating: 0, count: data.count)\n 95 |     let keyBytes\u003dArray(key.withUnsafeBytes { Data($0) })\n    |                            `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n 96 | \n 97 |     for i in 0..\u003cdata.count {\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:109:25: error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n107 | \n108 |     // Take first 16 bytes of the HMAC as the authentication tag\n109 |     let tag\u003dtry tagData.slice(from: 0, length: 16)\n    |                         `- error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n110 | \n111 |     // Combine ciphertext and authentication tag\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:129:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n127 |     // Validate inputs\n128 |     guard key.count \u003d\u003d 32 else {\n129 |       throw UmbraErrors.Security.Protocols.invalidInput(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n130 |         reason: \"Key must be 32 bytes for AES-256\"\n131 |       )\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:135:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n133 | \n134 |     guard iv.count \u003d\u003d 12 else {\n135 |       throw UmbraErrors.Security.Protocols.invalidInput(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n136 |         reason: \"IV must be 12 bytes for GCM mode\"\n137 |       )\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:141:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n139 | \n140 |     guard data.count \u003e\u003d 16 else {\n141 |       throw UmbraErrors.Security.Protocols.invalidInput(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n142 |         reason: \"Data too short, must include authentication tag\"\n143 |       )\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:148:29: error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n146 |     // Extract ciphertext and authentication tag\n147 |     let tagOffset\u003ddata.count - 16\n148 |     let ciphertext\u003dtry data.slice(from: 0, length: tagOffset)\n    |                             `- error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n149 |     let providedTag\u003dtry data.slice(from: tagOffset, length: 16)\n150 | \n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:149:30: error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n147 |     let tagOffset\u003ddata.count - 16\n148 |     let ciphertext\u003dtry data.slice(from: 0, length: tagOffset)\n149 |     let providedTag\u003dtry data.slice(from: tagOffset, length: 16)\n    |                              `- error: value of type \u0027SecureBytes\u0027 has no member \u0027slice\u0027\n150 | \n151 |     // Verify authentication tag\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:159:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n157 | \n158 |     guard expectedTag.secureCompare(with: providedTag) else {\n159 |       throw UmbraErrors.Security.Protocols.invalidFormat(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n160 |         reason: \"Authentication tag verification failed\"\n161 |       )\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:166:46: error: no exact matches in call to initializer \n164 |     // For the MVP, simulate AES-GCM decryption with XOR (NOT secure!)\n165 |     var decryptedBytes\u003d[UInt8](repeating: 0, count: ciphertext.count)\n166 |     let keyBytes\u003dArray(key.withUnsafeBytes { Data($0) })\n    |                                              `- error: no exact matches in call to initializer \n167 | \n168 |     for i in 0..\u003cciphertext.count {\n\nFoundation.Data:16:23: note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(capacity:)\u0027)\n14 |     @inlinable public init\u003cSourceType\u003e(buffer: UnsafeMutableBufferPointer\u003cSourceType\u003e)\n15 |     @inlinable public init(repeating repeatedValue: UInt8, count: Int)\n16 |     @inlinable public init(capacity: Int)\n   |                       `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(capacity:)\u0027)\n17 |     @inlinable public init(count: Int)\n   |                       `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(count:)\u0027)\n18 |     @inlinable public init()\n19 |     @inlinable public init(bytesNoCopy bytes: UnsafeMutableRawPointer, count: Int, deallocator: Data.Deallocator)\n\nFoundation.Data:3:12: note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(referencing:)\u0027)\n1 | @available(macOS 10.10, iOS 8.0, watchOS 2.0, tvOS 9.0, *)\n2 | extension Data {\n3 |     public init(referencing reference: __shared NSData)\n  |            `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(referencing:)\u0027)\n4 | }\n\nFoundation.Data:3:12: note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(from:)\u0027)\n1 | @available(macOS 10.10, iOS 8.0, watchOS 2.0, tvOS 9.0, *)\n2 | extension Data : Codable {\n3 |     public init(from decoder: any Decoder) throws\n  |            `- note: incorrect labels for candidate (have: \u0027(_:)\u0027, expected: \u0027(from:)\u0027)\n4 |     public func encode(to encoder: any Encoder) throws\n5 | }\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:166:28: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n164 |     // For the MVP, simulate AES-GCM decryption with XOR (NOT secure!)\n165 |     var decryptedBytes\u003d[UInt8](repeating: 0, count: ciphertext.count)\n166 |     let keyBytes\u003dArray(key.withUnsafeBytes { Data($0) })\n    |                            `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n167 | \n168 |     for i in 0..\u003cciphertext.count {\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:186:10: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n184 | \n185 |     // Compute SHA-256 hash\n186 |     data.withUnsafeBytes { dataPtr in\n    |          `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n187 |       let dataCount\u003dCC_LONG(data.count)\n188 |       _\u003dCC_SHA256(dataPtr.baseAddress, dataCount, \u0026hashBytes)\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:206:9: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n204 | \n205 |     // Compute HMAC-SHA256\n206 |     key.withUnsafeBytes { keyPtr in\n    |         `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n207 |       data.withUnsafeBytes { dataPtr in\n208 |         CCHmac(\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:207:12: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n205 |     // Compute HMAC-SHA256\n206 |     key.withUnsafeBytes { keyPtr in\n207 |       data.withUnsafeBytes { dataPtr in\n    |            `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n208 |         CCHmac(\n209 |           kCCHmacAlgSHA256,\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:240:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n238 |     // Validate inputs\n239 |     guard !password.isEmpty, !salt.isEmpty, iterations \u003e 0, keyLength \u003e 0 else {\n240 |       throw UmbraErrors.Security.Protocols.invalidInput(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n241 |         reason: \"Invalid input for key derivation\"\n242 |       )\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:249:25: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n247 | \n248 |     // Derive key using PBKDF2\n249 |     let status\u003dpassword.withUnsafeBytes { passwordBuffer -\u003e Int32 in\n    |                         `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n250 |       guard let passwordPtr\u003dpasswordBuffer.baseAddress else {\n251 |         return Int32(kCCParamError)\n\nSources/Security/Implementation/CryptoServices/CryptoWrapper.swift:276:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n274 |       return SecureBytes(bytes: derivedKeyBytes)\n275 |     } else {\n276 |       throw UmbraErrors.Security.Protocols.internalError(\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n277 |         \"Key derivation failed with code: \\(status)\"\n278 |       )\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:39:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 37 |   public func hash(\n 38 |     data: SecureBytes\n 39 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 40 |     // Use SHA-256 through CryptoWrapper\n 41 |     let hashedData\u003dCryptoWrapper.sha256(data)\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:53:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 51 |     data: SecureBytes,\n 52 |     against hash: SecureBytes\n 53 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 54 |     // Calculate hash of the provided data\n 55 |     let calculatedHash\u003dCryptoWrapper.sha256(data)\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:80:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 78 |     data: SecureBytes,\n 79 |     config _: SecurityConfigDTO\n 80 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 81 |     // Currently we only support SHA-256, but this function allows for future algorithm selection\n 82 |     // via the config parameter\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:79:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 77 |   public func hash(\n 78 |     data: SecureBytes,\n 79 |     config _: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n 80 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n 81 |     // Currently we only support SHA-256, but this function allows for future algorithm selection\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:101:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 99 |     for data: SecureBytes,\n100 |     using key: SecureBytes\n101 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n102 |     // Input validation\n103 |     guard !data.isEmpty, !key.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/HashingService.swift:122:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n120 |     for data: SecureBytes,\n121 |     using key: SecureBytes\n122 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n123 |     // Calculate a MAC for the data with the provided key\n124 |     let calculatedMAC\u003dCryptoWrapper.hmacSHA256(data: data, key: key)\n\nSources/Security/Implementation/CryptoServices/KeyManagementService.swift:38:70: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 36 |   /// Generates a cryptographic key suitable for encryption/decryption operations.\n 37 |   /// - Returns: A new cryptographic key as `SecureBytes` or an error.\n 38 |   public func generateKey() async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 39 |     // Generate a random 256-bit (32-byte) key\n 40 |     let key\u003dCryptoWrapper.generateRandomKeySecure()\n\nSources/Security/Implementation/CryptoServices/KeyManagementService.swift:49:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 47 |   public func generateRandomData(\n 48 |     length: Int\n 49 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 50 |     // Input validation\n 51 |     guard length \u003e 0 else {\n\nSources/Security/Implementation/CryptoServices/KeyManagementService.swift:84:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 82 |     iterations: Int\u003d10000,\n 83 |     keyLength: Int\u003d32\n 84 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 85 |     // Input validation\n 86 |     guard !password.isEmpty, !salt.isEmpty else {\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:48:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 46 |     data: SecureBytes,\n 47 |     using key: SecureBytes\n 48 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 49 |     do {\n 50 |       // Generate a random IV\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:78:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 76 |     data: SecureBytes,\n 77 |     using key: SecureBytes\n 78 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 79 |     do {\n 80 |       // Ensure data is long enough to contain the IV\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:111:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |     key: SecureBytes,\n110 |     config: SecurityConfigDTO\n111 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n112 |     do {\n113 |       // Use IV from config or generate a random one\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:110:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n108 |     data: SecureBytes,\n109 |     key: SecureBytes,\n110 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n111 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n112 |     do {\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:142:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n140 |     key: SecureBytes,\n141 |     config: SecurityConfigDTO\n142 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n143 |     do {\n144 |       let iv: SecureBytes\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:141:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n139 |     data: SecureBytes,\n140 |     key: SecureBytes,\n141 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n142 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n143 |     do {\n\nSources/Security/Implementation/CryptoServices/SymmetricCrypto.swift:166:7: warning: \u0027catch\u0027 block is unreachable because no errors are thrown in \u0027do\u0027 block\n164 | \n165 |       return .success(decryptedData)\n166 |     } catch {\n    |       `- warning: \u0027catch\u0027 block is unreachable because no errors are thrown in \u0027do\u0027 block\n167 |       return .failure(.decryptionFailed(\n168 |         reason: \"Symmetric decryption with config failed: \\(error.localizedDescription)\"\n"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices:CryptoServices","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices:CryptoServices","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":202}},"children":[{"progress":{"opaqueCount":203}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol.swiftmodule","label":"//Sources/Security/Adapters/Protocol:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol.swiftmodule","label":"//Sources/Security/Adapters/Protocol:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-560"},"label":"//Sources/Security/Adapters/Protocol:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Adapters/Protocol:Protocol","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol_objs/SecurityBridgeErrorMapper.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Protocol","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Adapters/Protocol/SecurityBridgeErrorMapper.swift","Sources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:34.948171Z","endTime":"2025-03-25T22:47:34.948171Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Protocol:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol.swiftmodule","label":"//Sources/Security/Adapters/Protocol:Protocol","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":203}},"children":[{"progress":{"opaqueCount":204}},{"namedSet":{"id":"113"}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Adapters/Protocol/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Adapters/Protocol:Protocol failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Adapters/Protocol:Protocol) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Protocol/Protocol.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:153:31: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n151 |     switch operation {\n152 |     case .encrypt:\n153 |       guard let data \u003d config.inputData, let key \u003d config.key else {\n    |                               `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n154 |         return SecurityResultDTO(\n155 |           status: .failure,\n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:153:59: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n151 |     switch operation {\n152 |     case .encrypt:\n153 |       guard let data \u003d config.inputData, let key \u003d config.key else {\n    |                                                           `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n154 |         return SecurityResultDTO(\n155 |           status: .failure,\n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:183:31: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n181 |       \n182 |     case .decrypt:\n183 |       guard let data \u003d config.inputData, let key \u003d config.key else {\n    |                               `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n184 |         return SecurityResultDTO(\n185 |           status: .failure,\n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:183:59: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n181 |       \n182 |     case .decrypt:\n183 |       guard let data \u003d config.inputData, let key \u003d config.key else {\n    |                                                           `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n184 |         return SecurityResultDTO(\n185 |           status: .failure,\n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:213:31: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n211 |       \n212 |     case .hash:\n213 |       guard let data \u003d config.inputData else {\n    |                               `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n214 |         return SecurityResultDTO(\n215 |           status: .failure,\n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:243:57: error: type of expression is ambiguous without a type annotation\n241 |       \n242 |     case .generateKey:\n243 |       let keySize \u003d config.metadata?[\"keySize\"] as? Int ?? 32 // Default to 32 bytes (256 bits)\n    |                                                         `- error: type of expression is ambiguous without a type annotation\n244 |       \n245 |       do {\n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:269:38: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n267 |       return SecurityResultDTO(\n268 |         status: .failure,\n269 |         error: SecurityProtocolError.operationFailed(\"Unsupported operation: \\(operation)\"),\n    |                                      `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n270 |         metadata: [\"operation\": \"\\(operation)\"]\n271 |       )\n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:286:16: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n284 |       // Extract data if provided\n285 |       if let data \u003d options[\"data\"] as? SecureBytes {\n286 |         config.inputData \u003d data\n    |                `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n287 |       }\n288 |       \n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:291:16: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n289 |       // Extract key if provided\n290 |       if let key \u003d options[\"key\"] as? SecureBytes {\n291 |         config.key \u003d key\n    |                `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n292 |       }\n293 |       \n\nSources/Security/Adapters/Protocol/SecurityProviderProtocolAdapter.swift:301:16: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n299 |       \n300 |       if !metadata.isEmpty {\n301 |         config.metadata \u003d metadata\n    |                `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n302 |       }\n303 |     }\nINFO: From Compiling Swift module //Sources/Security/Adapters/Core:Core:\nSources/Security/Adapters/Core/SecurityCoreAdapters.swift:16:50: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n14 |   /// - Parameter dto: The crypto service DTO to wrap\n15 |   /// - Returns: A type-erased crypto service\n16 |   public static func createAnyCryptoService(dto: CryptoServiceDTO) -\u003e AnyCryptoService {\n   |                                                  |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                                                  `- note: use \u0027CryptoServiceDto\u0027 instead\n17 |     AnyCryptoService(dto: dto)\n18 |   }\n\nSources/Security/Adapters/Core/SecurityCoreAdapters.swift:48:54: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n46 |   /// - Parameter dto: The crypto service DTO\n47 |   /// - Returns: A CryptoServiceAdapter instance\n48 |   public static func createCryptoServiceAdapter(dto: CryptoServiceDTO) -\u003e CryptoServiceAdapter {\n   |                                                      |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                                                      `- note: use \u0027CryptoServiceDto\u0027 instead\n49 |     CryptoServiceAdapter(dto: dto)\n50 |   }\nSources/Security/Adapters/Core/SecurityCoreAdapters.swift:16:50: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n14 |   /// - Parameter dto: The crypto service DTO to wrap\n15 |   /// - Returns: A type-erased crypto service\n16 |   public static func createAnyCryptoService(dto: CryptoServiceDTO) -\u003e AnyCryptoService {\n   |                                                  |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                                                  `- note: use \u0027CryptoServiceDto\u0027 instead\n17 |     AnyCryptoService(dto: dto)\n18 |   }\n\nSources/Security/Adapters/Core/SecurityCoreAdapters.swift:48:54: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n46 |   /// - Parameter dto: The crypto service DTO\n47 |   /// - Returns: A CryptoServiceAdapter instance\n48 |   public static func createCryptoServiceAdapter(dto: CryptoServiceDTO) -\u003e CryptoServiceAdapter {\n   |                                                      |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |                                                      `- note: use \u0027CryptoServiceDto\u0027 instead\n49 |     CryptoServiceAdapter(dto: dto)\n50 |   }\n\nSources/Security/Adapters/Core/SecurityCoreAdapters.swift:27:15: warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n25 |   ) -\u003e AnyCryptoService {\n26 |     // Create a DTO from the protocol implementation\n27 |     let dto \u003d CryptoServiceDTO(\n   |               |- warning: \u0027CryptoServiceDTO\u0027 is deprecated: Use CryptoServiceDto instead\n   |               `- note: use \u0027CryptoServiceDto\u0027 instead\n28 |       encrypt: { data, key in\n29 |         await service.encrypt(data: data, using: key)\n"}}
{"id":{"namedSet":{"id":"113"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Core/Core.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Core.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"235f7aeba6126a503f7023400aec7ec6f77560dbc7d34af6a755ceccd10bbb62","length":"1864"},{"name":"Sources/Security/Adapters/Core/Core.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Core.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"5eaecdd80b73a43cb31f7d04a4b4dd3cfb88815e51f7cd2a039762005e5481ab","length":"18336"},{"name":"Sources/Security/Adapters/Core/Core.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/Core.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"300d743ea4e7f13b01d88feb45b061eb009ae759d4743462b5af378acb2c82d3","length":"1808"},{"name":"Sources/Security/Adapters/Core/libCore.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Core/libCore.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"64fca86530c123f93c45b66bb60c783518d94bf0a8a17402d5430bc6051e350f","length":"32640"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"113"}]}]}}
{"id":{"progress":{"opaqueCount":204}},"children":[{"progress":{"opaqueCount":205}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore.swiftmodule","label":"//Sources/Core/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore.swiftmodule","label":"//Sources/Core/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-562"},"label":"//Sources/Core/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Core/UmbraCore:UmbraCore","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore_objs/UmbraCore.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","UmbraCore","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Core/UmbraCore/UmbraCore.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:35.189781Z","endTime":"2025-03-25T22:47:35.189781Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Core/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore.swiftmodule","label":"//Sources/Core/UmbraCore:UmbraCore","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":205}},"children":[{"progress":{"opaqueCount":206}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.swiftmodule","label":"//Sources/Security/Implementation:Implementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Core/UmbraCore/BUILD.bazel:3:20: Compiling Swift module //Sources/Core/UmbraCore:UmbraCore failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Core/UmbraCore:UmbraCore) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/UmbraCore/UmbraCore.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Core/UmbraCore/UmbraCore.swift:15:38: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n13 | \n14 |     /// The default security level for cryptographic operations\n15 |     public var defaultSecurityLevel: XPCProtocolTypeDefs.SecurityLevel\n   |                                      `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n16 | \n17 |     public init(\n\nSources/Core/UmbraCore/UmbraCore.swift:19:29: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n17 |     public init(\n18 |       verboseLogging: Bool\u003dfalse,\n19 |       defaultSecurityLevel: XPCProtocolTypeDefs.SecurityLevel \u003d .standard\n   |                             `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n20 |     ) {\n21 |       self.verboseLogging\u003dverboseLogging\n\nSources/Core/UmbraCore/UmbraCore.swift:53:36: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n51 | \n52 |     /// Convert to XPCProtocolTypeDefs.SecurityLevel\n53 |     public func toXPCProtocol() -\u003e XPCProtocolTypeDefs.SecurityLevel {\n   |                                    `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n54 |       switch self {\n55 |         case .high: .high\n\nSources/Core/UmbraCore/UmbraCore.swift:62:45: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n60 | \n61 |     /// Create from XPCProtocolTypeDefs.SecurityLevel\n62 |     public static func from(xpcLevel level: XPCProtocolTypeDefs.SecurityLevel) -\u003e SecurityLevel {\n   |                                             `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n63 |       switch level {\n64 |         case .maximum, .high: return .high\nSources/Core/UmbraCore/UmbraCore.swift:15:38: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n13 | \n14 |     /// The default security level for cryptographic operations\n15 |     public var defaultSecurityLevel: XPCProtocolTypeDefs.SecurityLevel\n   |                                      `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n16 | \n17 |     public init(\n\nSources/Core/UmbraCore/UmbraCore.swift:19:29: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n17 |     public init(\n18 |       verboseLogging: Bool\u003dfalse,\n19 |       defaultSecurityLevel: XPCProtocolTypeDefs.SecurityLevel \u003d .standard\n   |                             `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n20 |     ) {\n21 |       self.verboseLogging\u003dverboseLogging\n\nSources/Core/UmbraCore/UmbraCore.swift:53:36: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n51 | \n52 |     /// Convert to XPCProtocolTypeDefs.SecurityLevel\n53 |     public func toXPCProtocol() -\u003e XPCProtocolTypeDefs.SecurityLevel {\n   |                                    `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n54 |       switch self {\n55 |         case .high: .high\n\nSources/Core/UmbraCore/UmbraCore.swift:62:45: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n60 | \n61 |     /// Create from XPCProtocolTypeDefs.SecurityLevel\n62 |     public static func from(xpcLevel level: XPCProtocolTypeDefs.SecurityLevel) -\u003e SecurityLevel {\n   |                                             `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n63 |       switch level {\n64 |         case .maximum, .high: return .high\n[651 / 669] [Sched] Compiling Swift module //Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric ... (7 actions, 5 running)\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.swiftmodule","label":"//Sources/Security/Implementation:Implementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-564"},"label":"//Sources/Security/Implementation:Implementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation:Implementation","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation_objs/SecurityImplementation.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Implementation","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/SecurityImplementation.swift","Sources/Security/Implementation/SecurityProvider.swift","Sources/Security/Implementation/Types.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:35.250608Z","endTime":"2025-03-25T22:47:35.250608Z"}}
{"id":{"progress":{"opaqueCount":206}},"children":[{"progress":{"opaqueCount":207}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/BUILD.bazel:5:20: Compiling Swift module //Sources/Security/Implementation:Implementation failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation:Implementation) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":207}},"children":[{"progress":{"opaqueCount":208}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Security/Implementation/SecurityProvider.swift:335:21: error: type \u0027DefaultCryptoService\u0027 does not conform to protocol \u0027CryptoServiceProtocol\u0027\n333 | \n334 | /// Default implementation of the CryptoServiceProtocol\n335 | private final class DefaultCryptoService: CryptoServiceProtocol {\n    |                     `- error: type \u0027DefaultCryptoService\u0027 does not conform to protocol \u0027CryptoServiceProtocol\u0027\n336 |   // Implementation details would go here\n337 | }\n\n/Users/mpy/.bazel/execroot/_main/Sources/Security/Core/Protocols/CryptoServiceProtocol.swift:13:8: note: protocol requires function \u0027encrypt(data:using:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n11 |   ///   - key: Encryption key as `SecureBytes`.\n12 |   /// - Returns: The encrypted data as `SecureBytes` or an error.\n13 |   func encrypt(data: SecureBytes, using key: SecureBytes) async\n   |        `- note: protocol requires function \u0027encrypt(data:using:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n14 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n15 | \n   :\n19 |   ///   - key: Decryption key as `SecureBytes`.\n20 |   /// - Returns: The decrypted data as `SecureBytes` or an error.\n21 |   func decrypt(data: SecureBytes, using key: SecureBytes) async\n   |        `- note: protocol requires function \u0027decrypt(data:using:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n22 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n23 |     \n   :\n25 |   /// - Parameter data: Data to hash as `SecureBytes`.\n26 |   /// - Returns: The hash as `SecureBytes` or an error.\n27 |   func hash(data: SecureBytes) async\n   |        `- note: protocol requires function \u0027hash(data:)\u0027 with type \u0027(SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n28 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n29 |     \n   :\n33 |   ///   - expectedHash: Expected hash value as `SecureBytes`.\n34 |   /// - Returns: `true` if the hash matches, `false` if not, or an error.\n35 |   func verifyHash(data: SecureBytes, expectedHash: SecureBytes) async\n   |        `- note: protocol requires function \u0027verifyHash(data:expectedHash:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cBool, SecurityProtocolError\u003e\u0027\n36 |     -\u003e Result\u003cBool, SecurityProtocolError\u003e\n37 | }\n\nSources/Security/Implementation/SecurityProvider.swift:340:21: error: type \u0027DefaultKeyManagementService\u0027 does not conform to protocol \u0027KeyManagementProtocol\u0027\n338 | \n339 | /// Default implementation of the KeyManagementProtocol\n340 | private final class DefaultKeyManagementService: KeyManagementProtocol {\n    |                     `- error: type \u0027DefaultKeyManagementService\u0027 does not conform to protocol \u0027KeyManagementProtocol\u0027\n341 |   // Implementation details would go here\n342 | }\n\n/Users/mpy/.bazel/execroot/_main/Sources/Security/Core/Protocols/KeyManagementProtocol.swift:10:8: note: protocol requires function \u0027retrieveKey(withIdentifier:)\u0027 with type \u0027(String) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n 8 |   /// - Parameter identifier: A string identifying the key.\n 9 |   /// - Returns: The security key as `SecureBytes` or an error.\n10 |   func retrieveKey(withIdentifier identifier: String) async\n   |        `- note: protocol requires function \u0027retrieveKey(withIdentifier:)\u0027 with type \u0027(String) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n11 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n12 | \n   :\n16 |   ///   - identifier: A string identifier for the key.\n17 |   /// - Returns: Success or an error.\n18 |   func storeKey(_ key: SecureBytes, withIdentifier identifier: String) async\n   |        `- note: protocol requires function \u0027storeKey(_:withIdentifier:)\u0027 with type \u0027(SecureBytes, String) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e\u0027\n19 |     -\u003e Result\u003cVoid, SecurityProtocolError\u003e\n20 | \n   :\n22 |   /// - Parameter identifier: A string identifying the key to delete.\n23 |   /// - Returns: Success or an error.\n24 |   func deleteKey(withIdentifier identifier: String) async\n   |        `- note: protocol requires function \u0027deleteKey(withIdentifier:)\u0027 with type \u0027(String) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e\u0027\n25 |     -\u003e Result\u003cVoid, SecurityProtocolError\u003e\n26 | \n   :\n30 |   ///   - dataToReencrypt: Optional data to re-encrypt with the new key.\n31 |   /// - Returns: The new key and re-encrypted data (if provided) or an error.\n32 |   func rotateKey(\n   |        `- note: protocol requires function \u0027rotateKey(withIdentifier:dataToReencrypt:)\u0027 with type \u0027(String, SecureBytes?) async -\u003e Result\u003c(newKey: SecureBytes, reencryptedData: SecureBytes?), SecurityProtocolError\u003e\u0027\n33 |     withIdentifier identifier: String,\n34 |     dataToReencrypt: SecureBytes?\n   :\n40 |   /// Lists all available key identifiers.\n41 |   /// - Returns: An array of key identifiers or an error.\n42 |   func listKeyIdentifiers() async -\u003e Result\u003c[String], SecurityProtocolError\u003e\n   |        `- note: protocol requires function \u0027listKeyIdentifiers()\u0027 with type \u0027() async -\u003e Result\u003c[String], SecurityProtocolError\u003e\u0027\n43 | }\n44 | \nSources/Security/Implementation/SecurityProvider.swift:335:21: error: type \u0027DefaultCryptoService\u0027 does not conform to protocol \u0027CryptoServiceProtocol\u0027\n333 | \n334 | /// Default implementation of the CryptoServiceProtocol\n335 | private final class DefaultCryptoService: CryptoServiceProtocol {\n    |                     `- error: type \u0027DefaultCryptoService\u0027 does not conform to protocol \u0027CryptoServiceProtocol\u0027\n336 |   // Implementation details would go here\n337 | }\n\n/Users/mpy/.bazel/execroot/_main/Sources/Security/Core/Protocols/CryptoServiceProtocol.swift:13:8: note: protocol requires function \u0027encrypt(data:using:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n11 |   ///   - key: Encryption key as `SecureBytes`.\n12 |   /// - Returns: The encrypted data as `SecureBytes` or an error.\n13 |   func encrypt(data: SecureBytes, using key: SecureBytes) async\n   |        `- note: protocol requires function \u0027encrypt(data:using:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n14 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n15 | \n   :\n19 |   ///   - key: Decryption key as `SecureBytes`.\n20 |   /// - Returns: The decrypted data as `SecureBytes` or an error.\n21 |   func decrypt(data: SecureBytes, using key: SecureBytes) async\n   |        `- note: protocol requires function \u0027decrypt(data:using:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n22 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n23 |     \n   :\n25 |   /// - Parameter data: Data to hash as `SecureBytes`.\n26 |   /// - Returns: The hash as `SecureBytes` or an error.\n27 |   func hash(data: SecureBytes) async\n   |        `- note: protocol requires function \u0027hash(data:)\u0027 with type \u0027(SecureBytes) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n28 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n29 |     \n   :\n33 |   ///   - expectedHash: Expected hash value as `SecureBytes`.\n34 |   /// - Returns: `true` if the hash matches, `false` if not, or an error.\n35 |   func verifyHash(data: SecureBytes, expectedHash: SecureBytes) async\n   |        `- note: protocol requires function \u0027verifyHash(data:expectedHash:)\u0027 with type \u0027(SecureBytes, SecureBytes) async -\u003e Result\u003cBool, SecurityProtocolError\u003e\u0027\n36 |     -\u003e Result\u003cBool, SecurityProtocolError\u003e\n37 | }\n\nSources/Security/Implementation/SecurityProvider.swift:340:21: error: type \u0027DefaultKeyManagementService\u0027 does not conform to protocol \u0027KeyManagementProtocol\u0027\n338 | \n339 | /// Default implementation of the KeyManagementProtocol\n340 | private final class DefaultKeyManagementService: KeyManagementProtocol {\n    |                     `- error: type \u0027DefaultKeyManagementService\u0027 does not conform to protocol \u0027KeyManagementProtocol\u0027\n341 |   // Implementation details would go here\n342 | }\n\n/Users/mpy/.bazel/execroot/_main/Sources/Security/Core/Protocols/KeyManagementProtocol.swift:10:8: note: protocol requires function \u0027retrieveKey(withIdentifier:)\u0027 with type \u0027(String) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n 8 |   /// - Parameter identifier: A string identifying the key.\n 9 |   /// - Returns: The security key as `SecureBytes` or an error.\n10 |   func retrieveKey(withIdentifier identifier: String) async\n   |        `- note: protocol requires function \u0027retrieveKey(withIdentifier:)\u0027 with type \u0027(String) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\u0027\n11 |     -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e\n12 | \n   :\n16 |   ///   - identifier: A string identifier for the key.\n17 |   /// - Returns: Success or an error.\n18 |   func storeKey(_ key: SecureBytes, withIdentifier identifier: String) async\n   |        `- note: protocol requires function \u0027storeKey(_:withIdentifier:)\u0027 with type \u0027(SecureBytes, String) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e\u0027\n19 |     -\u003e Result\u003cVoid, SecurityProtocolError\u003e\n20 | \n   :\n22 |   /// - Parameter identifier: A string identifying the key to delete.\n23 |   /// - Returns: Success or an error.\n24 |   func deleteKey(withIdentifier identifier: String) async\n   |        `- note: protocol requires function \u0027deleteKey(withIdentifier:)\u0027 with type \u0027(String) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e\u0027\n25 |     -\u003e Result\u003cVoid, SecurityProtocolError\u003e\n26 | \n   :\n30 |   ///   - dataToReencrypt: Optional data to re-encrypt with the new key.\n31 |   /// - Returns: The new key and re-encrypted data (if provided) or an error.\n32 |   func rotateKey(\n   |        `- note: protocol requires function \u0027rotateKey(withIdentifier:dataToReencrypt:)\u0027 with type \u0027(String, SecureBytes?) async -\u003e Result\u003c(newKey: SecureBytes, reencryptedData: SecureBytes?), SecurityProtocolError\u003e\u0027\n33 |     withIdentifier identifier: String,\n34 |     dataToReencrypt: SecureBytes?\n   :\n40 |   /// Lists all available key identifiers.\n41 |   /// - Returns: An array of key identifiers or an error.\n42 |   func listKeyIdentifiers() async -\u003e Result\u003c[String], SecurityProtocolError\u003e\n   |        `- note: protocol requires function \u0027listKeyIdentifiers()\u0027 with type \u0027() async -\u003e Result\u003c[String], SecurityProtocolError\u003e\u0027\n43 | }\n44 | \n\nSources/Security/Implementation/SecurityProvider.swift:96:20: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n 94 |         case \"algorithm\":\n 95 |           if let algorithmName \u003d value as? String {\n 96 |             config.metadata \u003d config.metadata ?? [:]\n    |                    `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n 97 |             config.metadata?[\"algorithm\"] \u003d algorithmName\n 98 |           }\n\nSources/Security/Implementation/SecurityProvider.swift:96:38: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n 94 |         case \"algorithm\":\n 95 |           if let algorithmName \u003d value as? String {\n 96 |             config.metadata \u003d config.metadata ?? [:]\n    |                                      `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n 97 |             config.metadata?[\"algorithm\"] \u003d algorithmName\n 98 |           }\n\nSources/Security/Implementation/SecurityProvider.swift:97:20: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n 95 |           if let algorithmName \u003d value as? String {\n 96 |             config.metadata \u003d config.metadata ?? [:]\n 97 |             config.metadata?[\"algorithm\"] \u003d algorithmName\n    |                    `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n 98 |           }\n 99 |         case \"data\":\n\nSources/Security/Implementation/SecurityProvider.swift:101:20: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n 99 |         case \"data\":\n100 |           if let data \u003d value as? SecureBytes {\n101 |             config.inputData \u003d data\n    |                    `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027inputData\u0027\n102 |           }\n103 |         case \"key\":\n\nSources/Security/Implementation/SecurityProvider.swift:105:20: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n103 |         case \"key\":\n104 |           if let key \u003d value as? SecureBytes {\n105 |             config.key \u003d key\n    |                    `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027key\u0027\n106 |           }\n107 |         default:\n\nSources/Security/Implementation/SecurityProvider.swift:109:18: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n107 |         default:\n108 |           // Add as metadata\n109 |           config.metadata \u003d config.metadata ?? [:]\n    |                  `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n110 |           config.metadata?[key] \u003d value\n111 |         }\n\nSources/Security/Implementation/SecurityProvider.swift:109:36: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n107 |         default:\n108 |           // Add as metadata\n109 |           config.metadata \u003d config.metadata ?? [:]\n    |                                    `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n110 |           config.metadata?[key] \u003d value\n111 |         }\n\nSources/Security/Implementation/SecurityProvider.swift:110:18: error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n108 |           // Add as metadata\n109 |           config.metadata \u003d config.metadata ?? [:]\n110 |           config.metadata?[key] \u003d value\n    |                  `- error: value of type \u0027SecurityConfigDTO\u0027 has no member \u0027metadata\u0027\n111 |         }\n112 |       }\n\n\u003cunknown\u003e:0: note: \u0027hash(data:algorithm:)\u0027 declared here\nSources/Security/Implementation/SecurityProvider.swift:162:16: warning: enum case \u0027hash\u0027 has 2 associated values; matching them as a tuple is deprecated\n160 |     case .decrypt(let data, let key):\n161 |       return await decrypt(data: data, key: key, config: config)\n162 |     case .hash(let data):\n    |                `- warning: enum case \u0027hash\u0027 has 2 associated values; matching them as a tuple is deprecated\n163 |       return await hash(data: data, config: config)\n164 |     case .generateKey:\n\nSources/Security/Implementation/SecurityProvider.swift:159:45: error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n157 |     switch operation {\n158 |     case .encrypt(let data, let key):\n159 |       return await encrypt(data: data, key: key, config: config)\n    |                                             |- error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n    |                                             |- note: coalesce using \u0027??\u0027 to provide a default when the optional value contains \u0027nil\u0027\n    |                                             `- note: force-unwrap using \u0027!\u0027 to abort execution if the optional value contains \u0027nil\u0027\n160 |     case .decrypt(let data, let key):\n161 |       return await decrypt(data: data, key: key, config: config)\n\nSources/Security/Implementation/SecurityProvider.swift:161:45: error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n159 |       return await encrypt(data: data, key: key, config: config)\n160 |     case .decrypt(let data, let key):\n161 |       return await decrypt(data: data, key: key, config: config)\n    |                                             |- error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n    |                                             |- note: coalesce using \u0027??\u0027 to provide a default when the optional value contains \u0027nil\u0027\n    |                                             `- note: force-unwrap using \u0027!\u0027 to abort execution if the optional value contains \u0027nil\u0027\n162 |     case .hash(let data):\n163 |       return await hash(data: data, config: config)\n\nSources/Security/Implementation/SecurityProvider.swift:163:31: error: cannot convert value of type \u0027(data: SecureBytes, algorithm: HashAlgorithm?)\u0027 to expected argument type \u0027SecureBytes\u0027\n161 |       return await decrypt(data: data, key: key, config: config)\n162 |     case .hash(let data):\n163 |       return await hash(data: data, config: config)\n    |                               `- error: cannot convert value of type \u0027(data: SecureBytes, algorithm: HashAlgorithm?)\u0027 to expected argument type \u0027SecureBytes\u0027\n164 |     case .generateKey:\n165 |       return await generateKey(config: config)\n\nSources/Security/Implementation/SecurityProvider.swift:167:42: error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n165 |       return await generateKey(config: config)\n166 |     case .sign(let data, let key):\n167 |       return await sign(data: data, key: key, config: config)\n    |                                          |- error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n    |                                          |- note: coalesce using \u0027??\u0027 to provide a default when the optional value contains \u0027nil\u0027\n    |                                          `- note: force-unwrap using \u0027!\u0027 to abort execution if the optional value contains \u0027nil\u0027\n168 |     case .verify(let data, let signature, let key):\n169 |       return await verify(data: data, signature: signature, key: key, config: config)\n\nSources/Security/Implementation/SecurityProvider.swift:169:66: error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n167 |       return await sign(data: data, key: key, config: config)\n168 |     case .verify(let data, let signature, let key):\n169 |       return await verify(data: data, signature: signature, key: key, config: config)\n    |                                                                  |- error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n    |                                                                  |- note: coalesce using \u0027??\u0027 to provide a default when the optional value contains \u0027nil\u0027\n    |                                                                  `- note: force-unwrap using \u0027!\u0027 to abort execution if the optional value contains \u0027nil\u0027\n170 |     case .deriveKey(let input, let salt):\n171 |       return await deriveKey(input: input, salt: salt, config: config)\n\nSources/Security/Implementation/SecurityProvider.swift:171:50: error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n169 |       return await verify(data: data, signature: signature, key: key, config: config)\n170 |     case .deriveKey(let input, let salt):\n171 |       return await deriveKey(input: input, salt: salt, config: config)\n    |                                                  |- error: value of optional type \u0027SecureBytes?\u0027 must be unwrapped to a value of type \u0027SecureBytes\u0027\n    |                                                  |- note: coalesce using \u0027??\u0027 to provide a default when the optional value contains \u0027nil\u0027\n    |                                                  `- note: force-unwrap using \u0027!\u0027 to abort execution if the optional value contains \u0027nil\u0027\n172 |     case .store(let data, let identifier):\n173 |       return await storeData(data: data, identifier: identifier, config: config)\n\nSources/Security/Implementation/SecurityProvider.swift:194:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n192 |     return SecurityResultDTO(\n193 |       status: .failure,\n194 |       error: SecurityProtocolError.notImplemented(\"Encryption not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n195 |     )\n196 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:207:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n205 |     return SecurityResultDTO(\n206 |       status: .failure,\n207 |       error: SecurityProtocolError.notImplemented(\"Decryption not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n208 |     )\n209 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:219:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n217 |     return SecurityResultDTO(\n218 |       status: .failure,\n219 |       error: SecurityProtocolError.notImplemented(\"Hashing not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n220 |     )\n221 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:230:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n228 |     return SecurityResultDTO(\n229 |       status: .failure,\n230 |       error: SecurityProtocolError.notImplemented(\"Key generation not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n231 |     )\n232 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:242:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n240 |     return SecurityResultDTO(\n241 |       status: .failure,\n242 |       error: SecurityProtocolError.notImplemented(\"Signing not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n243 |     )\n244 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:255:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n253 |     return SecurityResultDTO(\n254 |       status: .failure,\n255 |       error: SecurityProtocolError.notImplemented(\"Signature verification not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n256 |     )\n257 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:267:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n265 |     return SecurityResultDTO(\n266 |       status: .failure,\n267 |       error: SecurityProtocolError.notImplemented(\"Key derivation not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n268 |     )\n269 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:279:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n277 |     return SecurityResultDTO(\n278 |       status: .failure,\n279 |       error: SecurityProtocolError.notImplemented(\"Data storage not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n280 |     )\n281 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:290:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n288 |     return SecurityResultDTO(\n289 |       status: .failure,\n290 |       error: SecurityProtocolError.notImplemented(\"Data retrieval not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n291 |     )\n292 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:301:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n299 |     return SecurityResultDTO(\n300 |       status: .failure,\n301 |       error: SecurityProtocolError.notImplemented(\"Data deletion not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n302 |     )\n303 |   }\n\nSources/Security/Implementation/SecurityProvider.swift:313:36: error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n311 |     return SecurityResultDTO(\n312 |       status: .failure,\n313 |       error: SecurityProtocolError.notImplemented(\"Custom operation \u0027\\(name)\u0027 not yet implemented\")\n    |                                    `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027notImplemented\u0027\n314 |     )\n315 |   }\n"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation:Implementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.swiftmodule","label":"//Sources/Security/Implementation:Implementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":208}},"children":[{"progress":{"opaqueCount":209}},{"namedSet":{"id":"114"}}],"progress":{}}
{"id":{"namedSet":{"id":"114"}},"namedSetOfFiles":{"files":[{"name":"Sources/Security/Adapters/Bridge/Foundation/FoundationBridge.swiftdoc","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Foundation/FoundationBridge.swiftdoc","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"783bc2b74d9f086165cea3205ce5bbf6e47005e7026b3575947616bd617c94b3","length":"3140"},{"name":"Sources/Security/Adapters/Bridge/Foundation/FoundationBridge.swiftmodule","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Foundation/FoundationBridge.swiftmodule","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"df12d479a7d5c3b00b7ee3ff5261d814e406a1084170977526a86ff07501dfe9","length":"19612"},{"name":"Sources/Security/Adapters/Bridge/Foundation/FoundationBridge.swiftsourceinfo","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Foundation/FoundationBridge.swiftsourceinfo","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"90b089e7eb44bcdcce15fabc3ccde494db08f1a87d2b3d153d3868f2ec4e06fe","length":"3448"},{"name":"Sources/Security/Adapters/Bridge/Foundation/libFoundationBridge.a","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Adapters/Bridge/Foundation/libFoundationBridge.a","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"c2c937fa4a37b0c47f881e36cfc2f678ebcc5f2ce272fd2f6fea0b80b01b576e","length":"16672"}]}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Adapters/Bridge/Foundation:FoundationBridge","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"completed":{"success":true,"outputGroup":[{"name":"default","fileSets":[{"id":"114"}]}]}}
{"id":{"progress":{"opaqueCount":209}},"children":[{"progress":{"opaqueCount":210}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.swiftmodule","label":"//Sources/XPCProtocolsCore/Tests:TestsLib","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.swiftmodule","label":"//Sources/XPCProtocolsCore/Tests:TestsLib","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-565"},"label":"//Sources/XPCProtocolsCore/Tests:TestsLib","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/XPCProtocolsCore/Tests:TestsLib","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib_objs/CryptoXPCServiceAdapterTests.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-F__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/Library/Frameworks","-I__BAZEL_XCODE_DEVELOPER_DIR__/Platforms/MacOSX.platform/Developer/usr/lib","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Modern","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","TestsLib","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-target","arm64-apple-macosx14.7.4","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/XPCProtocolsCore/Tests/CryptoXPCServiceAdapterTests.swift","Sources/XPCProtocolsCore/Tests/MockXPCService.swift","Sources/XPCProtocolsCore/Tests/ModernXPCServiceTests.swift","Sources/XPCProtocolsCore/Tests/ModernXPCTests.swift","Sources/XPCProtocolsCore/Tests/XPCErrorHandlingTests.swift","Sources/XPCProtocolsCore/Tests/XPCProtocolExtensionsTests.swift","Sources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift","Sources/XPCProtocolsCore/Tests/XPCProtocolsTests.swift","Sources/XPCProtocolsCore/Tests/XPCTestHelpers.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:35.358954Z","endTime":"2025-03-25T22:47:35.358954Z"}}
{"id":{"progress":{"opaqueCount":210}},"children":[{"progress":{"opaqueCount":211}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/XPCProtocolsCore/Tests/BUILD.bazel:3:20: Compiling Swift module //Sources/XPCProtocolsCore/Tests:TestsLib failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/XPCProtocolsCore/Tests:TestsLib) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":211}},"children":[{"progress":{"opaqueCount":212}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/XPCProtocolsCore/Tests/MockXPCService.swift:21:36: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n 19 |   }\n 20 | \n 21 |   public func getStatus() async -\u003e XPCProtocolTypeDefs.ServiceStatusInfo {\n    |                                    `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n 22 |     XPCProtocolTypeDefs.ServiceStatusInfo(\n 23 |       status: XPCProtocolTypeDefs.ServiceStatus.operational.rawValue,\n\nSources/XPCProtocolsCore/Tests/MockXPCService.swift:8:36: error: cannot find type \u0027XPCServiceProtocolStandard\u0027 in scope\n  6 | /// Replaces the deprecated DummyXPCService\n  7 | @available(macOS 14.0, *)\n  8 | public final class MockXPCService: XPCServiceProtocolStandard, XPCServiceProtocolBasic {\n    |                                    `- error: cannot find type \u0027XPCServiceProtocolStandard\u0027 in scope\n  9 |   public init() {}\n 10 | \n\nSources/XPCProtocolsCore/Tests/MockXPCService.swift:8:64: error: cannot find type \u0027XPCServiceProtocolBasic\u0027 in scope\n  6 | /// Replaces the deprecated DummyXPCService\n  7 | @available(macOS 14.0, *)\n  8 | public final class MockXPCService: XPCServiceProtocolStandard, XPCServiceProtocolBasic {\n    |                                                                `- error: cannot find type \u0027XPCServiceProtocolBasic\u0027 in scope\n  9 |   public init() {}\n 10 | \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:86:23: error: cannot find \u0027XPCConnectionManager\u0027 in scope\n 84 |         \n 85 |         // Create the manager\n 86 |         let manager \u003d XPCConnectionManager(serviceName: \"com.test.service\", \n    |                       `- error: cannot find \u0027XPCConnectionManager\u0027 in scope\n 87 |                                           interfaceProtocol: MockProtocol.self)\n 88 |         \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:103:23: error: cannot find \u0027XPCConnectionManager\u0027 in scope\n101 |         \n102 |         // Create the manager\n103 |         let manager \u003d XPCConnectionManager(serviceName: \"com.test.service\", \n    |                       `- error: cannot find \u0027XPCConnectionManager\u0027 in scope\n104 |                                           interfaceProtocol: MockProtocol.self)\n105 |         \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:117:34: error: cannot find type \u0027XPCConnectionProtocol\u0027 in scope\n115 |     func testXPCConnectionProtocolImplementation() async {\n116 |         // Create a mock implementation of XPCConnectionProtocol\n117 |         actor MockXPCConnection: XPCConnectionProtocol {\n    |                                  `- error: cannot find type \u0027XPCConnectionProtocol\u0027 in scope\n118 |             var connectCalled \u003d false\n119 |             var disconnectCalled \u003d false\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:143:40: error: actor-isolated property \u0027connectCalled\u0027 can not be referenced from a nonisolated autoclosure\n116 |         // Create a mock implementation of XPCConnectionProtocol\n117 |         actor MockXPCConnection: XPCConnectionProtocol {\n118 |             var connectCalled \u003d false\n    |                 `- note: property declared here\n119 |             var disconnectCalled \u003d false\n120 |             var sendCalled \u003d false\n    :\n141 |         \n142 |         try? await connection.connect()\n143 |         XCTAssertTrue(await connection.connectCalled)\n    |                                        `- error: actor-isolated property \u0027connectCalled\u0027 can not be referenced from a nonisolated autoclosure\n144 |         \n145 |         await connection.disconnect()\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:146:40: error: actor-isolated property \u0027disconnectCalled\u0027 can not be referenced from a nonisolated autoclosure\n117 |         actor MockXPCConnection: XPCConnectionProtocol {\n118 |             var connectCalled \u003d false\n119 |             var disconnectCalled \u003d false\n    |                 `- note: property declared here\n120 |             var sendCalled \u003d false\n121 |             \n    :\n144 |         \n145 |         await connection.disconnect()\n146 |         XCTAssertTrue(await connection.disconnectCalled)\n    |                                        `- error: actor-isolated property \u0027disconnectCalled\u0027 can not be referenced from a nonisolated autoclosure\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:149:40: error: actor-isolated property \u0027sendCalled\u0027 can not be referenced from a nonisolated autoclosure\n118 |             var connectCalled \u003d false\n119 |             var disconnectCalled \u003d false\n120 |             var sendCalled \u003d false\n    |                 `- note: property declared here\n121 |             \n122 |             var endpoint: String {\n    :\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n149 |         XCTAssertTrue(await connection.sendCalled)\n    |                                        `- error: actor-isolated property \u0027sendCalled\u0027 can not be referenced from a nonisolated autoclosure\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:151:41: error: actor-isolated property \u0027endpoint\u0027 can not be referenced from a nonisolated autoclosure\n120 |             var sendCalled \u003d false\n121 |             \n122 |             var endpoint: String {\n    |                 `- note: property declared here\n123 |                 return \"com.test.mockservice\"\n124 |             }\n    :\n149 |         XCTAssertTrue(await connection.sendCalled)\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n    |                                         `- error: actor-isolated property \u0027endpoint\u0027 can not be referenced from a nonisolated autoclosure\n152 |     }\n153 | }\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:143:23: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n141 |         \n142 |         try? await connection.connect()\n143 |         XCTAssertTrue(await connection.connectCalled)\n    |                       `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n144 |         \n145 |         await connection.disconnect()\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:146:23: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n144 |         \n145 |         await connection.disconnect()\n146 |         XCTAssertTrue(await connection.disconnectCalled)\n    |                       `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:149:23: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n149 |         XCTAssertTrue(await connection.sendCalled)\n    |                       `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:151:24: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n149 |         XCTAssertTrue(await connection.sendCalled)\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n    |                        `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n152 |     }\n153 | }\nSources/XPCProtocolsCore/Tests/MockXPCService.swift:21:36: error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n 19 |   }\n 20 | \n 21 |   public func getStatus() async -\u003e XPCProtocolTypeDefs.ServiceStatusInfo {\n    |                                    `- error: cannot find type \u0027XPCProtocolTypeDefs\u0027 in scope\n 22 |     XPCProtocolTypeDefs.ServiceStatusInfo(\n 23 |       status: XPCProtocolTypeDefs.ServiceStatus.operational.rawValue,\n\nSources/XPCProtocolsCore/Tests/MockXPCService.swift:8:36: error: cannot find type \u0027XPCServiceProtocolStandard\u0027 in scope\n  6 | /// Replaces the deprecated DummyXPCService\n  7 | @available(macOS 14.0, *)\n  8 | public final class MockXPCService: XPCServiceProtocolStandard, XPCServiceProtocolBasic {\n    |                                    `- error: cannot find type \u0027XPCServiceProtocolStandard\u0027 in scope\n  9 |   public init() {}\n 10 | \n\nSources/XPCProtocolsCore/Tests/MockXPCService.swift:8:64: error: cannot find type \u0027XPCServiceProtocolBasic\u0027 in scope\n  6 | /// Replaces the deprecated DummyXPCService\n  7 | @available(macOS 14.0, *)\n  8 | public final class MockXPCService: XPCServiceProtocolStandard, XPCServiceProtocolBasic {\n    |                                                                `- error: cannot find type \u0027XPCServiceProtocolBasic\u0027 in scope\n  9 |   public init() {}\n 10 | \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:11:22: error: cannot find type \u0027XPCError\u0027 in scope\n  9 |     \n 10 |     func testXPCErrorDescription() {\n 11 |         let errors: [XPCError] \u003d [\n    |                      `- error: cannot find type \u0027XPCError\u0027 in scope\n 12 |             .connectionFailed(\"Failed to connect\"),\n 13 |             .messageFailed(\"Failed to send\"),\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:32:24: error: cannot find \u0027XPCError\u0027 in scope\n 30 |         \n 31 |         // Test specific error descriptions\n 32 |         XCTAssertEqual(XPCError.connectionFailed(\"Test\").errorDescription, \n    |                        `- error: cannot find \u0027XPCError\u0027 in scope\n 33 |                       \"[Connection] XPC connection failed: Test\")\n 34 |         XCTAssertEqual(XPCError.messageFailed(\"Test\").errorDescription, \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:34:24: error: cannot find \u0027XPCError\u0027 in scope\n 32 |         XCTAssertEqual(XPCError.connectionFailed(\"Test\").errorDescription, \n 33 |                       \"[Connection] XPC connection failed: Test\")\n 34 |         XCTAssertEqual(XPCError.messageFailed(\"Test\").errorDescription, \n    |                        `- error: cannot find \u0027XPCError\u0027 in scope\n 35 |                       \"[Message] Failed to send XPC message: Test\")\n 36 |         XCTAssertEqual(XPCError.invalidMessage(\"Test\").errorDescription, \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:36:24: error: cannot find \u0027XPCError\u0027 in scope\n 34 |         XCTAssertEqual(XPCError.messageFailed(\"Test\").errorDescription, \n 35 |                       \"[Message] Failed to send XPC message: Test\")\n 36 |         XCTAssertEqual(XPCError.invalidMessage(\"Test\").errorDescription, \n    |                        `- error: cannot find \u0027XPCError\u0027 in scope\n 37 |                       \"[Message] Invalid XPC message format: Test\")\n 38 |     }\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:42:33: error: cannot find type \u0027XPCError\u0027 in scope\n 40 |     func testXPCErrorRecoverability() {\n 41 |         // Test recoverable errors\n 42 |         let recoverableErrors: [XPCError] \u003d [\n    |                                 `- error: cannot find type \u0027XPCError\u0027 in scope\n 43 |             .connectionError(message: \"Connection dropped\"),\n 44 |             .timeout(operation: \"Key exchange\"),\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:55:36: error: cannot find type \u0027XPCError\u0027 in scope\n 53 |         \n 54 |         // Test non-recoverable errors\n 55 |         let nonRecoverableErrors: [XPCError] \u003d [\n    |                                    `- error: cannot find type \u0027XPCError\u0027 in scope\n 56 |             .invalidRequest(message: \"Bad request\"),\n 57 |             .operationCancelled(reason: \"User cancelled\"),\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:72:24: error: cannot find \u0027XPCError\u0027 in scope\n 70 |     func testXPCErrorConversion() {\n 71 |         // Test conversion to Security Protocol Error\n 72 |         let xpcError \u003d XPCError.connectionFailed(\"Test connection\")\n    |                        `- error: cannot find \u0027XPCError\u0027 in scope\n 73 |         \n 74 |         // Verify the error has a localized description\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:86:23: error: cannot find \u0027XPCConnectionManager\u0027 in scope\n 84 |         \n 85 |         // Create the manager\n 86 |         let manager \u003d XPCConnectionManager(serviceName: \"com.test.service\", \n    |                       `- error: cannot find \u0027XPCConnectionManager\u0027 in scope\n 87 |                                           interfaceProtocol: MockProtocol.self)\n 88 |         \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:103:23: error: cannot find \u0027XPCConnectionManager\u0027 in scope\n101 |         \n102 |         // Create the manager\n103 |         let manager \u003d XPCConnectionManager(serviceName: \"com.test.service\", \n    |                       `- error: cannot find \u0027XPCConnectionManager\u0027 in scope\n104 |                                           interfaceProtocol: MockProtocol.self)\n105 |         \n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:117:34: error: cannot find type \u0027XPCConnectionProtocol\u0027 in scope\n115 |     func testXPCConnectionProtocolImplementation() async {\n116 |         // Create a mock implementation of XPCConnectionProtocol\n117 |         actor MockXPCConnection: XPCConnectionProtocol {\n    |                                  `- error: cannot find type \u0027XPCConnectionProtocol\u0027 in scope\n118 |             var connectCalled \u003d false\n119 |             var disconnectCalled \u003d false\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:143:40: error: actor-isolated property \u0027connectCalled\u0027 can not be referenced from a nonisolated autoclosure\n116 |         // Create a mock implementation of XPCConnectionProtocol\n117 |         actor MockXPCConnection: XPCConnectionProtocol {\n118 |             var connectCalled \u003d false\n    |                 `- note: property declared here\n119 |             var disconnectCalled \u003d false\n120 |             var sendCalled \u003d false\n    :\n141 |         \n142 |         try? await connection.connect()\n143 |         XCTAssertTrue(await connection.connectCalled)\n    |                                        `- error: actor-isolated property \u0027connectCalled\u0027 can not be referenced from a nonisolated autoclosure\n144 |         \n145 |         await connection.disconnect()\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:146:40: error: actor-isolated property \u0027disconnectCalled\u0027 can not be referenced from a nonisolated autoclosure\n117 |         actor MockXPCConnection: XPCConnectionProtocol {\n118 |             var connectCalled \u003d false\n119 |             var disconnectCalled \u003d false\n    |                 `- note: property declared here\n120 |             var sendCalled \u003d false\n121 |             \n    :\n144 |         \n145 |         await connection.disconnect()\n146 |         XCTAssertTrue(await connection.disconnectCalled)\n    |                                        `- error: actor-isolated property \u0027disconnectCalled\u0027 can not be referenced from a nonisolated autoclosure\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:149:40: error: actor-isolated property \u0027sendCalled\u0027 can not be referenced from a nonisolated autoclosure\n118 |             var connectCalled \u003d false\n119 |             var disconnectCalled \u003d false\n120 |             var sendCalled \u003d false\n    |                 `- note: property declared here\n121 |             \n122 |             var endpoint: String {\n    :\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n149 |         XCTAssertTrue(await connection.sendCalled)\n    |                                        `- error: actor-isolated property \u0027sendCalled\u0027 can not be referenced from a nonisolated autoclosure\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:151:41: error: actor-isolated property \u0027endpoint\u0027 can not be referenced from a nonisolated autoclosure\n120 |             var sendCalled \u003d false\n121 |             \n122 |             var endpoint: String {\n    |                 `- note: property declared here\n123 |                 return \"com.test.mockservice\"\n124 |             }\n    :\n149 |         XCTAssertTrue(await connection.sendCalled)\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n    |                                         `- error: actor-isolated property \u0027endpoint\u0027 can not be referenced from a nonisolated autoclosure\n152 |     }\n153 | }\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:143:23: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n141 |         \n142 |         try? await connection.connect()\n143 |         XCTAssertTrue(await connection.connectCalled)\n    |                       `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n144 |         \n145 |         await connection.disconnect()\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:146:23: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n144 |         \n145 |         await connection.disconnect()\n146 |         XCTAssertTrue(await connection.disconnectCalled)\n    |                       `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:149:23: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n147 |         \n148 |         await connection.send([\"test\": \"value\"], replyHandler: nil)\n149 |         XCTAssertTrue(await connection.sendCalled)\n    |                       `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n\nSources/XPCProtocolsCore/Tests/ModernXPCTests.swift:151:24: error: \u0027await\u0027 in an autoclosure that does not support concurrency\n149 |         XCTAssertTrue(await connection.sendCalled)\n150 |         \n151 |         XCTAssertEqual(await connection.endpoint, \"com.test.mockservice\")\n    |                        `- error: \u0027await\u0027 in an autoclosure that does not support concurrency\n152 |     }\n153 | }\n\nSources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift:61:23: error: cannot find \u0027XPCProtocolMigrationFactory\u0027 in scope\n 59 | \n 60 |     // Test conversion to UmbraErrors.Security.Protocols\n 61 |     let protocolError\u003dXPCProtocolMigrationFactory.convertErrorToSecurityProtocolError(nsError)\n    |                       `- error: cannot find \u0027XPCProtocolMigrationFactory\u0027 in scope\n 62 | \n 63 |     // Verify the error was properly converted to an internalError\n\nSources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift:74:17: error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n 72 |   func testDTOEquality() {\n 73 |     // Create service status DTOs\n 74 |     let status1\u003dXPCProtocolDTOs.ServiceStatusDTO(\n    |                 `- error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n 75 |       code: 200,\n 76 |       message: \"Service is running\",\n\nSources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift:82:17: error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n 80 |     )\n 81 | \n 82 |     let status2\u003dXPCProtocolDTOs.ServiceStatusDTO(\n    |                 `- error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n 83 |       code: 200,\n 84 |       message: \"Service is running\",\n\nSources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift:90:17: error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n 88 |     )\n 89 | \n 90 |     let status3\u003dXPCProtocolDTOs.ServiceStatusDTO(\n    |                 `- error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n 91 |       code: 500,\n 92 |       message: \"Service error\",\n\nSources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift:106:23: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n104 |   func testSecurityErrorConverter() {\n105 |     // Create an error\n106 |     let protocolError\u003dUmbraErrors.Security.Protocols\n    |                       `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n107 |       .internalError(\"Test error\")\n108 | \n\nSources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift:110:18: error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n108 | \n109 |     // Convert to DTO\n110 |     let errorDTO\u003dXPCProtocolDTOs.SecurityErrorConverter.toDTO(protocolError)\n    |                  `- error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n111 | \n112 |     // Verify conversion\n\nSources/XPCProtocolsCore/Tests/XPCProtocolsBasicTests.swift:116:24: error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n114 | \n115 |     // Convert back\n116 |     let convertedError\u003dXPCProtocolDTOs.SecurityErrorConverter.fromDTO(errorDTO)\n    |                        `- error: cannot find \u0027XPCProtocolDTOs\u0027 in scope\n117 | \n118 |     // Verify the round trip conversion\n"}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Tests:TestsLib","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.swiftmodule","label":"//Sources/XPCProtocolsCore/Tests:TestsLib","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":212}},"children":[{"progress":{"opaqueCount":213}},{"namedSet":{"id":"115"}}],"progress":{}}
{"id":{"namedSet":{"id":"115"}},"namedSetOfFiles":{"files":[{"name":"Sources/XPCProtocolsCore/Tests/XPCProtocolsCoreTests.test-runner.sh","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/XPCProtocolsCoreTests.test-runner.sh","pathPrefix":["bazel-out","darwin_arm64-fastbuild","bin"],"digest":"b7d303331626eb2486345bacb04eb872217aefa5d0d8d664f3c2419e4be0c7e6","length":"3571"}]}}
{"id":{"targetCompleted":{"label":"//Sources/XPCProtocolsCore/Tests:XPCProtocolsCoreTests","configuration":{"id":"f1a97c343e40facba59ac697c208a6557d79b25a59de679ed16b0152a99e7b0a"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Tests/TestsLib.swiftmodule","label":"//Sources/XPCProtocolsCore/Tests:TestsLib","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"outputGroup":[{"name":"default","fileSets":[{"id":"115"}],"incomplete":true}],"tag":["medium","moderate","noflaky","nolocal"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":213}},"children":[{"progress":{"opaqueCount":214}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.swiftmodule","label":"//Sources/Security/Implementation/KeyManagement:KeyManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.swiftmodule","label":"//Sources/Security/Implementation/KeyManagement:KeyManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-569"},"label":"//Sources/Security/Implementation/KeyManagement:KeyManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation/KeyManagement:KeyManagement","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement_objs/KeyGenerator.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","KeyManagement","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/KeyManagement/KeyGenerator.swift","Sources/Security/Implementation/KeyManagement/KeyLifecycle.swift","Sources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift","Sources/Security/Implementation/KeyManagement/KeyManagementImpl.swift","Sources/Security/Implementation/KeyManagement/KeyManager.swift","Sources/Security/Implementation/KeyManagement/KeyStore.swift","Sources/Security/Implementation/KeyManagement/KeyUtils.swift","Sources/Security/Implementation/KeyManagement/SecureKeyStorage.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:35.452076Z","endTime":"2025-03-25T22:47:35.452076Z"}}
{"id":{"progress":{"opaqueCount":214}},"children":[{"progress":{"opaqueCount":215}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/KeyManagement/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Implementation/KeyManagement:KeyManagement failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation/KeyManagement:KeyManagement) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":215}},"children":[{"progress":{"opaqueCount":216}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:77:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 75 |     keyType: KeyType,\n 76 |     purpose _: KeyPurpose\n 77 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 78 |     // Validate key size\n 79 |     guard isValidKeySize(bits, for: keyType) else {\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:104:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n102 |   func generateRandomData(\n103 |     length: Int\n104 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n105 |     // Validate length\n106 |     guard length \u003e 0 else {\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:132:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n130 |     keyType _: KeyType,\n131 |     purpose _: KeyPurpose\n132 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n133 |     // Validate input\n134 |     guard bits \u003e\u003d 128 else {\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:150:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n148 |     bits: Int,\n149 |     algorithm: String\n150 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n151 |     guard bits \u003e 0 else {\n152 |       return SecurityResultDTO(\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:225:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n223 |   /// - Returns: The generated random data or an error\n224 |   public func generateRandomData(length: Int) async\n225 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n226 |     guard length \u003e 0 else {\n227 |       return .failure(.invalidInput(\"Random data length must be greater than 0\"))\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:245:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n243 |   private func generateSymmetricKey(\n244 |     bits: Int\n245 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n246 |     // Calculate byte length (bits ÷ 8)\n247 |     let byteLength\u003dbits / 8\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:258:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n256 |   private func generateAsymmetricKey(\n257 |     bits _: Int\n258 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n259 |     // For demonstration purposes, we\u0027re just generating random data\n260 |     // In a real implementation, this would use proper asymmetric key generation\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:272:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n270 |   private func generateHMACKey(\n271 |     bits: Int\n272 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n273 |     // HMAC keys are essentially random data of the specified length\n274 |     generateRandomData(length: bits / 8)\n\nSources/Security/Implementation/KeyManagement/KeyLifecycle.swift:92:33: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 90 |     bits: Int,\n 91 |     purpose: KeyPurpose\n 92 |   ) -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 93 |     // First, check if the old key exists\n 94 |     let retrieveResult\u003dkeyStore.retrieveKey(withIdentifier: config.keyIdentifier)\n\nSources/Security/Implementation/KeyManagement/KeyLifecycle.swift:136:33: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n134 |   func retireKey(\n135 |     withIdentifier identifier: String\n136 |   ) -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n137 |     keyStore.deleteKey(withIdentifier: identifier)\n138 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:36:34: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 34 |   public func retrieveKey(\n 35 |     withIdentifier identifier: String\n 36 |   ) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e {\n    |                                  `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 37 |     if let key \u003d keyStore[identifier] {\n 38 |       return .success(key)\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:52:27: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 50 |     _ key: SecureBytes,\n 51 |     withIdentifier identifier: String\n 52 |   ) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e {\n    |                           `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 53 |     keyStore[identifier] \u003d key\n 54 |     return .success(())\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:62:27: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 60 |   public func deleteKey(\n 61 |     withIdentifier identifier: String\n 62 |   ) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e {\n    |                           `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 63 |     if keyStore.removeValue(forKey: identifier) !\u003d nil {\n 64 |       return .success(())\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:81:6: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 79 |     newKey: SecureBytes,\n 80 |     reencryptedData: SecureBytes?\n 81 |   ), SecurityProtocolError\u003e {\n    |      `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 82 |     // Check if the key exists\n 83 |     guard keyStore[identifier] !\u003d nil else {\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:103:62: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n101 |   /// Lists all available key identifiers.\n102 |   /// - Returns: An array of key identifiers or an error.\n103 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], SecurityProtocolError\u003e {\n    |                                                              `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n104 |     return .success(Array(keyStore.keys))\n105 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:20:15: warning: stored property \u0027keyStore\u0027 of \u0027Sendable\u0027-conforming class \u0027KeyManagementAdapter\u0027 is mutable; this is an error in the Swift 6 language mode\n 18 |   \n 19 |   /// Placeholder storage for keys (in a real implementation, this would use secure storage)\n 20 |   private var keyStore: [String: SecureBytes] \u003d [:]\n    |               `- warning: stored property \u0027keyStore\u0027 of \u0027Sendable\u0027-conforming class \u0027KeyManagementAdapter\u0027 is mutable; this is an error in the Swift 6 language mode\n 21 |   \n 22 |   // MARK: - Initialisation\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:14:30: error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 12 | \n 13 |   /// Storage provider for secure key storage\n 14 |   private let secureStorage: SecureStorageProtocol?\n    |                              `- error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 15 | \n 16 |   /// In-memory storage of keys (used as fallback when secureStorage is nil)\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:23:30: error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 21 |   /// Initialize with a specific secure storage implementation\n 22 |   /// - Parameter secureStorage: Implementation of SecureStorageProtocol\n 23 |   public init(secureStorage: SecureStorageProtocol?\u003dnil) {\n    |                              `- error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 24 |     self.secureStorage\u003dsecureStorage\n 25 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:30:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 28 | \n 29 |   public func retrieveKey(withIdentifier identifier: String) async\n 30 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 31 |     // If secure storage is available, use it\n 32 |     if let secureStorage {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:59:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 57 |     _ key: SecureBytes,\n 58 |     withIdentifier identifier: String\n 59 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 60 |     // If secure storage is available, use it\n 61 |     if let secureStorage {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:79:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 77 | \n 78 |   public func deleteKey(withIdentifier identifier: String) async\n 79 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 80 |     // If secure storage is available, use it\n 81 |     if let secureStorage {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:118:18: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n116 |     newKey: SecureBytes,\n117 |     reencryptedData: SecureBytes?\n118 |   ), UmbraErrors.Security.Protocols\u003e {\n    |                  `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n119 |     // Retrieve the old key\n120 |     let oldKeyResult\u003dawait retrieveKey(withIdentifier: identifier)\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:190:74: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n188 |   }\n189 | \n190 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n191 |     // If secure storage is available, it should provide a way to list keys\n192 |     // For now, we\u0027ll just return the in-memory keys\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:10:33: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n  8 | /// This is a basic implementation that stores keys in memory for demonstration purposes\n  9 | /// In a real implementation, keys would be stored securely in a platform-specific secure storage\n 10 | public actor KeyManagementImpl: KeyManagementProtocol {\n    |                                 `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 11 |   // MARK: - Properties\n 12 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:428:48: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n426 |       key: SecureBytes,\n427 |       config: SecurityConfigDTO\n428 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n    |                                                `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n429 | \n430 |     func encryptSymmetricDTO(\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:427:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n425 |       data: SecureBytes,\n426 |       key: SecureBytes,\n427 |       config: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n428 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n429 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:434:48: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n432 |       key: SecureBytes,\n433 |       config: SecurityConfigDTO\n434 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n    |                                                `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n435 |   }\n436 | }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:433:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n431 |       data: SecureBytes,\n432 |       key: SecureBytes,\n433 |       config: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n434 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n435 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:109:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n107 |     keyType: KeyType,\n108 |     purpose _: KeyPurpose\n109 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n110 |     // Determine the algorithm to use based on key type\n111 |     var algorithm: String\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:141:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n139 |   /// - Returns: The key if found, or an error if not found\n140 |   public func retrieveKey(withIdentifier identifier: String) async\n141 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n142 |     await keyStore.retrieveKey(withIdentifier: identifier)\n143 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:153:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n151 |     _ key: SecureBytes,\n152 |     withIdentifier identifier: String\n153 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n154 |     // Validate the key before storing\n155 |     guard key.count \u003e\u003d 16 else {\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:168:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n166 |   /// - Returns: Success or an error\n167 |   public func deleteKey(withIdentifier identifier: String) async\n168 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n169 |     await keyStore.deleteSecurely(identifier: identifier)\n170 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:183:18: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n181 |     newKey: SecureBytes,\n182 |     reencryptedData: SecureBytes?\n183 |   ), UmbraErrors.Security.Protocols\u003e {\n    |                  `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n184 |     // First, retrieve the old key\n185 |     let retrieveResult\u003dawait keyStore.retrieveKey(withIdentifier: identifier)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:268:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n266 |     bits _: Int,\n267 |     purpose _: KeyPurpose\n268 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n269 |     // First retrieve the old key\n270 |     let retrieveResult\u003dawait retrieveKey(withIdentifier: config.keyIdentifier)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:327:74: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n325 |   /// Lists all available key identifiers\n326 |   /// - Returns: An array of key identifiers\n327 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n328 |     await keyStore.listKeyIdentifiers()\n329 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:335:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n333 |   /// - Returns: The generated random data or an error\n334 |   public func generateRandomData(length: Int) async\n335 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n336 |     // Validate length\n337 |     guard length \u003e 0 else {\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:57:32: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 55 | /// Implementation of the KeyManagementProtocol that provides a unified interface\n 56 | /// to key management services.\n 57 | public final class KeyManager: KeyManagementProtocol {\n    |                                `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 58 |   // MARK: - Properties\n 59 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:351:22: error: cannot find type \u0027SecurityUtils\u0027 in scope\n349 | private final class SecurityUtilsAdapter: KeyManager.SecurityUtilsProtocol {\n350 |   // Create a new instance of SecurityUtils with a CryptoServiceCore\n351 |   private let utils: SecurityUtils\n    |                      `- error: cannot find type \u0027SecurityUtils\u0027 in scope\n352 | \n353 |   init() {\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:363:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n361 |     key: SecureBytes,\n362 |     config: SecurityConfigDTO\n363 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n364 |     let result\u003dawait utils.decryptSymmetricDTO(data: data, key: key, config: config)\n365 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:362:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n360 |     data: SecureBytes,\n361 |     key: SecureBytes,\n362 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n363 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n364 |     let result\u003dawait utils.decryptSymmetricDTO(data: data, key: key, config: config)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:381:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n379 |     key: SecureBytes,\n380 |     config: SecurityConfigDTO\n381 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n382 |     let result\u003dawait utils.encryptSymmetricDTO(data: data, key: key, config: config)\n383 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:380:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n378 |     data: SecureBytes,\n379 |     key: SecureBytes,\n380 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n381 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n382 |     let result\u003dawait utils.encryptSymmetricDTO(data: data, key: key, config: config)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:399:23: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n397 | \n398 | /// Extension to add key management specific errors\n399 | extension UmbraErrors.Security.Protocols {\n    |                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n400 |   /// Error indicating a key was not found\n401 |   /// - Parameters:\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:77:33: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 75 |     _ key: SecureBytes,\n 76 |     withIdentifier identifier: String\n 77 |   ) -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 78 |     // Validate inputs\n 79 |     guard !identifier.isEmpty else {\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:108:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n106 |   /// - Returns: The key if found, or an error if the key doesn\u0027t exist\n107 |   func retrieveKey(withIdentifier identifier: String)\n108 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |     var result: Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e \u003d .failure(\n110 |       .keyNotFound(identifier: identifier, innerError: nil)\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:127:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n125 |   /// - Returns: Success if the key was deleted, failure otherwise\n126 |   func deleteKey(withIdentifier identifier: String)\n127 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n128 |     var result: Result\u003cVoid, UmbraErrors.Security.Protocols\u003e \u003d .failure(\n129 |       .keyNotFound(identifier: identifier, innerError: nil)\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:146:61: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n144 |   /// Lists all key identifiers stored in the key store\n145 |   /// - Returns: An array of key identifiers\n146 |   func listKeyIdentifiers() -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                             `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n147 |     var identifiers: [String]\u003d[]\n148 | \n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:89:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 87 |     iterations: Int,\n 88 |     keyLengthBytes: Int\n 89 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 90 |     // Validate parameters\n 91 |     guard !password.isEmpty else {\n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:148:35: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n146 |     key: SecureBytes,\n147 |     keyType: KeyType\n148 |   ) -\u003e Result\u003cString, UmbraErrors.Security.Protocols\u003e {\n    |                                   `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n149 |     // This is a placeholder implementation\n150 |     // In a real implementation, this would create a proper PEM format\n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:171:65: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n169 |   func keyFromPEM(\n170 |     pemString: String\n171 |   ) -\u003e Result\u003c(key: SecureBytes, keyType: KeyType), UmbraErrors.Security.Protocols\u003e {\n    |                                                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n172 |     // This is a placeholder implementation\n173 |     // In a real implementation, this would properly parse PEM format\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:123:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n121 |   /// - Returns: A result containing the key or an error\n122 |   public func retrieveKey(withIdentifier identifier: String) async\n123 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n124 |     if let key\u003dawait get(identifier: identifier) {\n125 |       .success(key)\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:139:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n137 |     data: SecureBytes,\n138 |     identifier: String\n139 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n140 |     // Check if key already exists\n141 |     if await contains(identifier: identifier) {\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:153:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n151 |   /// - Returns: A result indicating success or an error\n152 |   public func deleteSecurely(identifier: String) async\n153 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n154 |     if await contains(identifier: identifier) {\n155 |       await delete(identifier: identifier)\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:164:74: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n162 |   /// List all key identifiers\n163 |   /// - Returns: A result containing an array of key identifiers or an error\n164 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n165 |     let identifiers\u003dawait allIdentifiers()\n166 |     return .success(identifiers)\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:173:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n171 |   /// - Returns: The data or an error\n172 |   public func retrieveSecurely(identifier: String) async\n173 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n174 |     await retrieveKey(withIdentifier: identifier)\n175 |   }\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:187:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n185 |     _ key: SecureBytes,\n186 |     withIdentifier identifier: String\n187 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n188 |     await storeSecurely(data: key, identifier: identifier)\n189 |   }\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:77:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 75 |     keyType: KeyType,\n 76 |     purpose _: KeyPurpose\n 77 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 78 |     // Validate key size\n 79 |     guard isValidKeySize(bits, for: keyType) else {\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:104:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n102 |   func generateRandomData(\n103 |     length: Int\n104 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n105 |     // Validate length\n106 |     guard length \u003e 0 else {\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:132:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n130 |     keyType _: KeyType,\n131 |     purpose _: KeyPurpose\n132 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n133 |     // Validate input\n134 |     guard bits \u003e\u003d 128 else {\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:150:14: error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n148 |     bits: Int,\n149 |     algorithm: String\n150 |   ) async -\u003e SecurityResultDTO {\n    |              `- error: cannot find type \u0027SecurityResultDTO\u0027 in scope\n151 |     guard bits \u003e 0 else {\n152 |       return SecurityResultDTO(\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:225:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n223 |   /// - Returns: The generated random data or an error\n224 |   public func generateRandomData(length: Int) async\n225 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n226 |     guard length \u003e 0 else {\n227 |       return .failure(.invalidInput(\"Random data length must be greater than 0\"))\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:245:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n243 |   private func generateSymmetricKey(\n244 |     bits: Int\n245 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n246 |     // Calculate byte length (bits ÷ 8)\n247 |     let byteLength\u003dbits / 8\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:258:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n256 |   private func generateAsymmetricKey(\n257 |     bits _: Int\n258 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n259 |     // For demonstration purposes, we\u0027re just generating random data\n260 |     // In a real implementation, this would use proper asymmetric key generation\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:272:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n270 |   private func generateHMACKey(\n271 |     bits: Int\n272 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n273 |     // HMAC keys are essentially random data of the specified length\n274 |     generateRandomData(length: bits / 8)\n\nSources/Security/Implementation/KeyManagement/KeyGenerator.swift:310:13: error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n308 |       return randomBytes\n309 |     } else {\n310 |       throw UmbraErrors.Security.Protocols\n    |             `- error: module \u0027UmbraErrors\u0027 has no member named \u0027Security\u0027\n311 |         .randomGenerationFailed(\"Failed to generate secure random bytes: \\(status)\")\n312 |     }\n\nSources/Security/Implementation/KeyManagement/KeyLifecycle.swift:92:33: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 90 |     bits: Int,\n 91 |     purpose: KeyPurpose\n 92 |   ) -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 93 |     // First, check if the old key exists\n 94 |     let retrieveResult\u003dkeyStore.retrieveKey(withIdentifier: config.keyIdentifier)\n\nSources/Security/Implementation/KeyManagement/KeyLifecycle.swift:136:33: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n134 |   func retireKey(\n135 |     withIdentifier identifier: String\n136 |   ) -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n137 |     keyStore.deleteKey(withIdentifier: identifier)\n138 |   }\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:108:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n106 |   /// - Returns: The key if found, or an error if the key doesn\u0027t exist\n107 |   func retrieveKey(withIdentifier identifier: String)\n108 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |     var result: Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e \u003d .failure(\n110 |       .keyNotFound(identifier: identifier, innerError: nil)\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:77:33: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 75 |     _ key: SecureBytes,\n 76 |     withIdentifier identifier: String\n 77 |   ) -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 78 |     // Validate inputs\n 79 |     guard !identifier.isEmpty else {\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:127:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n125 |   /// - Returns: Success if the key was deleted, failure otherwise\n126 |   func deleteKey(withIdentifier identifier: String)\n127 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n128 |     var result: Result\u003cVoid, UmbraErrors.Security.Protocols\u003e \u003d .failure(\n129 |       .keyNotFound(identifier: identifier, innerError: nil)\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:36:34: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 34 |   public func retrieveKey(\n 35 |     withIdentifier identifier: String\n 36 |   ) async -\u003e Result\u003cSecureBytes, SecurityProtocolError\u003e {\n    |                                  `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 37 |     if let key \u003d keyStore[identifier] {\n 38 |       return .success(key)\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:52:27: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 50 |     _ key: SecureBytes,\n 51 |     withIdentifier identifier: String\n 52 |   ) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e {\n    |                           `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 53 |     keyStore[identifier] \u003d key\n 54 |     return .success(())\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:62:27: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 60 |   public func deleteKey(\n 61 |     withIdentifier identifier: String\n 62 |   ) async -\u003e Result\u003cVoid, SecurityProtocolError\u003e {\n    |                           `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 63 |     if keyStore.removeValue(forKey: identifier) !\u003d nil {\n 64 |       return .success(())\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:81:6: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 79 |     newKey: SecureBytes,\n 80 |     reencryptedData: SecureBytes?\n 81 |   ), SecurityProtocolError\u003e {\n    |      `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n 82 |     // Check if the key exists\n 83 |     guard keyStore[identifier] !\u003d nil else {\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:103:62: error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n101 |   /// Lists all available key identifiers.\n102 |   /// - Returns: An array of key identifiers or an error.\n103 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], SecurityProtocolError\u003e {\n    |                                                              `- error: cannot find type \u0027SecurityProtocolError\u0027 in scope\n104 |     return .success(Array(keyStore.keys))\n105 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManagementAdapter.swift:20:15: warning: stored property \u0027keyStore\u0027 of \u0027Sendable\u0027-conforming class \u0027KeyManagementAdapter\u0027 is mutable; this is an error in the Swift 6 language mode\n 18 |   \n 19 |   /// Placeholder storage for keys (in a real implementation, this would use secure storage)\n 20 |   private var keyStore: [String: SecureBytes] \u003d [:]\n    |               `- warning: stored property \u0027keyStore\u0027 of \u0027Sendable\u0027-conforming class \u0027KeyManagementAdapter\u0027 is mutable; this is an error in the Swift 6 language mode\n 21 |   \n 22 |   // MARK: - Initialisation\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:14:30: error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 12 | \n 13 |   /// Storage provider for secure key storage\n 14 |   private let secureStorage: SecureStorageProtocol?\n    |                              `- error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 15 | \n 16 |   /// In-memory storage of keys (used as fallback when secureStorage is nil)\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:23:30: error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 21 |   /// Initialize with a specific secure storage implementation\n 22 |   /// - Parameter secureStorage: Implementation of SecureStorageProtocol\n 23 |   public init(secureStorage: SecureStorageProtocol?\u003dnil) {\n    |                              `- error: cannot find type \u0027SecureStorageProtocol\u0027 in scope\n 24 |     self.secureStorage\u003dsecureStorage\n 25 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:30:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 28 | \n 29 |   public func retrieveKey(withIdentifier identifier: String) async\n 30 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 31 |     // If secure storage is available, use it\n 32 |     if let secureStorage {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:59:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 57 |     _ key: SecureBytes,\n 58 |     withIdentifier identifier: String\n 59 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 60 |     // If secure storage is available, use it\n 61 |     if let secureStorage {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:79:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 77 | \n 78 |   public func deleteKey(withIdentifier identifier: String) async\n 79 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 80 |     // If secure storage is available, use it\n 81 |     if let secureStorage {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:118:18: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n116 |     newKey: SecureBytes,\n117 |     reencryptedData: SecureBytes?\n118 |   ), UmbraErrors.Security.Protocols\u003e {\n    |                  `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n119 |     // Retrieve the old key\n120 |     let oldKeyResult\u003dawait retrieveKey(withIdentifier: identifier)\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:190:74: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n188 |   }\n189 | \n190 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n191 |     // If secure storage is available, it should provide a way to list keys\n192 |     // For now, we\u0027ll just return the in-memory keys\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:10:33: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n  8 | /// This is a basic implementation that stores keys in memory for demonstration purposes\n  9 | /// In a real implementation, keys would be stored securely in a platform-specific secure storage\n 10 | public actor KeyManagementImpl: KeyManagementProtocol {\n    |                                 `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 11 |   // MARK: - Properties\n 12 | \n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:132:19: error: cannot infer contextual base in reference to member \u0027symmetric\u0027\n130 |       let keyResult\u003dawait KeyGenerator().generateKey(\n131 |         bits: 256,\n132 |         keyType: .symmetric,\n    |                   `- error: cannot infer contextual base in reference to member \u0027symmetric\u0027\n133 |         purpose: .encryption\n134 |       )\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:133:19: error: cannot infer contextual base in reference to member \u0027encryption\u0027\n131 |         bits: 256,\n132 |         keyType: .symmetric,\n133 |         purpose: .encryption\n    |                   `- error: cannot infer contextual base in reference to member \u0027encryption\u0027\n134 |       )\n135 |       guard case let .success(newKey)\u003dkeyResult else {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:146:27: error: cannot find \u0027CryptoServiceCore\u0027 in scope\n144 |       if let existingCiphertext\u003ddataToReencrypt {\n145 |         // First decrypt with old key\n146 |         let cryptoService\u003dCryptoServiceCore()\n    |                           `- error: cannot find \u0027CryptoServiceCore\u0027 in scope\n147 |         let decryptResult\u003dawait cryptoService.decryptSymmetric(\n148 |           data: existingCiphertext,\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:150:19: error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n148 |           data: existingCiphertext,\n149 |           key: oldKey,\n150 |           config: SecurityConfigDTO(algorithm: \"AES-GCM\", keySizeInBits: 256)\n    |                   `- error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n151 |         )\n152 |         guard case let .success(decryptedData)\u003ddecryptResult else {\n\nSources/Security/Implementation/KeyManagement/KeyManagementImpl.swift:163:19: error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n161 |           data: decryptedData,\n162 |           key: newKey,\n163 |           config: SecurityConfigDTO(algorithm: \"AES-GCM\", keySizeInBits: 256)\n    |                   `- error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n164 |         )\n165 |         guard case let .success(encryptedData)\u003dencryptResult else {\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:428:48: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n426 |       key: SecureBytes,\n427 |       config: SecurityConfigDTO\n428 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n    |                                                `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n429 | \n430 |     func encryptSymmetricDTO(\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:427:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n425 |       data: SecureBytes,\n426 |       key: SecureBytes,\n427 |       config: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n428 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n429 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:434:48: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n432 |       key: SecureBytes,\n433 |       config: SecurityConfigDTO\n434 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n    |                                                `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n435 |   }\n436 | }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:433:15: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n431 |       data: SecureBytes,\n432 |       key: SecureBytes,\n433 |       config: SecurityConfigDTO\n    |               `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n434 |     ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e\n435 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:109:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n107 |     keyType: KeyType,\n108 |     purpose _: KeyPurpose\n109 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n110 |     // Determine the algorithm to use based on key type\n111 |     var algorithm: String\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:141:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n139 |   /// - Returns: The key if found, or an error if not found\n140 |   public func retrieveKey(withIdentifier identifier: String) async\n141 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n142 |     await keyStore.retrieveKey(withIdentifier: identifier)\n143 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:153:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n151 |     _ key: SecureBytes,\n152 |     withIdentifier identifier: String\n153 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n154 |     // Validate the key before storing\n155 |     guard key.count \u003e\u003d 16 else {\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:168:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n166 |   /// - Returns: Success or an error\n167 |   public func deleteKey(withIdentifier identifier: String) async\n168 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n169 |     await keyStore.deleteSecurely(identifier: identifier)\n170 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:183:18: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n181 |     newKey: SecureBytes,\n182 |     reencryptedData: SecureBytes?\n183 |   ), UmbraErrors.Security.Protocols\u003e {\n    |                  `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n184 |     // First, retrieve the old key\n185 |     let retrieveResult\u003dawait keyStore.retrieveKey(withIdentifier: identifier)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:268:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n266 |     bits _: Int,\n267 |     purpose _: KeyPurpose\n268 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n269 |     // First retrieve the old key\n270 |     let retrieveResult\u003dawait retrieveKey(withIdentifier: config.keyIdentifier)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:327:74: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n325 |   /// Lists all available key identifiers\n326 |   /// - Returns: An array of key identifiers\n327 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n328 |     await keyStore.listKeyIdentifiers()\n329 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:335:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n333 |   /// - Returns: The generated random data or an error\n334 |   public func generateRandomData(length: Int) async\n335 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n336 |     // Validate length\n337 |     guard length \u003e 0 else {\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:57:32: error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 55 | /// Implementation of the KeyManagementProtocol that provides a unified interface\n 56 | /// to key management services.\n 57 | public final class KeyManager: KeyManagementProtocol {\n    |                                `- error: cannot find type \u0027KeyManagementProtocol\u0027 in scope\n 58 |   // MARK: - Properties\n 59 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:351:22: error: cannot find type \u0027SecurityUtils\u0027 in scope\n349 | private final class SecurityUtilsAdapter: KeyManager.SecurityUtilsProtocol {\n350 |   // Create a new instance of SecurityUtils with a CryptoServiceCore\n351 |   private let utils: SecurityUtils\n    |                      `- error: cannot find type \u0027SecurityUtils\u0027 in scope\n352 | \n353 |   init() {\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:363:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n361 |     key: SecureBytes,\n362 |     config: SecurityConfigDTO\n363 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n364 |     let result\u003dawait utils.decryptSymmetricDTO(data: data, key: key, config: config)\n365 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:362:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n360 |     data: SecureBytes,\n361 |     key: SecureBytes,\n362 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n363 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n364 |     let result\u003dawait utils.decryptSymmetricDTO(data: data, key: key, config: config)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:381:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n379 |     key: SecureBytes,\n380 |     config: SecurityConfigDTO\n381 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n382 |     let result\u003dawait utils.encryptSymmetricDTO(data: data, key: key, config: config)\n383 | \n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:380:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n378 |     data: SecureBytes,\n379 |     key: SecureBytes,\n380 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n381 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n382 |     let result\u003dawait utils.encryptSymmetricDTO(data: data, key: key, config: config)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:399:23: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n397 | \n398 | /// Extension to add key management specific errors\n399 | extension UmbraErrors.Security.Protocols {\n    |                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n400 |   /// Error indicating a key was not found\n401 |   /// - Parameters:\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:123:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n121 |   /// - Returns: A result containing the key or an error\n122 |   public func retrieveKey(withIdentifier identifier: String) async\n123 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n124 |     if let key\u003dawait get(identifier: identifier) {\n125 |       .success(key)\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:206:30: error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n204 |         if let dataToReencrypt {\n205 |           // For re-encryption, we need to decrypt with the old key and encrypt with the new key\n206 |           let retrieveConfig\u003dSecurityConfigDTO(algorithm: \"AES-GCM\", keySizeInBits: 256)\n    |                              `- error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n207 |           let decryptResult\u003dtry? await keyUtils.decryptSymmetricDTO(\n208 |             data: dataToReencrypt,\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:187:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n185 |     _ key: SecureBytes,\n186 |     withIdentifier identifier: String\n187 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n188 |     await storeSecurely(data: key, identifier: identifier)\n189 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:277:30: error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n275 |         if let dataToReencrypt\u003dconfig.dataToReencrypt {\n276 |           // For re-encryption, we need to decrypt with the old key and encrypt with the new key\n277 |           let retrieveConfig\u003dSecurityConfigDTO(algorithm: \"AES-GCM\", keySizeInBits: 256)\n    |                              `- error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n278 |           let decryptResult\u003dtry? await keyUtils.decryptSymmetricDTO(\n279 |             data: dataToReencrypt,\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:300:20: error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n298 |         // Generate a new key of the same size\n299 |         let keySize\u003doldKey.count * 8\n300 |         let config\u003dSecurityConfigDTO(algorithm: \"AES\", keySizeInBits: keySize)\n    |                    `- error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n301 |         let generateResult\u003dawait keyGenerator.generateKey(\n302 |           bits: keySize,\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:355:23: error: cannot find \u0027CryptoServiceCore\u0027 in scope\n353 |   init() {\n354 |     // Create a CryptoServiceCore instance to pass to SecurityUtils\n355 |     let cryptoService\u003dCryptoServiceCore()\n    |                       `- error: cannot find \u0027CryptoServiceCore\u0027 in scope\n356 |     utils\u003dSecurityUtils(cryptoService: cryptoService)\n357 |   }\n\nSources/Security/Implementation/KeyManagement/KeyManager.swift:356:11: error: cannot find \u0027SecurityUtils\u0027 in scope\n354 |     // Create a CryptoServiceCore instance to pass to SecurityUtils\n355 |     let cryptoService\u003dCryptoServiceCore()\n356 |     utils\u003dSecurityUtils(cryptoService: cryptoService)\n    |           `- error: cannot find \u0027SecurityUtils\u0027 in scope\n357 |   }\n358 | \n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:146:61: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n144 |   /// Lists all key identifiers stored in the key store\n145 |   /// - Returns: An array of key identifiers\n146 |   func listKeyIdentifiers() -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                             `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n147 |     var identifiers: [String]\u003d[]\n148 | \n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:83:42: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 81 |     }\n 82 | \n 83 |     var result: Result\u003cVoid, UmbraErrors.Security.Protocols\u003e \u003d .success(())\n    |                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 84 | \n 85 |     queue.sync(flags: .barrier) {\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:88:28: error: cannot infer contextual base in reference to member \u0027invalidInput\u0027\n 86 |       // Check if the key already exists\n 87 |       if self.keyStore[identifier] !\u003d nil {\n 88 |         result \u003d .failure(.invalidInput(\"Key with identifier \\(identifier) already exists\"))\n    |                            `- error: cannot infer contextual base in reference to member \u0027invalidInput\u0027\n 89 |         return\n 90 |       }\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:109:49: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n107 |   func retrieveKey(withIdentifier identifier: String)\n108 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n109 |     var result: Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e \u003d .failure(\n    |                                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n110 |       .keyNotFound(identifier: identifier, innerError: nil)\n111 |     )\n\nSources/Security/Implementation/KeyManagement/KeyStore.swift:128:42: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n126 |   func deleteKey(withIdentifier identifier: String)\n127 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n128 |     var result: Result\u003cVoid, UmbraErrors.Security.Protocols\u003e \u003d .failure(\n    |                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n129 |       .keyNotFound(identifier: identifier, innerError: nil)\n130 |     )\n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:89:40: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 87 |     iterations: Int,\n 88 |     keyLengthBytes: Int\n 89 |   ) -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                        `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 90 |     // Validate parameters\n 91 |     guard !password.isEmpty else {\n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:148:35: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n146 |     key: SecureBytes,\n147 |     keyType: KeyType\n148 |   ) -\u003e Result\u003cString, UmbraErrors.Security.Protocols\u003e {\n    |                                   `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n149 |     // This is a placeholder implementation\n150 |     // In a real implementation, this would create a proper PEM format\n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:171:65: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n169 |   func keyFromPEM(\n170 |     pemString: String\n171 |   ) -\u003e Result\u003c(key: SecureBytes, keyType: KeyType), UmbraErrors.Security.Protocols\u003e {\n    |                                                                 `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n172 |     // This is a placeholder implementation\n173 |     // In a real implementation, this would properly parse PEM format\n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:118:10: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n116 | \n117 |     // Access salt bytes and append\n118 |     salt.withUnsafeBytes { saltBytes in\n    |          `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n119 |       combinedBytes.append(contentsOf: saltBytes)\n120 |     }\n\nSources/Security/Implementation/KeyManagement/KeyUtils.swift:154:9: error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n152 |     // Convert to base64\n153 |     var base64\u003d\"\"\n154 |     key.withUnsafeBytes { keyBytes in\n    |         `- error: value of type \u0027SecureBytes\u0027 has no member \u0027withUnsafeBytes\u0027\n155 |       let data\u003dData(keyBytes)\n156 |       base64\u003ddata.base64EncodedString()\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:139:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n137 |     data: SecureBytes,\n138 |     identifier: String\n139 |   ) async -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n140 |     // Check if key already exists\n141 |     if await contains(identifier: identifier) {\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:153:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n151 |   /// - Returns: A result indicating success or an error\n152 |   public func deleteSecurely(identifier: String) async\n153 |   -\u003e Result\u003cVoid, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n154 |     if await contains(identifier: identifier) {\n155 |       await delete(identifier: identifier)\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:164:74: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n162 |   /// List all key identifiers\n163 |   /// - Returns: A result containing an array of key identifiers or an error\n164 |   public func listKeyIdentifiers() async -\u003e Result\u003c[String], UmbraErrors.Security.Protocols\u003e {\n    |                                                                          `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n165 |     let identifiers\u003dawait allIdentifiers()\n166 |     return .success(identifiers)\n\nSources/Security/Implementation/KeyManagement/SecureKeyStorage.swift:173:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n171 |   /// - Returns: The data or an error\n172 |   public func retrieveSecurely(identifier: String) async\n173 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n174 |     await retrieveKey(withIdentifier: identifier)\n175 |   }\n"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/KeyManagement:KeyManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.swiftmodule","label":"//Sources/Security/Implementation/KeyManagement:KeyManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"targetCompleted":{"label":"//Sources/Security:Security","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Implementation.swiftmodule","label":"//Sources/Security/Implementation:Implementation","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/CryptoServices.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices:CryptoServices","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/KeyManagement/KeyManagement.swiftmodule","label":"//Sources/Security/Implementation/KeyManagement:KeyManagement","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/Provider/Provider.swiftmodule","label":"//Sources/Security/Implementation/Provider:Provider","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":216}},"children":[{"progress":{"opaqueCount":217}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-572"},"label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric_objs/SymmetricCrypto.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Ibazel-out/darwin_arm64-fastbuild/bin/external/rules_swift_package_manager++swift_deps+swiftpkg_cryptoswift","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Symmetric","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:35.713652Z","endTime":"2025-03-25T22:47:35.713652Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":217}},"children":[{"progress":{"opaqueCount":218}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/CryptoServices/Symmetric/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation/CryptoServices/Symmetric:Symmetric) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Symmetric/Symmetric.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:126:40: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n124 |         return SecurityResultDTO(\n125 |           status: .failure,\n126 |           error: SecurityProtocolError.operationFailed(\"Encryption algorithm not supported: \\(algorithm)\"),\n    |                                        `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n127 |           metadata: [\"details\": \"The specified algorithm is not currently implemented\"]\n128 |         )\n\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:133:38: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n131 |       return SecurityResultDTO(\n132 |         status: .failure,\n133 |         error: SecurityProtocolError.operationFailed(\"Encryption failed: \\(error.localizedDescription)\"),\n    |                                      `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n134 |         metadata: [\"details\": \"Error during symmetric encryption: \\(error)\"]\n135 |       )\n\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:190:53: error: reference to member \u0027toArray\u0027 cannot be resolved without a contextual type\n188 | \n189 |         // Extract IV and ciphertext\n190 |         let iv \u003d SecureBytes(bytes: data.prefix(12).toArray())\n    |                                                     `- error: reference to member \u0027toArray\u0027 cannot be resolved without a contextual type\n191 |         let ciphertext \u003d SecureBytes(bytes: data.suffix(from: 12).toArray())\n192 | \n\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:191:56: error: extraneous argument label \u0027from:\u0027 in call\n189 |         // Extract IV and ciphertext\n190 |         let iv \u003d SecureBytes(bytes: data.prefix(12).toArray())\n191 |         let ciphertext \u003d SecureBytes(bytes: data.suffix(from: 12).toArray())\n    |                                                        `- error: extraneous argument label \u0027from:\u0027 in call\n192 | \n193 |         // Check if this is our simulated encryption\n\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:191:67: error: value of type \u0027[SecureBytes.Element]\u0027 (aka \u0027Array\u003cUInt8\u003e\u0027) has no member \u0027toArray\u0027\n189 |         // Extract IV and ciphertext\n190 |         let iv \u003d SecureBytes(bytes: data.prefix(12).toArray())\n191 |         let ciphertext \u003d SecureBytes(bytes: data.suffix(from: 12).toArray())\n    |                                                                   `- error: value of type \u0027[SecureBytes.Element]\u0027 (aka \u0027Array\u003cUInt8\u003e\u0027) has no member \u0027toArray\u0027\n192 | \n193 |         // Check if this is our simulated encryption\n\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:212:40: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n210 |         return SecurityResultDTO(\n211 |           status: .failure,\n212 |           error: SecurityProtocolError.operationFailed(\"Decryption failed: invalid data format\"),\n    |                                        `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n213 |           metadata: [\"details\": \"The encrypted data is not in the expected format\"]\n214 |         )\n\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:219:40: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n217 |         return SecurityResultDTO(\n218 |           status: .failure,\n219 |           error: SecurityProtocolError.operationFailed(\"Decryption algorithm not supported: \\(algorithm)\"),\n    |                                        `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n220 |           metadata: [\"details\": \"The specified algorithm is not currently implemented\"]\n221 |         )\n\nSources/Security/Implementation/CryptoServices/Symmetric/SymmetricCrypto.swift:226:38: error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n224 |       return SecurityResultDTO(\n225 |         status: .failure,\n226 |         error: SecurityProtocolError.operationFailed(\"Decryption failed: \\(error.localizedDescription)\"),\n    |                                      `- error: type \u0027SecurityProtocolError\u0027 has no member \u0027operationFailed\u0027\n227 |         metadata: [\"details\": \"Error during symmetric decryption: \\(error)\"]\n228 |       )\n"}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-575"},"label":"//Sources/Security/Implementation/CryptoServices/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Security/Implementation/CryptoServices/Core:Core","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core_objs/CryptoError.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Errors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Core/Protocols","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Core","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Security/Implementation/CryptoServices/Core/CryptoError.swift","Sources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift","Sources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift","Sources/Security/Implementation/CryptoServices/Core/KeyDerivationService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:35.778476Z","endTime":"2025-03-25T22:47:35.778476Z"}}
{"id":{"progress":{"opaqueCount":218}},"children":[{"progress":{"opaqueCount":219}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Security/Implementation/CryptoServices/Core/BUILD.bazel:3:20: Compiling Swift module //Sources/Security/Implementation/CryptoServices/Core:Core failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Security/Implementation/CryptoServices/Core:Core) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\n"}}
{"id":{"progress":{"opaqueCount":219}},"children":[{"progress":{"opaqueCount":220}}],"progress":{"stderr":"error: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:18:79: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 16 |   /// - Parameter error: Implementation-specific CryptoError to map\n 17 |   /// - Returns: Equivalent UmbraErrors.Crypto.Core instance\n 18 |   public static func mapToCanonicalError(_ error: CryptoError) -\u003e UmbraErrors.Crypto.Core {\n    |                                                                               `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 19 |     switch error {\n 20 |       case let .encryptionError(reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:102:68: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n100 |   /// - Parameter error: Canonical UmbraErrors.Crypto.Core error to map\n101 |   /// - Returns: Best-fit equivalent CryptoError instance for the SecurityImplementation module\n102 |   public static func mapToImplementationError(_ error: UmbraErrors.Crypto.Core) -\u003e CryptoError {\n    |                                                                    `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n103 |     switch error {\n104 |       case let .encryptionFailed(algorithm, reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:184:44: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n182 |   ///\n183 |   /// - Returns: Canonical error type for use with UmbraCore error handling\n184 |   public func toCanonical() -\u003e UmbraErrors.Crypto.Core {\n    |                                            `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n185 |     CryptoErrorMapper.mapToCanonicalError(self)\n186 |   }\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:189:23: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n187 | }\n188 | \n189 | extension UmbraErrors.Crypto.Core {\n    |                       `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n190 |   /// Converts a canonical Crypto.Core error to implementation-specific CryptoError\n191 |   ///\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:28:32: error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 26 | \n 27 |   /// Service for symmetric encryption operations\n 28 |   private let symmetricCrypto: SymmetricCrypto\n    |                                `- error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 29 | \n 30 |   /// Service for asymmetric encryption operations\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:31:33: error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 29 | \n 30 |   /// Service for asymmetric encryption operations\n 31 |   private let asymmetricCrypto: AsymmetricCrypto\n    |                                 `- error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 32 | \n 33 |   /// Service for hashing operations\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:34:31: error: cannot find type \u0027HashingService\u0027 in scope\n 32 | \n 33 |   /// Service for hashing operations\n 34 |   private let hashingService: HashingService\n    |                               `- error: cannot find type \u0027HashingService\u0027 in scope\n 35 | \n 36 |   /// Service for key generation\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:37:29: error: cannot find type \u0027KeyGenerator\u0027 in scope\n 35 | \n 36 |   /// Service for key generation\n 37 |   private let keyGenerator: KeyGenerator\n    |                             `- error: cannot find type \u0027KeyGenerator\u0027 in scope\n 38 | \n 39 |   // MARK: - Initialisation\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:43:22: error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 41 |   /// Creates a new crypto service coordinator\n 42 |   init(\n 43 |     symmetricCrypto: SymmetricCrypto\u003dSymmetricCrypto(),\n    |                      `- error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n 45 |     hashingService: HashingService\u003dHashingService(),\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:44:23: error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 42 |   init(\n 43 |     symmetricCrypto: SymmetricCrypto\u003dSymmetricCrypto(),\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n    |                       `- error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 45 |     hashingService: HashingService\u003dHashingService(),\n 46 |     keyGenerator: KeyGenerator\u003dKeyGenerator()\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:45:21: error: cannot find type \u0027HashingService\u0027 in scope\n 43 |     symmetricCrypto: SymmetricCrypto\u003dSymmetricCrypto(),\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n 45 |     hashingService: HashingService\u003dHashingService(),\n    |                     `- error: cannot find type \u0027HashingService\u0027 in scope\n 46 |     keyGenerator: KeyGenerator\u003dKeyGenerator()\n 47 |   ) {\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:46:19: error: cannot find type \u0027KeyGenerator\u0027 in scope\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n 45 |     hashingService: HashingService\u003dHashingService(),\n 46 |     keyGenerator: KeyGenerator\u003dKeyGenerator()\n    |                   `- error: cannot find type \u0027KeyGenerator\u0027 in scope\n 47 |   ) {\n 48 |     self.symmetricCrypto\u003dsymmetricCrypto\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:64:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 62 |     data: SecureBytes,\n 63 |     using key: SecureBytes\n 64 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 65 |     // Use the symmetric crypto service with default configuration\n 66 |     let result\u003dawait symmetricCrypto.encryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:90:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 88 |     data: SecureBytes,\n 89 |     using key: SecureBytes\n 90 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 91 |     // Use the symmetric crypto service with default configuration\n 92 |     let result\u003dawait symmetricCrypto.decryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:111:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |   /// - Returns: A new cryptographic key as `SecureBytes` or an error.\n110 |   public func generateKey() async\n111 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n112 |     // Generate a 256-bit AES key\n113 |     var keyBytes\u003d[UInt8](repeating: 0, count: 32)\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:130:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n128 |   /// - Returns: The resulting hash as `SecureBytes` or an error.\n129 |   public func hash(data: SecureBytes) async\n130 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n131 |     // Use SHA-256 as the default algorithm\n132 |     await hash(data: data, config: SecurityConfigDTO(algorithm: \"SHA-256\", keySizeInBits: 256))\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:141:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n139 |   /// - Returns: Boolean indicating whether the hash matches.\n140 |   public func verify(data: SecureBytes, against hash: SecureBytes) async\n141 |   -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n142 |     // Hash the data using SHA-256\n143 |     let hashResult\u003dawait self.hash(data: data)\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:169:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n167 |     key: SecureBytes,\n168 |     config: SecurityConfigDTO\n169 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n170 |     let result\u003dawait symmetricCrypto.encryptData(\n171 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:168:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n166 |     data: SecureBytes,\n167 |     key: SecureBytes,\n168 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n169 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n170 |     let result\u003dawait symmetricCrypto.encryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:197:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n195 |     key: SecureBytes,\n196 |     config: SecurityConfigDTO\n197 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n198 |     let result\u003dawait symmetricCrypto.decryptData(\n199 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:196:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n194 |     data: SecureBytes,\n195 |     key: SecureBytes,\n196 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n197 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n198 |     let result\u003dawait symmetricCrypto.decryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:223:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n221 |     data: SecureBytes,\n222 |     config: SecurityConfigDTO\n223 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n224 |     // Use the dedicated HashingService to hash the data\n225 |     let result\u003dawait hashingService.hashData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:222:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n220 |   public func hash(\n221 |     data: SecureBytes,\n222 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n223 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n224 |     // Use the dedicated HashingService to hash the data\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:252:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n250 |     publicKey: SecureBytes,\n251 |     config: SecurityConfigDTO\n252 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n253 |     let result\u003dawait asymmetricCrypto.encrypt(\n254 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:251:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n249 |     data: SecureBytes,\n250 |     publicKey: SecureBytes,\n251 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n252 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n253 |     let result\u003dawait asymmetricCrypto.encrypt(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:281:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n279 |     privateKey: SecureBytes,\n280 |     config: SecurityConfigDTO\n281 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n282 |     let result\u003dawait asymmetricCrypto.decrypt(\n283 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:280:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n278 |     data: SecureBytes,\n279 |     privateKey: SecureBytes,\n280 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n281 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n282 |     let result\u003dawait asymmetricCrypto.decrypt(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:303:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n301 |   /// - Returns: Generated key or error\n302 |   func generateSymmetricKey() async\n303 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n304 |     do {\n305 |       // Generate a 256-bit AES key\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:333:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n331 |     data: SecureBytes,\n332 |     hash: SecureBytes\n333 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n334 |     let hashResult\u003dawait self.hash(\n335 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:355:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n353 |   /// - Returns: Random data or error\n354 |   func generateRandomData(length: Int) async\n355 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n356 |     do {\n357 |       // Use SecRandomCopyBytes directly instead of CryptoWrapper\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:24:39: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 22 | /// services. It delegates operations to the appropriate specialised components while\n 23 | /// providing a simplified interface to callers.\n 24 | public final class CryptoServiceCore: CryptoServiceProtocol, Sendable {\n    |                                       `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 25 |   // MARK: - Properties\n 26 | \n\nSources/Security/Implementation/CryptoServices/Core/KeyDerivationService.swift:43:36: error: no type named \u0027KeyType\u0027 in module \u0027SecurityProtocolsCore\u0027\n 41 |   func generateKey(\n 42 |     bits: Int,\n 43 |     keyType: SecurityProtocolsCore.KeyType,\n    |                                    `- error: no type named \u0027KeyType\u0027 in module \u0027SecurityProtocolsCore\u0027\n 44 |     purpose _: SecurityProtocolsCore.KeyPurpose\n 45 |   ) async throws -\u003e UmbraCoreTypes.SecureBytes {\n\nSources/Security/Implementation/CryptoServices/Core/KeyDerivationService.swift:44:38: error: no type named \u0027KeyPurpose\u0027 in module \u0027SecurityProtocolsCore\u0027\n 42 |     bits: Int,\n 43 |     keyType: SecurityProtocolsCore.KeyType,\n 44 |     purpose _: SecurityProtocolsCore.KeyPurpose\n    |                                      `- error: no type named \u0027KeyPurpose\u0027 in module \u0027SecurityProtocolsCore\u0027\n 45 |   ) async throws -\u003e UmbraCoreTypes.SecureBytes {\n 46 |     // Validate key size\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:18:79: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 16 |   /// - Parameter error: Implementation-specific CryptoError to map\n 17 |   /// - Returns: Equivalent UmbraErrors.Crypto.Core instance\n 18 |   public static func mapToCanonicalError(_ error: CryptoError) -\u003e UmbraErrors.Crypto.Core {\n    |                                                                               `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n 19 |     switch error {\n 20 |       case let .encryptionError(reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:102:68: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n100 |   /// - Parameter error: Canonical UmbraErrors.Crypto.Core error to map\n101 |   /// - Returns: Best-fit equivalent CryptoError instance for the SecurityImplementation module\n102 |   public static func mapToImplementationError(_ error: UmbraErrors.Crypto.Core) -\u003e CryptoError {\n    |                                                                    `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n103 |     switch error {\n104 |       case let .encryptionFailed(algorithm, reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:184:44: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n182 |   ///\n183 |   /// - Returns: Canonical error type for use with UmbraCore error handling\n184 |   public func toCanonical() -\u003e UmbraErrors.Crypto.Core {\n    |                                            `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n185 |     CryptoErrorMapper.mapToCanonicalError(self)\n186 |   }\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:189:23: error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n187 | }\n188 | \n189 | extension UmbraErrors.Crypto.Core {\n    |                       `- error: no type named \u0027Crypto\u0027 in module \u0027UmbraErrors\u0027\n190 |   /// Converts a canonical Crypto.Core error to implementation-specific CryptoError\n191 |   ///\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:108:35: error: missing argument label \u0027reason:\u0027 in call\n106 |           return .asymmetricEncryptionError(reason)\n107 |         } else {\n108 |           return .encryptionError(reason)\n    |                                   `- error: missing argument label \u0027reason:\u0027 in call\n109 |         }\n110 | \n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:115:35: error: missing argument label \u0027reason:\u0027 in call\n113 |           return .asymmetricDecryptionError(reason)\n114 |         } else {\n115 |           return .decryptionError(reason)\n    |                                   `- error: missing argument label \u0027reason:\u0027 in call\n116 |         }\n117 | \n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:119:33: error: missing argument label \u0027reason:\u0027 in call\n117 | \n118 |       case let .invalidCiphertext(reason):\n119 |         return .decryptionError(\"Invalid ciphertext: \\(reason)\")\n    |                                 `- error: missing argument label \u0027reason:\u0027 in call\n120 | \n121 |       case let .paddingValidationFailed(algorithm):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:122:33: error: missing argument label \u0027reason:\u0027 in call\n120 | \n121 |       case let .paddingValidationFailed(algorithm):\n122 |         return .decryptionError(\"Padding validation failed with \\(algorithm)\")\n    |                                 `- error: missing argument label \u0027reason:\u0027 in call\n123 | \n124 |       case let .keyGenerationFailed(keyType, reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:131:17: error: type \u0027CryptoError\u0027 has no member \u0027invalidKey\u0027\n129 | \n130 |       case let .invalidKey(keyType, reason):\n131 |         return .invalidKey(reason: \"Invalid key of type \\(keyType): \\(reason)\")\n    |                 `- error: type \u0027CryptoError\u0027 has no member \u0027invalidKey\u0027\n132 | \n133 |       case .keyNotFound:\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:138:17: error: type \u0027CryptoError\u0027 has no member \u0027signatureError\u0027\n136 |       case let .signatureFailed(_, reason),\n137 |            let .signatureVerificationFailed(_, reason):\n138 |         return .signatureError(reason: \"Signature operation failed: \\(reason)\")\n    |                 `- error: type \u0027CryptoError\u0027 has no member \u0027signatureError\u0027\n139 | \n140 |       case let .invalidSignature(reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:141:17: error: type \u0027CryptoError\u0027 has no member \u0027signatureError\u0027\n139 | \n140 |       case let .invalidSignature(reason):\n141 |         return .signatureError(reason: \"Invalid signature: \\(reason)\")\n    |                 `- error: type \u0027CryptoError\u0027 has no member \u0027signatureError\u0027\n142 | \n143 |       case let .hashingFailed(algorithm, reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:144:30: error: missing argument label \u0027reason:\u0027 in call\n142 | \n143 |       case let .hashingFailed(algorithm, reason):\n144 |         return .hashingError(\"Hashing failed with \\(algorithm): \\(reason)\")\n    |                              `- error: missing argument label \u0027reason:\u0027 in call\n145 | \n146 |       case let .hashVerificationFailed(algorithm):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:147:30: error: missing argument label \u0027reason:\u0027 in call\n145 | \n146 |       case let .hashVerificationFailed(algorithm):\n147 |         return .hashingError(\"Hash verification failed with \\(algorithm)\")\n    |                              `- error: missing argument label \u0027reason:\u0027 in call\n148 | \n149 |       case let .unsupportedAlgorithm(algorithm):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:150:17: error: type \u0027CryptoError\u0027 has no member \u0027unsupportedAlgorithm\u0027\n148 | \n149 |       case let .unsupportedAlgorithm(algorithm):\n150 |         return .unsupportedAlgorithm(algorithm)\n    |                 `- error: type \u0027CryptoError\u0027 has no member \u0027unsupportedAlgorithm\u0027\n151 | \n152 |       case let .invalidParameters(algorithm, parameter, reason):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:154:33: error: incorrect argument label in call (have \u0027reason:\u0027, expected \u0027size:\u0027)\n152 |       case let .invalidParameters(algorithm, parameter, reason):\n153 |         if parameter \u003d\u003d \"keySize\" {\n154 |           return .invalidKeySize(reason: \"\\(algorithm): \\(reason)\")\n    |                                 `- error: incorrect argument label in call (have \u0027reason:\u0027, expected \u0027size:\u0027)\n155 |         } else if parameter \u003d\u003d \"length\" {\n156 |           return .invalidLength(0) // Cannot extract specific length from reason\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:154:42: error: cannot convert value of type \u0027String\u0027 to expected argument type \u0027Int\u0027\n152 |       case let .invalidParameters(algorithm, parameter, reason):\n153 |         if parameter \u003d\u003d \"keySize\" {\n154 |           return .invalidKeySize(reason: \"\\(algorithm): \\(reason)\")\n    |                                          `- error: cannot convert value of type \u0027String\u0027 to expected argument type \u0027Int\u0027\n155 |         } else if parameter \u003d\u003d \"length\" {\n156 |           return .invalidLength(0) // Cannot extract specific length from reason\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:156:19: error: type \u0027CryptoError\u0027 has no member \u0027invalidLength\u0027\n154 |           return .invalidKeySize(reason: \"\\(algorithm): \\(reason)\")\n155 |         } else if parameter \u003d\u003d \"length\" {\n156 |           return .invalidLength(0) // Cannot extract specific length from reason\n    |                   `- error: type \u0027CryptoError\u0027 has no member \u0027invalidLength\u0027\n157 |         } else {\n158 |           return .invalidParameters(reason: \"\\(parameter) for \\(algorithm): \\(reason)\")\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:165:17: error: type \u0027CryptoError\u0027 has no member \u0027randomGenerationFailed\u0027\n163 | \n164 |       case .randomGenerationFailed:\n165 |         return .randomGenerationFailed(status: 0) // Cannot convert string reason to OSStatus\n    |                 `- error: type \u0027CryptoError\u0027 has no member \u0027randomGenerationFailed\u0027\n166 | \n167 |       case .insufficientEntropy:\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:168:17: error: type \u0027CryptoError\u0027 has no member \u0027randomGenerationFailed\u0027\n166 | \n167 |       case .insufficientEntropy:\n168 |         return .randomGenerationFailed(status: -1)\n    |                 `- error: type \u0027CryptoError\u0027 has no member \u0027randomGenerationFailed\u0027\n169 | \n170 |       case let .internalError(description):\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:171:33: error: missing argument label \u0027reason:\u0027 in call\n169 | \n170 |       case let .internalError(description):\n171 |         return .encryptionError(\"Internal error: \\(description)\")\n    |                                 `- error: missing argument label \u0027reason:\u0027 in call\n172 | \n173 |       @unknown default:\n\nSources/Security/Implementation/CryptoServices/Core/CryptoErrorMapper.swift:174:33: error: missing argument label \u0027reason:\u0027 in call\n172 | \n173 |       @unknown default:\n174 |         return .encryptionError(\"Unmapped crypto error: \\(error.localizedDescription)\")\n    |                                 `- error: missing argument label \u0027reason:\u0027 in call\n175 |     }\n176 |   }\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:28:32: error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 26 | \n 27 |   /// Service for symmetric encryption operations\n 28 |   private let symmetricCrypto: SymmetricCrypto\n    |                                `- error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 29 | \n 30 |   /// Service for asymmetric encryption operations\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:31:33: error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 29 | \n 30 |   /// Service for asymmetric encryption operations\n 31 |   private let asymmetricCrypto: AsymmetricCrypto\n    |                                 `- error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 32 | \n 33 |   /// Service for hashing operations\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:34:31: error: cannot find type \u0027HashingService\u0027 in scope\n 32 | \n 33 |   /// Service for hashing operations\n 34 |   private let hashingService: HashingService\n    |                               `- error: cannot find type \u0027HashingService\u0027 in scope\n 35 | \n 36 |   /// Service for key generation\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:37:29: error: cannot find type \u0027KeyGenerator\u0027 in scope\n 35 | \n 36 |   /// Service for key generation\n 37 |   private let keyGenerator: KeyGenerator\n    |                             `- error: cannot find type \u0027KeyGenerator\u0027 in scope\n 38 | \n 39 |   // MARK: - Initialisation\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:43:22: error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 41 |   /// Creates a new crypto service coordinator\n 42 |   init(\n 43 |     symmetricCrypto: SymmetricCrypto\u003dSymmetricCrypto(),\n    |                      `- error: cannot find type \u0027SymmetricCrypto\u0027 in scope\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n 45 |     hashingService: HashingService\u003dHashingService(),\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:44:23: error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 42 |   init(\n 43 |     symmetricCrypto: SymmetricCrypto\u003dSymmetricCrypto(),\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n    |                       `- error: cannot find type \u0027AsymmetricCrypto\u0027 in scope\n 45 |     hashingService: HashingService\u003dHashingService(),\n 46 |     keyGenerator: KeyGenerator\u003dKeyGenerator()\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:45:21: error: cannot find type \u0027HashingService\u0027 in scope\n 43 |     symmetricCrypto: SymmetricCrypto\u003dSymmetricCrypto(),\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n 45 |     hashingService: HashingService\u003dHashingService(),\n    |                     `- error: cannot find type \u0027HashingService\u0027 in scope\n 46 |     keyGenerator: KeyGenerator\u003dKeyGenerator()\n 47 |   ) {\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:46:19: error: cannot find type \u0027KeyGenerator\u0027 in scope\n 44 |     asymmetricCrypto: AsymmetricCrypto\u003dAsymmetricCrypto(),\n 45 |     hashingService: HashingService\u003dHashingService(),\n 46 |     keyGenerator: KeyGenerator\u003dKeyGenerator()\n    |                   `- error: cannot find type \u0027KeyGenerator\u0027 in scope\n 47 |   ) {\n 48 |     self.symmetricCrypto\u003dsymmetricCrypto\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:64:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 62 |     data: SecureBytes,\n 63 |     using key: SecureBytes\n 64 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 65 |     // Use the symmetric crypto service with default configuration\n 66 |     let result\u003dawait symmetricCrypto.encryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:90:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 88 |     data: SecureBytes,\n 89 |     using key: SecureBytes\n 90 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n 91 |     // Use the symmetric crypto service with default configuration\n 92 |     let result\u003dawait symmetricCrypto.decryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:111:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n109 |   /// - Returns: A new cryptographic key as `SecureBytes` or an error.\n110 |   public func generateKey() async\n111 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n112 |     // Generate a 256-bit AES key\n113 |     var keyBytes\u003d[UInt8](repeating: 0, count: 32)\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:130:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n128 |   /// - Returns: The resulting hash as `SecureBytes` or an error.\n129 |   public func hash(data: SecureBytes) async\n130 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n131 |     // Use SHA-256 as the default algorithm\n132 |     await hash(data: data, config: SecurityConfigDTO(algorithm: \"SHA-256\", keySizeInBits: 256))\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:141:31: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n139 |   /// - Returns: Boolean indicating whether the hash matches.\n140 |   public func verify(data: SecureBytes, against hash: SecureBytes) async\n141 |   -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                               `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n142 |     // Hash the data using SHA-256\n143 |     let hashResult\u003dawait self.hash(data: data)\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:169:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n167 |     key: SecureBytes,\n168 |     config: SecurityConfigDTO\n169 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n170 |     let result\u003dawait symmetricCrypto.encryptData(\n171 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:168:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n166 |     data: SecureBytes,\n167 |     key: SecureBytes,\n168 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n169 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n170 |     let result\u003dawait symmetricCrypto.encryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:197:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n195 |     key: SecureBytes,\n196 |     config: SecurityConfigDTO\n197 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n198 |     let result\u003dawait symmetricCrypto.decryptData(\n199 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:196:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n194 |     data: SecureBytes,\n195 |     key: SecureBytes,\n196 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n197 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n198 |     let result\u003dawait symmetricCrypto.decryptData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:223:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n221 |     data: SecureBytes,\n222 |     config: SecurityConfigDTO\n223 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n224 |     // Use the dedicated HashingService to hash the data\n225 |     let result\u003dawait hashingService.hashData(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:222:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n220 |   public func hash(\n221 |     data: SecureBytes,\n222 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n223 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n224 |     // Use the dedicated HashingService to hash the data\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:252:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n250 |     publicKey: SecureBytes,\n251 |     config: SecurityConfigDTO\n252 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n253 |     let result\u003dawait asymmetricCrypto.encrypt(\n254 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:251:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n249 |     data: SecureBytes,\n250 |     publicKey: SecureBytes,\n251 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n252 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n253 |     let result\u003dawait asymmetricCrypto.encrypt(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:281:46: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n279 |     privateKey: SecureBytes,\n280 |     config: SecurityConfigDTO\n281 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                              `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n282 |     let result\u003dawait asymmetricCrypto.decrypt(\n283 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:280:13: error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n278 |     data: SecureBytes,\n279 |     privateKey: SecureBytes,\n280 |     config: SecurityConfigDTO\n    |             `- error: cannot find type \u0027SecurityConfigDTO\u0027 in scope\n281 |   ) async -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n282 |     let result\u003dawait asymmetricCrypto.decrypt(\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:303:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n301 |   /// - Returns: Generated key or error\n302 |   func generateSymmetricKey() async\n303 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n304 |     do {\n305 |       // Generate a 256-bit AES key\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:333:39: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n331 |     data: SecureBytes,\n332 |     hash: SecureBytes\n333 |   ) async -\u003e Result\u003cBool, UmbraErrors.Security.Protocols\u003e {\n    |                                       `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n334 |     let hashResult\u003dawait self.hash(\n335 |       data: data,\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:355:38: error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n353 |   /// - Returns: Random data or error\n354 |   func generateRandomData(length: Int) async\n355 |   -\u003e Result\u003cSecureBytes, UmbraErrors.Security.Protocols\u003e {\n    |                                      `- error: no type named \u0027Security\u0027 in module \u0027UmbraErrors\u0027\n356 |     do {\n357 |       // Use SecRandomCopyBytes directly instead of CryptoWrapper\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:24:39: error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 22 | /// services. It delegates operations to the appropriate specialised components while\n 23 | /// providing a simplified interface to callers.\n 24 | public final class CryptoServiceCore: CryptoServiceProtocol, Sendable {\n    |                                       `- error: cannot find type \u0027CryptoServiceProtocol\u0027 in scope\n 25 |   // MARK: - Properties\n 26 | \n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:70:11: error: \u0027nil\u0027 requires a contextual type\n 68 |       key: key,\n 69 |       algorithm: \"AES-GCM\",\n 70 |       iv: nil\n    |           `- error: \u0027nil\u0027 requires a contextual type\n 71 |     )\n 72 |     if result.success, let encryptedData\u003dresult.data {\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:96:11: error: \u0027nil\u0027 requires a contextual type\n 94 |       key: key,\n 95 |       algorithm: \"AES-GCM\",\n 96 |       iv: nil\n    |           `- error: \u0027nil\u0027 requires a contextual type\n 97 |     )\n 98 |     if result.success, let decryptedData\u003dresult.data {\n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:174:11: error: \u0027nil\u0027 requires a contextual type\n172 |       key: key,\n173 |       algorithm: config.algorithm,\n174 |       iv: nil\n    |           `- error: \u0027nil\u0027 requires a contextual type\n175 |     )\n176 | \n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:202:11: error: \u0027nil\u0027 requires a contextual type\n200 |       key: key,\n201 |       algorithm: config.algorithm,\n202 |       iv: nil\n    |           `- error: \u0027nil\u0027 requires a contextual type\n203 |     )\n204 | \n\nSources/Security/Implementation/CryptoServices/Core/CryptoServiceCore.swift:336:15: error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n334 |     let hashResult\u003dawait self.hash(\n335 |       data: data,\n336 |       config: SecurityConfigDTO(algorithm: \"SHA-256\", keySizeInBits: 256)\n    |               `- error: cannot find \u0027SecurityConfigDTO\u0027 in scope\n337 |     )\n338 | \n\nSources/Security/Implementation/CryptoServices/Core/KeyDerivationService.swift:43:36: error: no type named \u0027KeyType\u0027 in module \u0027SecurityProtocolsCore\u0027\n 41 |   func generateKey(\n 42 |     bits: Int,\n 43 |     keyType: SecurityProtocolsCore.KeyType,\n    |                                    `- error: no type named \u0027KeyType\u0027 in module \u0027SecurityProtocolsCore\u0027\n 44 |     purpose _: SecurityProtocolsCore.KeyPurpose\n 45 |   ) async throws -\u003e UmbraCoreTypes.SecureBytes {\n\nSources/Security/Implementation/CryptoServices/Core/KeyDerivationService.swift:44:38: error: no type named \u0027KeyPurpose\u0027 in module \u0027SecurityProtocolsCore\u0027\n 42 |     bits: Int,\n 43 |     keyType: SecurityProtocolsCore.KeyType,\n 44 |     purpose _: SecurityProtocolsCore.KeyPurpose\n    |                                      `- error: no type named \u0027KeyPurpose\u0027 in module \u0027SecurityProtocolsCore\u0027\n 45 |   ) async throws -\u003e UmbraCoreTypes.SecureBytes {\n 46 |     // Validate key size\n\nSources/Security/Implementation/CryptoServices/Core/KeyDerivationService.swift:87:12: error: type \u0027CryptoError\u0027 has no member \u0027randomGenerationFailed\u0027\n 85 |       case .failure:\n 86 |         throw CryptoError\n 87 |           .randomGenerationFailed(status: -1) // Using a dummy OSStatus since we can\u0027t convert error\n    |            `- error: type \u0027CryptoError\u0027 has no member \u0027randomGenerationFailed\u0027\n 88 |         // to OSStatus\n 89 |     }\n"}}
{"id":{"targetCompleted":{"label":"//Sources/Security/Implementation/CryptoServices/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Security/Implementation/CryptoServices/Core/Core.swiftmodule","label":"//Sources/Security/Implementation/CryptoServices/Core:Core","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":220}},"children":[{"progress":{"opaqueCount":221}},{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services.swiftmodule","label":"//Sources/Core/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"progress":{}}
{"id":{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services.swiftmodule","label":"//Sources/Core/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"action":{"exitCode":1,"stderr":{"name":"stderr","uri":"file:///Users/mpy/.bazel/execroot/_main/bazel-out/_tmp/actions/stderr-570"},"label":"//Sources/Core/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"},"type":"SwiftCompile","commandLine":["bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker","swiftc","-target","arm64-apple-macos14.7.4","-sdk","__BAZEL_XCODE_SDKROOT__","-debug-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003d/PLACEHOLDER_DEVELOPER_DIR","-Xwrapped-swift\u003d-bazel-target-label\u003d@@//Sources/Core/Services:Services","-emit-object","-output-file-map","bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services.output_file_map.json","-Xfrontend","-no-clang-module-breadcrumbs","-emit-module-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services.swiftmodule","-enforce-exclusivity\u003dchecked","-emit-const-values-path","bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services_objs/CoreService.swift.swiftconstvalues","-Xfrontend","-const-gather-protocols-file","-Xfrontend","external/rules_swift+/swift/toolchains/config/const_protocols_to_gather.json","-DDEBUG","-Onone","-Xfrontend","-internalize-at-link","-Xfrontend","-no-serialize-debugging-options","-enable-testing","-disable-sandbox","-gline-tables-only","-Xwrapped-swift\u003d-file-prefix-pwd-is-dot","-module-cache-path","bazel-out/darwin_arm64-fastbuild/bin/_swift_module_cache","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/KeyManagementTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraLogging","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraCoreTypes/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Core","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandling","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingInterfaces","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/ErrorHandlingDomains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraSecurityBridge","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Domains","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/DTOs","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors/Mapping","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CryptoTypes","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/UmbraErrors","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Operations","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/CoreDTOs/Sources/Security","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore/Sources","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/XPCProtocolsCore","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Types","-Ibazel-out/darwin_arm64-fastbuild/bin/Sources/SecurityProtocolsCore","-Xwrapped-swift\u003d-macro-expansion-dir\u003dbazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services.macro-expansions","-Xcc","-iquote.","-Xcc","-iquotebazel-out/darwin_arm64-fastbuild/bin","-Xfrontend","-color-diagnostics","-enable-batch-mode","-module-name","Services","-file-prefix-map","__BAZEL_XCODE_DEVELOPER_DIR__\u003dDEVELOPER_DIR","-enable-bare-slash-regex","-Xfrontend","-disable-clang-spi","-enable-experimental-feature","AccessLevelOnImport","-parse-as-library","-strict-concurrency\u003dcomplete","-static","-Xcc","-O0","-Xcc","-DDEBUG\u003d1","Sources/Core/Services/CoreService.swift","Sources/Core/Services/CryptoError.swift","Sources/Core/Services/KeyManager.swift","Sources/Core/Services/SecurityError.swift","Sources/Core/Services/SecurityService.swift","Sources/Core/Services/ServiceContainer.swift","Sources/Core/Services/UmbraService.swift"],"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}},"startTime":"2025-03-25T22:47:35.509659Z","endTime":"2025-03-25T22:47:35.509659Z"}}
{"id":{"targetCompleted":{"label":"//Sources/Core/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}},"children":[{"actionCompleted":{"primaryOutput":"bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services.swiftmodule","label":"//Sources/Core/Services:Services","configuration":{"id":"fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25"}}}],"completed":{"failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":221}},"children":[{"progress":{"opaqueCount":222}},{"convenienceSymlinksIdentified":{}}],"progress":{"stderr":"ERROR: /Users/mpy/CascadeProjects/UmbraCore/Sources/Core/Services/BUILD.bazel:3:20: Compiling Swift module //Sources/Core/Services:Services failed: (Exit 1): worker failed: error executing SwiftCompile command (from target //Sources/Core/Services:Services) \n  (cd /Users/mpy/.bazel/execroot/_main \u0026\u0026 \\\n  exec env - \\\n    APPLE_SDK_PLATFORM\u003dMacOSX \\\n    APPLE_SDK_VERSION_OVERRIDE\u003d15.2 \\\n    CC\u003dclang \\\n    PATH\u003d/Users/mpy/Library/Caches/bazelisk/downloads/sha256/ac72ad67f7a8c6b18bf605d8602425182b417de4369715bf89146daf62f7ae48/bin:/Users/mpy/.rbenv/bin:/Users/mpy/.codeium/windsurf/bin:/opt/homebrew/opt/node@18/bin:/opt/homebrew/opt/node@20/bin:/opt/anaconda3/bin:/opt/anaconda3/condabin:/Users/mpy/.docker/bin:/opt/homebrew/opt/openjdk/bin:/Users/mpy/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/go/bin:/Users/mpy/.cargo/bin:/Users/mpy/Library/Python/3.8/bin:/Users/mpy/go/bin:/Users/mpy/.scripts:/Users/mpy/.fzf/bin \\\n    XCODE_VERSION_OVERRIDE\u003d16.2.0.16C5032a \\\n  bazel-out/darwin_arm64-opt-exec-ST-d57f47055a04/bin/external/rules_swift+/tools/worker/worker swiftc @bazel-out/darwin_arm64-fastbuild/bin/Sources/Core/Services/Services.swiftmodule-0.params)\n# Configuration: fa0d597bf4c4dd3088f6168d904ac812da4482257e96f4cbab427d38bdcabd25\n# Execution platform: @@platforms//host:host\nerror: emit-module command failed with exit code 1 (use -v to see invocation)\nSources/Core/Services/CryptoError.swift: 0:\nSources/Core/Services/KeyManager.swift:1:8: error: no such module \u0027CoreServicesTypes\u0027\n  1 | import CoreServicesTypes\n    |        `- error: no such module \u0027CoreServicesTypes\u0027\n  2 | import KeyManagementTypes\n  3 | import UmbraCoreTypes\nSources/Core/Services/CryptoError.swift: 0:\nSources/Core/Services/KeyManager.swift:1:8: error: no such module \u0027CoreServicesTypes\u0027\n  1 | import CoreServicesTypes\n    |        `- error: no such module \u0027CoreServicesTypes\u0027\n  2 | import KeyManagementTypes\n  3 | import UmbraCoreTypes\nINFO: Build succeeded for only 128 of 215 top-level targets\nINFO: Found 215 targets...\n"}}
{"id":{"convenienceSymlinksIdentified":{}},"convenienceSymlinksIdentified":{"convenienceSymlinks":[{"path":"bazel-bin","action":"CREATE","target":"execroot/_main/bazel-out/darwin_arm64-fastbuild/bin"},{"path":"bazel-testlogs","action":"CREATE","target":"execroot/_main/bazel-out/darwin_arm64-fastbuild/testlogs"},{"path":"bazel-genfiles","action":"DELETE"},{"path":"bazel-out","action":"CREATE","target":"execroot/_main/bazel-out"},{"path":"bazel-UmbraCore","action":"CREATE","target":"execroot/_main"}]}}
{"id":{"buildFinished":{}},"children":[{"buildToolLogs":{}},{"buildMetrics":{}}],"finished":{"finishTimeMillis":"1742942857008","exitCode":{"name":"BUILD_FAILURE","code":1},"finishTime":"2025-03-25T22:47:37.008Z","failureDetail":{"message":"worker spawn failed for SwiftCompile","spawn":{"code":"NON_ZERO_EXIT","spawnExitCode":1}}}}
{"id":{"progress":{"opaqueCount":222}},"progress":{"stderr":"INFO: Elapsed time: 19.607s, Critical Path: 5.64s\nINFO: 567 processes: 220 disk cache hit, 310 internal, 8 local, 29 worker.\nERROR: Build did NOT complete successfully\nFAILED: \n"}}
{"id":{"buildToolLogs":{}},"buildToolLogs":{"log":[{"name":"elapsed time","contents":"MTkuNjA3MDAw"},{"name":"critical path","contents":"Q3JpdGljYWwgUGF0aDogNS42NHMsIFJlbW90ZSAoMC4wMCUgb2YgdGhlIHRpbWUpOiBbcGFyc2U6IDAuMDAlLCBxdWV1ZTogMC4wMCUsIG5ldHdvcms6IDAuMDAlLCB1cGxvYWQ6IDAuMDAlLCBzZXR1cDogMC4wMCUsIHByb2Nlc3M6IDAuMDAlLCBmZXRjaDogMC4wMCUsIHJldHJ5OiAwLjAwJSwgcHJvY2Vzc091dHB1dHM6IDAuMDAlLCBvdGhlcjogMC4wMCUsIGlucHV0IGZpbGVzOiAwLCBpbnB1dCBieXRlczogMCwgbWVtb3J5IGJ5dGVzOiAwXQogIDEuNDhzIGFjdGlvbiAnQ29tcGlsaW5nIFN3aWZ0IG1vZHVsZSAvL1NvdXJjZXMvQ29yZS9TZXJ2aWNlczpTZXJ2aWNlcycKICAxLjA5cyBhY3Rpb24gJ0NvbXBpbGluZyBTd2lmdCBtb2R1bGUgLy9Tb3VyY2VzL0NvcmUvU2VydmljZXMvVHlwZXM6VHlwZXMnCiAgMC44OHMgYWN0aW9uICdDb21waWxpbmcgU3dpZnQgbW9kdWxlIC8vU291cmNlcy9YUENQcm90b2NvbHNDb3JlOlhQQ1Byb3RvY29sc0NvcmUnCiAgMi4wOXMgYWN0aW9uICdDb21waWxpbmcgU3dpZnQgbW9kdWxlIC8vU291cmNlcy9YUENQcm90b2NvbHNDb3JlL1NvdXJjZXM6WFBDUHJvdG9jb2xzQ29yZVNvdXJjZXMnCiAgMC4wMHMgYWN0aW9uICdDb21waWxpbmcgU3dpZnQgbW9kdWxlIC8vU291cmNlcy9Db3JlRFRPcy9Tb3VyY2VzL09wZXJhdGlvbnM6T3BlcmF0aW9ucycKICAwLjAwcyBhY3Rpb24gJ0NvbXBpbGluZyBTd2lmdCBtb2R1bGUgLy9Tb3VyY2VzL1VtYnJhRXJyb3JzOlVtYnJhRXJyb3JzJwogIDAuMDBzIGFjdGlvbiAnQ29tcGlsaW5nIFN3aWZ0IG1vZHVsZSAvL1NvdXJjZXMvVW1icmFFcnJvcnMvTWFwcGluZzpNYXBwaW5nJwogIDAuMDFzIGFjdGlvbiAnQ29tcGlsaW5nIFN3aWZ0IG1vZHVsZSAvL1NvdXJjZXMvVW1icmFFcnJvcnMvRG9tYWluczpEb21haW5zJwogIDAuMDBzIGFjdGlvbiAnQ29tcGlsaW5nIFN3aWZ0IG1vZHVsZSAvL1NvdXJjZXMvRXJyb3JIYW5kbGluZ0ludGVyZmFjZXM6RXJyb3JIYW5kbGluZ0ludGVyZmFjZXMnCiAgMC4wMHMgYWN0aW9uICdDb21waWxpbmcgU3dpZnQgbW9kdWxlIC8vU291cmNlcy9VbWJyYUVycm9ycy9Db3JlOlVtYnJhRXJyb3JzQ29yZScKICAwLjAxcyBhY3Rpb24gJ0NvbXBpbGluZyBTd2lmdCBtb2R1bGUgLy9Tb3VyY2VzL1VtYnJhQ29yZVR5cGVzL1NvdXJjZXM6VW1icmFDb3JlVHlwZXMnCiAgMC4wMXMgYWN0aW9uICdDb21waWxpbmcgU3dpZnQgbW9kdWxlIC8vU291cmNlcy9VbWJyYUxvZ2dpbmc6VW1icmFMb2dnaW5nJwogIDAuMDBzIHJ1bmZpbGVzIGZvciBAQHJ1bGVzX3N3aWZ0Ky8vdG9vbHMvd29ya2VyOndvcmtlcgogIDAuMDBzIGFjdGlvbiAnTGlua2luZyBleHRlcm5hbC9ydWxlc19zd2lmdCsvdG9vbHMvd29ya2VyL3dvcmtlciBbZm9yIHRvb2xdJwogIDAuMDBzIGFjdGlvbiAnTGlua2luZyBleHRlcm5hbC9ydWxlc19jYysvY2MvcnVuZmlsZXMvbGlicnVuZmlsZXMuYSBbZm9yIHRvb2xdJwogIDAuMDVzIGFjdGlvbiAnQ29tcGlsaW5nIGNjL3J1bmZpbGVzL3J1bmZpbGVzLmNjIFtmb3IgdG9vbF0nCiAgMC4wMHMgYWN0aW9uICdTeW1saW5raW5nIHZpcnR1YWwgaGVhZGVycyBmb3IgQEBydWxlc19jYysvL2NjL3J1bmZpbGVzOnJ1bmZpbGVzIFtmb3IgdG9vbF0n"},{"name":"process stats","contents":"NTY3IHByb2Nlc3NlczogMjIwIGRpc2sgY2FjaGUgaGl0LCAzMTAgaW50ZXJuYWwsIDggbG9jYWwsIDI5IHdvcmtlci4="},{"name":"command.profile.gz","uri":"file:///Users/mpy/.bazel/command-8180378b-fa89-42c9-a155-3395a034f08e.profile.gz"}]}}
{"id":{"buildMetrics":{}},"lastMessage":true,"buildMetrics":{"actionSummary":{"actionsCreated":"951","actionsExecuted":"567","actionsCreatedNotIncludingAspects":"949","actionData":[{"mnemonic":"FileWrite","actionsExecuted":"212","firstStartedMs":"1742942844325","lastEndedMs":"1742942844424","actionsCreated":"219"},{"mnemonic":"SwiftCompile","actionsExecuted":"201","firstStartedMs":"1742942844463","lastEndedMs":"1742942856991","actionsCreated":"216"},{"mnemonic":"CppArchive","actionsExecuted":"120","firstStartedMs":"1742942844455","lastEndedMs":"1742942856295","systemTime":"0.070s","userTime":"0.053s","actionsCreated":"221"},{"mnemonic":"CppCompile","actionsExecuted":"10","firstStartedMs":"1742942844402","lastEndedMs":"1742942844457","actionsCreated":"10"},{"mnemonic":"RepoMappingManifest","actionsExecuted":"5","firstStartedMs":"1742942844326","lastEndedMs":"1742942844410","actionsCreated":"9"},{"mnemonic":"TemplateExpand","actionsExecuted":"5","firstStartedMs":"1742942844379","lastEndedMs":"1742942844409","actionsCreated":"6"},{"mnemonic":"SymlinkTree","actionsExecuted":"5","firstStartedMs":"1742942844332","lastEndedMs":"1742942844412","actionsCreated":"9"},{"mnemonic":"SourceSymlinkManifest","actionsExecuted":"5","firstStartedMs":"1742942844327","lastEndedMs":"1742942844411","actionsCreated":"9"},{"mnemonic":"Symlink","actionsExecuted":"1","firstStartedMs":"1742942844340","lastEndedMs":"1742942844342","actionsCreated":"3"},{"mnemonic":"CppLink","actionsExecuted":"1","firstStartedMs":"1742942844460","lastEndedMs":"1742942844462","actionsCreated":"6"},{"mnemonic":"BazelWorkspaceStatusAction","actionsExecuted":"1","firstStartedMs":"1742942840141","lastEndedMs":"1742942840163","actionsCreated":"1"},{"mnemonic":"ExecutableSymlink","actionsExecuted":"1","firstStartedMs":"1742942844386","lastEndedMs":"1742942844387","actionsCreated":"1"},{"mnemonic":"TranslateBuildInfo","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"4"},{"mnemonic":"CcStrip","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"1"},{"mnemonic":"Middleman","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"9"},{"mnemonic":"SwiftCreateTestBundle","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"4"},{"mnemonic":"TestRunner","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"4"},{"mnemonic":"SwiftSymbolGraphExtract","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"1"},{"mnemonic":"SwiftDumpAST","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"216"},{"mnemonic":"CppModuleMap","firstStartedMs":"10966280388917","lastEndedMs":"1742908352063","actionsCreated":"1"}],"runnerCount":[{"name":"total","count":567},{"name":"disk cache hit","count":220,"execKind":"Remote"},{"name":"internal","count":310},{"name":"local","count":8,"execKind":"Local"},{"name":"worker","count":29,"execKind":"Worker"}],"actionCacheStatistics":{"sizeInBytes":"341265","saveTimeInMs":"2","misses":568,"missDetails":[{},{"reason":"DIFFERENT_DEPS","count":1},{"reason":"DIFFERENT_ENVIRONMENT"},{"reason":"DIFFERENT_FILES"},{"reason":"CORRUPTED_CACHE_ENTRY"},{"reason":"NOT_CACHED","count":566},{"reason":"UNCONDITIONAL_EXECUTION","count":1}],"loadTimeInMs":"1"}},"memoryMetrics":{"garbageMetrics":[{"type":"CodeHeap \u0027profiled nmethods\u0027","garbageCollected":"250752"},{"type":"G1 Old Gen","garbageCollected":"180736"},{"type":"CodeHeap \u0027non-profiled nmethods\u0027","garbageCollected":"23424"},{"type":"G1 Survivor Space","garbageCollected":"23294632"},{"type":"G1 Eden Space","garbageCollected":"1356857344"}]},"targetMetrics":{"targetsConfigured":"4049","targetsConfiguredNotIncludingAspects":"3928"},"packageMetrics":{"packagesLoaded":"298"},"timingMetrics":{"cpuTimeInMs":"24039","wallTimeInMs":"18918","analysisPhaseTimeInMs":"4287","executionPhaseTimeInMs":"16833","actionsExecutionStartInMs":"2067"},"cumulativeMetrics":{"numAnalyses":1,"numBuilds":1},"artifactMetrics":{"sourceArtifactsRead":{"sizeInBytes":"11841427","count":985},"outputArtifactsSeen":{"sizeInBytes":"106137179","count":1956},"outputArtifactsFromActionCache":{"count":1},"topLevelArtifacts":{"sizeInBytes":"20169264","count":468}},"buildGraphMetrics":{"actionLookupValueCount":1580,"actionCount":951,"outputArtifactCount":4382,"postInvocationSkyframeNodeCount":20571,"actionLookupValueCountNotIncludingAspects":1459,"actionCountNotIncludingAspects":949,"inputFileConfiguredTargetCount":1096,"otherConfiguredTargetCount":29,"builtValues":[{"skyfunctionName":"DIRECTORY_LISTING","count":"362"},{"skyfunctionName":"ACTION_ENVIRONMENT_VARIABLE","count":"20"},{"skyfunctionName":"IGNORED_SUBDIRECTORIES","count":"78"},{"skyfunctionName":"BUILD_CONFIGURATION","count":"4"},{"skyfunctionName":"BZLMOD_REPO_RULE","count":"77"},{"skyfunctionName":"STARLARK_BUILTINS","count":"2"},{"skyfunctionName":"REPO_FILE","count":"78"},{"skyfunctionName":"PLATFORM","count":"2"},{"skyfunctionName":"TARGET_PATTERN","count":"45"},{"skyfunctionName":"SINGLE_TOOLCHAIN_RESOLUTION","count":"5"},{"skyfunctionName":"SINGLE_EXTENSION","count":"17"},{"skyfunctionName":"PACKAGE","count":"298"},{"skyfunctionName":"TOOLCHAIN_RESOLUTION","count":"12"},{"skyfunctionName":"ARTIFACT_NESTED_SET","count":"384"},{"skyfunctionName":"RECURSIVE_PKG","count":"259"},{"skyfunctionName":"REPOSITORY_DIRECTORY","count":"77"},{"skyfunctionName":"PACKAGE_ERROR_MESSAGE","count":"199"},{"skyfunctionName":"LOCAL_REPOSITORY_LOOKUP","count":"263"},{"skyfunctionName":"REGISTERED_TOOLCHAINS","count":"3"},{"skyfunctionName":"BAZEL_LOCK_FILE","count":"1"},{"skyfunctionName":"REPOSITORY_MAPPING","count":"81"},{"skyfunctionName":"PACKAGE_LOOKUP","count":"746"},{"skyfunctionName":"BAZEL_DEP_GRAPH","count":"1"},{"skyfunctionName":"ARTIFACT","count":"994"},{"skyfunctionName":"BASELINE_OPTIONS","count":"2"},{"skyfunctionName":"MODULE_FILE","count":"140"},{"skyfunctionName":"FILE_STATE","count":"3649"},{"skyfunctionName":"MODULE_EXTENSION_REPO_MAPPING_ENTRIES","count":"17"},{"skyfunctionName":"REGISTRY","count":"1"},{"skyfunctionName":"SINGLE_EXTENSION_USAGES","count":"17"},{"skyfunctionName":"SINGLE_EXTENSION_EVAL","count":"17"},{"skyfunctionName":"ACTION_EXECUTION","count":"674"},{"skyfunctionName":"CONTAINING_PACKAGE_LOOKUP","count":"504"},{"skyfunctionName":"BAZEL_MODULE_RESOLUTION","count":"1"},{"skyfunctionName":"BUILD_DRIVER","count":"215"},{"skyfunctionName":"REPO_SPEC","count":"33"},{"skyfunctionName":"REPO_PACKAGE_ARGS","count":"62"},{"skyfunctionName":"GLOBS","count":"233"},{"skyfunctionName":"BUILD_CONFIGURATION_KEY","count":"1"},{"skyfunctionName":"FILE","count":"3948"},{"skyfunctionName":"DIRECTORY_LISTING_STATE","count":"362"},{"skyfunctionName":"BZL_LOAD","count":"837"},{"skyfunctionName":"CONFIGURED_TARGET","count":"5217"},{"skyfunctionName":"BUILD_INFO","count":"1"},{"skyfunctionName":"WORKSPACE_NAME","count":"1"},{"skyfunctionName":"REGISTERED_EXECUTION_PLATFORMS","count":"3"},{"skyfunctionName":"CLIENT_ENVIRONMENT_VARIABLE","count":"18"},{"skyfunctionName":"PLATFORM_MAPPING","count":"1"},{"skyfunctionName":"TARGET_COMPLETION","count":"215"},{"skyfunctionName":"PROJECT_FILES_LOOKUP","count":"199"},{"skyfunctionName":"ASPECT","count":"120"},{"skyfunctionName":"TARGET_PATTERN_PHASE","count":"1"}],"evaluatedValues":[{"skyfunctionName":"DIRECTORY_LISTING","count":"725"},{"skyfunctionName":"ACTION_ENVIRONMENT_VARIABLE","count":"37"},{"skyfunctionName":"IGNORED_SUBDIRECTORIES","count":"234"},{"skyfunctionName":"BUILD_CONFIGURATION","count":"6"},{"skyfunctionName":"BZLMOD_REPO_RULE","count":"131"},{"skyfunctionName":"STARLARK_BUILTINS","count":"4"},{"skyfunctionName":"REPO_FILE","count":"195"},{"skyfunctionName":"PLATFORM","count":"4"},{"skyfunctionName":"TARGET_PATTERN","count":"169"},{"skyfunctionName":"SINGLE_TOOLCHAIN_RESOLUTION","count":"9"},{"skyfunctionName":"SINGLE_EXTENSION","count":"51"},{"skyfunctionName":"PACKAGE","count":"1228"},{"skyfunctionName":"TOOLCHAIN_RESOLUTION","count":"32"},{"skyfunctionName":"ARTIFACT_NESTED_SET","count":"768"},{"skyfunctionName":"RECURSIVE_PKG","count":"998"},{"skyfunctionName":"REPOSITORY_DIRECTORY","count":"178"},{"skyfunctionName":"PACKAGE_ERROR_MESSAGE","count":"398"},{"skyfunctionName":"LOCAL_REPOSITORY_LOOKUP","count":"263"},{"skyfunctionName":"REGISTERED_TOOLCHAINS","count":"8"},{"skyfunctionName":"BAZEL_LOCK_FILE","count":"2"},{"skyfunctionName":"REPOSITORY_MAPPING","count":"100"},{"skyfunctionName":"PACKAGE_LOOKUP","count":"2257"},{"skyfunctionName":"BAZEL_DEP_GRAPH","count":"2"},{"skyfunctionName":"ARTIFACT","count":"1988"},{"skyfunctionName":"BASELINE_OPTIONS","count":"3"},{"skyfunctionName":"MODULE_FILE","count":"155"},{"skyfunctionName":"FILE_STATE","count":"3649"},{"skyfunctionName":"MODULE_EXTENSION_REPO_MAPPING_ENTRIES","count":"17"},{"skyfunctionName":"REGISTRY","count":"2"},{"skyfunctionName":"SINGLE_EXTENSION_USAGES","count":"17"},{"skyfunctionName":"SINGLE_EXTENSION_EVAL","count":"49"},{"skyfunctionName":"ACTION_EXECUTION","count":"1123"},{"skyfunctionName":"CONTAINING_PACKAGE_LOOKUP","count":"855"},{"skyfunctionName":"BAZEL_MODULE_RESOLUTION","count":"14"},{"skyfunctionName":"BUILD_DRIVER","count":"645"},{"skyfunctionName":"REPO_SPEC","count":"33"},{"skyfunctionName":"REPO_PACKAGE_ARGS","count":"110"},{"skyfunctionName":"GLOBS","count":"306"},{"skyfunctionName":"BUILD_CONFIGURATION_KEY","count":"3"},{"skyfunctionName":"FILE","count":"8198"},{"skyfunctionName":"DIRECTORY_LISTING_STATE","count":"362"},{"skyfunctionName":"BZL_LOAD","count":"2225"},{"skyfunctionName":"CONFIGURED_TARGET","count":"9182"},{"skyfunctionName":"BUILD_INFO","count":"1"},{"skyfunctionName":"WORKSPACE_NAME","count":"1"},{"skyfunctionName":"REGISTERED_EXECUTION_PLATFORMS","count":"3"},{"skyfunctionName":"CLIENT_ENVIRONMENT_VARIABLE","count":"18"},{"skyfunctionName":"PLATFORM_MAPPING","count":"2"},{"skyfunctionName":"TARGET_COMPLETION","count":"419"},{"skyfunctionName":"PROJECT_FILES_LOOKUP","count":"695"},{"skyfunctionName":"ASPECT","count":"136"},{"skyfunctionName":"TARGET_PATTERN_PHASE","count":"2"}]},"workerMetrics":[{"processId":37109,"mnemonic":"SwiftCompile","isMeasurable":true,"workerStats":[{"collectTimeInMs":"1742942857044","workerMemoryInKb":8784,"lastActionStartTimeInMs":"1742942856401"}],"workerIds":[1],"workerKeyHash":"99783676","workerStatus":"ALIVE","actionsExecuted":"16"},{"processId":37107,"mnemonic":"SwiftCompile","isMeasurable":true,"workerStats":[{"collectTimeInMs":"1742942857044","workerMemoryInKb":21744,"lastActionStartTimeInMs":"1742942856183"}],"workerIds":[2],"workerKeyHash":"99783676","workerStatus":"ALIVE","actionsExecuted":"26"},{"processId":37106,"mnemonic":"SwiftCompile","isMeasurable":true,"workerStats":[{"collectTimeInMs":"1742942857044","workerMemoryInKb":8064,"lastActionStartTimeInMs":"1742942856290"}],"workerIds":[3],"workerKeyHash":"99783676","workerStatus":"ALIVE","actionsExecuted":"28"},{"processId":37108,"mnemonic":"SwiftCompile","isMeasurable":true,"workerStats":[{"collectTimeInMs":"1742942857044","workerMemoryInKb":10112,"lastActionStartTimeInMs":"1742942856055"}],"workerIds":[4],"workerKeyHash":"99783676","workerStatus":"ALIVE","actionsExecuted":"34"}],"networkMetrics":{"systemNetworkStats":{"bytesSent":"12273664","bytesRecv":"2706432","packetsSent":"13300","packetsRecv":"5560","peakBytesSentPerSec":"2726356","peakBytesRecvPerSec":"6759789","peakPacketsSentPerSec":"2320","peakPacketsRecvPerSec":"4837"}},"workerPoolMetrics":{"workerPoolStats":[{"hash":99783676,"mnemonic":"SwiftCompile","createdCount":"4","aliveCount":"4"}]},"dynamicExecutionMetrics":{}}}
